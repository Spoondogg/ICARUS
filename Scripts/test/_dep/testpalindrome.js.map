{"version":3,"sources":["../../test/_dep/testpalindrome.js"],"names":["STRING","assert","require","describe","it","result","isPalindrome","expect","to","not","be","undefined","equal","str"],"mappings":"AAAA,oBACOA,WAAY,6BACnB,IAAIC,OAASC,QAAQ,UAKrBC,SAAS,wBAAyB,WACjCC,GAAG,iBAAkB,WACd,IAAIC,EAAS,IAAIL,OAAO,OAAOM,eACrCC,OAAOF,GAAQG,GAAGC,IAAIC,GAAGC,UACzBJ,OAAOF,GAAQG,GAAGI,OAAM,KAEzBR,GAAG,qBAAsB,WAClB,IAAIC,EAAS,IAAIL,OAAO,QAAQM,eACtCC,OAAOF,GAAQG,GAAGC,IAAIC,GAAGC,UACzBJ,OAAOF,GAAQG,GAAGI,OAAM,KAEzBR,GAAG,8BAA+B,WACjC,IACUC,EAAS,IAAIL,YADnBa,GAC+BP,eACnCC,OAAOF,GAAQG,GAAGC,IAAIC,GAAGC","file":"testpalindrome.js","sourcesContent":["'use strict';\r\nimport STRING from '../../src/icarus/STRING.js';\r\nvar assert = require('assert');\r\n//var expect = require('chai').expect;\r\n//var Palindrome = require('../fixtures/palindrome');\r\n//import Palindrome from '../fixtures/palindrome'\r\n\r\ndescribe('Palindrome Test Block', function() {\r\n\tit('for palindrome', function() {\r\n        var result = new STRING('tat').isPalindrome();\r\n\t\texpect(result).to.not.be.undefined;\r\n\t\texpect(result).to.equal(true);\r\n\t});\r\n\tit('for non palindrome', function() {\r\n        var result = new STRING('tata').isPalindrome();\r\n\t\texpect(result).to.not.be.undefined;\r\n\t\texpect(result).to.equal(false);\r\n\t});\r\n\tit('handling of undefined value', function() {\r\n\t\tvar str;\r\n        var result = new STRING(str).isPalindrome();\r\n\t\texpect(result).to.not.be.undefined;\r\n\t});\r\n});"]}