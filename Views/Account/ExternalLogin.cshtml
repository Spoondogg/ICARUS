@using ICARUS.Models
@using Microsoft.Owin.Security
@model ICARUS.Models.ExternalLoginListViewModel
@{
    ViewBag.Title = "ExternalLogin";
}
@{
    <h4>OAuth2 Login</h4>
    <hr />
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    @*
        See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
        for details on setting up this ASP.NET application to support logging in via external services.

        <form action="/Account/ExternalLogin/externalLogin?ReturnUrl=%2F" method="post"><input name="__RequestVerificationToken" type="hidden" value="L7fljV-KH9XiHlvE7NHN8T4NglvYyZT7YVhBs9MtyVDbZJ36w22cfLhoUFCmVUlz_A3CVz2IyuauXmDYcey5iJpbWCrju_JNsrGb1daOo_I1">            <div id="socialLoginList">
                <p>
                        <button type="submit" class="btn btn-default" id="Google" name="provider" value="Google" title="Log in using your Google account">
                        Google
                        </button>
                </p>
            </div>
        </form>

    *@
    if (loginProviders.Count() == 0) {
        <div><p>There are no external authentication services configured</p></div>
    } else {
        using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = "/" })) { //Model.ReturnUrl
            @Html.AntiForgeryToken()
            <div id="socialLoginList">
                <p>
                    @foreach (AuthenticationDescription p in loginProviders) {
                        <button type="submit" class="btn btn-default" id="@p.AuthenticationType"
                                name="provider" value="@p.AuthenticationType"
                                title="Log in using your @p.Caption account">
                            @p.AuthenticationType
                        </button>
                    }
                </p>
            </div>
        }
    }
}
@section viewInit {
    @if (User.Identity.IsAuthenticated) {
        <script type="text/javascript">
            console.log(100, 'You are already logged in.\nRedirecting...');
            setTimeout(() => {
                location.href = '/';
            }, 1000);
        </script>
    } else {
        <script src="@Url.Content("~/Scripts/dist/icarus/controller/init.js")" type="module"></script>
    }
}