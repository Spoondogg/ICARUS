@using ICARUS.Models
@using Microsoft.Owin.Security
@model ICARUS.Models.ExternalLoginListViewModel
@{
    ViewBag.Title = "ExternalLogin";
}
@{
    <h4>Use another service to log in.</h4>
    <hr />
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0) {
        <div>
            <p>
                There are no external authentication services configured.
                See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support logging in via external services.
            </p>
        </div>
    } else {
        using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = "/" })) { //Model.ReturnUrl
            @Html.AntiForgeryToken()
            <div id="socialLoginList">
                <p>
                    @foreach (AuthenticationDescription p in loginProviders) {
                        <button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>
                    }
                </p>
            </div>
        }
    }
}
@section viewInit {
    <script>document.getElementsByClassName('app')[0].style.display = 'none';</script>
    <script type="text/javascript">
        app.hide();
    </script>
}
@*section viewInit {
    @if (!User.Identity.IsAuthenticated) {
        <script type="text/javascript">
            app.loginExternal();
        </script>
    } else {
        <script type="text/javascript">
            app.loader.log(100, 'You are already logged in.\nRedirecting...');
            setTimeout(function () {
                location.href = '/';
            }, 1000);
        </script>
    }
}*@