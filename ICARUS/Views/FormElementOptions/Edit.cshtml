@model ICARUS.Models.FormElementOption
@{
    ViewBag.Title = "Edit";
}
<h2>Edit Form Element Option</h2>
@using (Html.BeginForm()){
    @Html.AntiForgeryToken()
    <h4>Modify values for Form Element @Model.id</h4>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)
    <div class="form-group">
        @Html.LabelFor(model => model.parentId, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.DropDownListFor(
                model => model.parentId,
                new SelectList(Model.elementItems, "Value", "Text", Model.SelectedElementId),
                new { @class = "form-control" }
            )
            @Html.ValidationMessageFor(model => model.parentId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.categoryId, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.DropDownListFor(
                model => model.categoryId,
                new SelectList(Model.categoryItems, "Value", "Text", Model.SelectedElementId),
                new { @class = "form-control" }
            )
            @Html.ValidationMessageFor(model => model.parentId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.label, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.label, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.label, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.typeId, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.DropDownListFor(
                model => model.typeId,
                new SelectList(Model.typeItems, "Value", "Text", Model.SelectedTypeId),
                new { @class = "form-control" }
            )
            @Html.ValidationMessageFor(model => model.typeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.value, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.value, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.value, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.childGroupId, htmlAttributes: new { @class = "control-label" })
        <script type="text/javascript">
            function updateIndexUrl(id) {
                var url = 'http://' + window.location.host + '/FormElements/Index/' + id;
                console.log('Url: '+url);
                document.getElementById('btn_Edit').setAttribute('href',url);
            }
            function updateCreateUrl(id) {
                var url = 'http://' + window.location.host + '/FormGroups/Create/' + id;
                console.log('Url: ' + url);
                document.getElementById('btn_Create').setAttribute('href', url);
            }
            function updateUrl(id) {
                updateIndexUrl(id);
                updateCreateUrl(id);
            }

        </script>
        <a id="btn_Edit" href="#" target="_blank">Edit Child Group</a> | <a id="btn_Create" href="#" target="_blank">Create Child Group</a>

        <div>
            @Html.DropDownListFor(
                model => model.childGroupId,
                new SelectList(Model.groupItems, "Value", "Text", Model.SelectedGroupId),
                new { @class = "form-control", @onchange = "updateUrl(document.getElementById('childGroupId').value); " }
            )
            @Html.ValidationMessageFor(model => model.childGroupId, "", new {
               @class = "text-danger"
            })
        </div>

        <script type="text/javascript">
            updateUrl(document.getElementById('childGroupId').value);
        </script>

    </div>
    <div class="form-group">
        <div>
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
}
<h4>
    @Html.ActionLink("Back to List", "Index")
</h4>
