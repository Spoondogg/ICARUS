{"version":3,"sources":["icarus/model/EL/modal/loader/LOADER.js"],"names":["MODAL","ATTRIBUTES","DIV","MODEL","CONSOLE","PROGRESSBAR","LOADER","[object Object]","value","label","text","super","this","addClass","el","setAttribute","dialog","progress","container","body","pane","progressBar","console","class","aria-expanded","onclick","$","collapse","well","insertBefore","log","show","style","width","txt","substr","setInnerHTML","addEntry","hide"],"mappings":"OAGOA,OAASC,WAAYC,IAAKC,UAAa,qBACvCC,YAAa,qCACbC,gBAAiB,kCAMT,MAAMC,eAAeN,MASnCO,YAAYC,EAAQ,EAAGC,EAAQ,GAAIC,EAAO,IACzCC,MAAMF,EAAOC,GAAM,GACnBE,KAAKC,SAAS,gBACdD,KAAKE,GAAGC,aAAa,OAAQ,UAE7BH,KAAKI,OAAOH,SAAS,UACrBD,KAAKK,SAAW,IAAIf,IAAIU,KAAKM,UAAUC,KAAKC,KAAM,IAAIjB,MAAM,IAAIF,WAAW,cAC3EW,KAAKS,YAAc,IAAIhB,YAAYO,KAAKK,SAAU,IAAId,OACtDS,KAAKU,QAAU,IAAIlB,QAAQQ,KAAKM,UAAUC,KAAKC,KAAM,IAAIjB,MAAM,IAAIF,WAAW,CAC7EsB,MAAS,sBACTC,iBAAiB,MAElBZ,KAAKS,YAAYP,GAAGW,QAAU,MAC7BC,EAAEd,KAAKU,QAAQR,IAAIa,SAAS,YAEzBf,KAAKgB,OACRF,EAAEd,KAAKK,SAASH,IAAIe,aAAajB,KAAKgB,KAAKd,IAC3CY,EAAEd,KAAKU,QAAQR,IAAIe,aAAajB,KAAKgB,KAAKd,KAE3CF,KAAKkB,IAAItB,GAUVD,IAAIC,EAAOE,EAAMqB,GAAO,GACvB,GAAInB,KAAKE,GAAI,CAGZ,GAFAF,KAAKS,YAAYP,GAAGkB,MAAMC,MAAQzB,EAAQ,IAC1CI,KAAKS,YAAYP,GAAGC,aAAa,gBAAiBP,GAC9CE,EAAM,CACT,IAAIwB,EAAMxB,EAAKyB,OAAO,EAAG,IAAM,MAC/BvB,KAAKS,YAAYe,aAAaF,GAC9BtB,KAAKU,QAAQe,SAAS3B,GACtBY,QAAQQ,IAAIpB,GAETqB,IACHnB,KAAKmB,OACS,MAAVvB,GACHI,KAAK0B,KAAK,YAIZhB,QAAQQ,IAAI,yBAOdvB,cACCmB,EAAEd,KAAKU,QAAQR,IAAIa,SAAS,QAM7BpB,cACCmB,EAAEd,KAAKU,QAAQR,IAAIa,SAAS","file":"LOADER.js","sourcesContent":["/**\r\n    @module\r\n*/\r\nimport MODAL, { ATTRIBUTES, DIV, MODEL } from '../MODAL.js';\r\nimport CONSOLE from '../../ul/console/CONSOLE.js';\r\nimport PROGRESSBAR from './PROGRESSBAR.js';\r\n/**\r\n    A Loader type modal.\r\n    @class\r\n    @extends MODAL\r\n*/\r\nexport default class LOADER extends MODAL {\r\n\t/**\r\n\t\t    Constructs a Loader\r\n\t        //this.el.setAttribute('data-backdrop', 'static');\r\n\t\t\t//this.el.setAttribute('data-keyboard', false);\r\n\t\t    @param {number} value Percentage complete (integer)\r\n\t        @param {string} label The header text for this modal\t    \r\n\t        @param {string} text Text that appears in modal's well\r\n\t\t */\r\n\tconstructor(value = 0, label = '', text = '') {\r\n\t\tsuper(label, text, true);\r\n\t\tthis.addClass('modal-loader');\r\n\t\tthis.el.setAttribute('name', 'LOADER');\r\n\t\t//this.dialog.el.style.width = '80%';\t\t\r\n\t\tthis.dialog.addClass('loader');\r\n\t\tthis.progress = new DIV(this.container.body.pane, new MODEL(new ATTRIBUTES('progress')));\r\n\t\tthis.progressBar = new PROGRESSBAR(this.progress, new MODEL());\r\n\t\tthis.console = new CONSOLE(this.container.body.pane, new MODEL(new ATTRIBUTES({\r\n\t\t\t'class': 'console collapse in',\r\n\t\t\t'aria-expanded': false\r\n\t\t})));\r\n\t\tthis.progressBar.el.onclick = () => {\r\n\t\t\t$(this.console.el).collapse('toggle');\r\n\t\t};\r\n\t\tif (this.well) {\r\n\t\t\t$(this.progress.el).insertBefore(this.well.el);\r\n\t\t\t$(this.console.el).insertBefore(this.well.el);\r\n\t\t}\r\n\t\tthis.log(value);\r\n\t}\r\n\t/**\r\n\t\t    Sets the progress bar status.\r\n\r\n\t\t    @param {number} value Percentage as integer (ie: 50 means 50%).\r\n\t\t    @param {string} text Text displayed inside progress bar.  \r\n\t        @param {boolean} show If true, the log will be displayed\r\n\t        @returns {void}\r\n\t\t*/\r\n\tlog(value, text, show = false) {\r\n\t\tif (this.el) {\r\n\t\t\tthis.progressBar.el.style.width = value + '%';\r\n\t\t\tthis.progressBar.el.setAttribute('aria-valuenow', value);\r\n\t\t\tif (text) {\r\n\t\t\t\tlet txt = text.substr(0, 32) + '...';\r\n\t\t\t\tthis.progressBar.setInnerHTML(txt);\r\n\t\t\t\tthis.console.addEntry(text);\r\n\t\t\t\tconsole.log(text);\r\n\t\t\t}\r\n\t\t\tif (show) {\r\n\t\t\t\tthis.show();\r\n\t\t\t\tif (value === 100) {\r\n\t\t\t\t\tthis.hide(1500);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.log('Unable to find loader');\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t\t    Shows the Loader Console\r\n\t        @returns {void}\r\n\t\t*/\r\n\tshowConsole() {\r\n\t\t$(this.console.el).collapse('show');\r\n\t}\r\n\t/**\r\n\t\t    Hides the Loader Console\r\n\t        @returns {void}\r\n\t\t*/\r\n\thideConsole() {\r\n\t\t$(this.console.el).collapse('hide');\r\n\t}\r\n}"]}