{"version":3,"sources":["model/EL/modal/prompt/PROMPT.js"],"names":["FORM","FORMINPUT","FORMPOSTINPUT","MODAL","PROMPT","[object Object]","label","text","buttons","inputs","vertical","super","this","addClass","form","createEmptyForm","container","body","pane","prompt","promptInputs","addInputs","addButtons","i","length","inp","type","push","formElementGroup","children","b","footer","buttonGroup","addButton"],"mappings":"OAIOA,SAAU,4BACVC,cAAe,4DACfC,kBAAmB,oEACnBC,UAAW,6BAOH,MAAMC,eAAeD,MAQnCE,YAAYC,EAAOC,EAAMC,EAASC,EAAQC,GACzCC,MAAML,EAAOC,EAAMG,GACnBE,KAAKC,SAAS,UACdD,KAAKE,KAAOd,KAAKe,gBAAgBH,KAAKI,UAAUC,KAAKC,MAAM,GAC3DN,KAAKE,KAAKK,OAASP,KACnBA,KAAKQ,aAAe,GACpBR,KAAKS,UAAUZ,GACfG,KAAKU,WAAWd,GAOjBH,UAAUI,GACT,GAAIA,EACH,IAAK,IAAIc,EAAI,EAAGA,EAAId,EAAOe,OAAQD,IAAK,CAEvC,IAAIE,EAAM,KACa,kBAAnBhB,EAAOc,GAAGG,KAEbd,KAAKQ,aAAaO,KAAK,IAAIzB,cAAcU,KAAKgB,iBAAiBX,KAAKC,KAAMT,EAAOc,KAEjFX,KAAKQ,aAAaO,KAAK,IAAI1B,UAAUW,KAAKgB,iBAAiBX,KAAKC,KAAMT,EAAOc,KAE9EX,KAAKgB,iBAAiBC,SAASF,KAAKF,IASvCpB,WAAWG,GACV,GAAIA,EACH,IAAK,IAAIsB,EAAI,EAAGA,EAAItB,EAAQgB,OAAQM,IACnClB,KAAKE,KAAKiB,OAAOC,YAAYC,UAAUzB,EAAQsB,GAAG,GAAItB,EAAQsB,GAAG,GAAItB,EAAQsB,GAAG,YAK3E3B","file":"PROMPT.js","sourcesContent":["/**\r\n    A Prompt Modal module\r\n    @module\r\n*/\r\nimport FORM from '../../form/FORM.js';\r\nimport FORMINPUT from '../../container/formelement/forminput/FORMINPUT.js';\r\nimport FORMPOSTINPUT from '../../container/formelement/formpostinput/FORMPOSTINPUT.js';\r\nimport MODAL from '../MODAL.js';\r\n/**\r\n    A modal prompt\r\n    @description Creates a modal and displays a text well and any included buttons\r\n    @class\r\n    @extends MODAL\r\n*/\r\nexport default class PROMPT extends MODAL {\r\n\t/**\r\n\t    @param {string} label The label\r\n\t    @param {string} text The html text that is displayed in the prompt's well\r\n\t    @param {array} buttons Array of [label, glyphicon, buttonType]\r\n\t    @param {array} inputs Array of inputs\r\n\t    @param {boolean} vertical If true, prompt is vertically centered\r\n\t */\r\n\tconstructor(label, text, buttons, inputs, vertical) {\r\n\t\tsuper(label, text, vertical);\r\n\t\tthis.addClass('prompt');\r\n\t\tthis.form = FORM.createEmptyForm(this.container.body.pane, false);\r\n\t\tthis.form.prompt = this;\r\n\t\tthis.promptInputs = [];\r\n\t\tthis.addInputs(inputs);\r\n\t\tthis.addButtons(buttons);\r\n\t}\r\n\t/**\r\n\t    Adds the provided inputs to the prompt\r\n\t    @param {Array} inputs An array of inputs\r\n\t    @returns {void}\r\n\t*/\r\n\taddInputs(inputs) {\r\n\t\tif (inputs) {\r\n\t\t\tfor (let i = 0; i < inputs.length; i++) {\r\n\t\t\t\t//DEBUG.log('inputs[' + i + ']: ' + inputs[i].type);\r\n\t\t\t\tlet inp = null;\r\n\t\t\t\tif (inputs[i].type === 'FORMPOSTINPUT') {\r\n\t\t\t\t\t//DEBUG.log('FORMPOSTINPUT');\r\n\t\t\t\t\tthis.promptInputs.push(new FORMPOSTINPUT(this.formElementGroup.body.pane, inputs[i]));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.promptInputs.push(new FORMINPUT(this.formElementGroup.body.pane, inputs[i]));\r\n\t\t\t\t}\r\n\t\t\t\tthis.formElementGroup.children.push(inp);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t    Adds the provided buttons to the prompt\r\n\t    @param {Array} buttons An array of buttons\r\n\t    @returns {void}\r\n\t*/\r\n\taddButtons(buttons) {\r\n\t\tif (buttons) {\r\n\t\t\tfor (let b = 0; b < buttons.length; b++) {\r\n\t\t\t\tthis.form.footer.buttonGroup.addButton(buttons[b][0], buttons[b][1], buttons[b][2]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nexport { MODAL };"]}