{"version":3,"sources":["icarus/model/EL/svg/SVG.js"],"names":["EL","ATTRIBUTES","MODEL","SVG","[object Object]","node","viewbox","svgObj","fill","super","viewBox","this","path","d"],"mappings":"OAGOA,IAAMC,WAAYC,UAAa,0BAMvB,MAAMC,YAAYH,GAQhCI,YAAYC,EAAMC,EAASC,EAAQC,GAClCC,MAAMJ,EAAM,MAAO,IAAIH,MAAM,IAAID,WAAW,CAAES,QAAWJ,MACzDK,KAAKC,KAAO,IAAIZ,GAAGW,KAAM,OAAQ,IAAIT,MAAM,IAAID,WAAW,CAEzDO,KAAAA,EACAK,EAAKL","file":"SVG.js","sourcesContent":["/*\r\n    @module\r\n*/\r\nimport EL, { ATTRIBUTES, MODEL } from '../EL.js';\r\n/**\r\n    Creates a scaleable vector graphic\r\n    @class\r\n    @extends EL\r\n*/\r\nexport default class SVG extends EL {\r\n\t/**\r\n\t    Constructs an SVG Object\r\n\t    @param {EL} node The element that this SVG is appended to\r\n\t    @param {string} viewbox The 4 coordinates representing the SVG viewbox @example '0 0 32 32'\r\n\t    @param {object} svgObj The svg object retrieved from the server\r\n\t    @param {string} fill A hex based color value\r\n\t */\r\n\tconstructor(node, viewbox, svgObj, fill) {\r\n\t\tsuper(node, 'SVG', new MODEL(new ATTRIBUTES({ 'viewBox': viewbox }))); // '0 0 32 32'\r\n\t\tthis.path = new EL(this, 'PATH', new MODEL(new ATTRIBUTES({\r\n\t\t\t//'fill': fill, // ? fill : svgObj.fill,\r\n\t\t\tfill,\r\n\t\t\t'd': fill //svgObj.fill\r\n\t\t})));\r\n\t}\r\n}\r\n/*\r\n    A legacy approach to creating an SVG\r\n    @class\r\n    @deprecated\r\n    @description \r\n    Preload scalable vector graphic Object into memory\r\n    viewbox: \t    object dimensions ie: '0 0 48 48' equals a 48px box\r\n    fill:\t\t\tobject color value (hex,rgba) '#fff'\r\n    path:           object path values\r\n    svgObj:         SVG Object loaded into memory via loadJSON(svgURL);\r\n    viewbox:\r\n\t\t\t\t\tminx—the beginning x coordinate\r\n\t\t\t\t\tminy—the beginning y coordinate\r\n\t\t\t\t\twidth—width of the view box\r\n\t\t\t\t\theight—height of the view box\r\n    \r\n\r\nclass SVG_LEGACY {\r\n\tconstructor(node, viewbox, svgObj, fill) {\r\n\t\tsuper(node, 'SVG', new MODEL());\r\n\t\tthis.svg = node.appendChild(document.createElementNS('http://www.w3.org/2000/svg', 'SVG'));\r\n\t\tthis.svg.setAttribute('viewBox', '0 0 32 32'); // temporary fixed size\t\r\n\t\tthis.svg.path = this.el.appendChild(document.createElementNS('http://www.w3.org/2000/svg', 'path'));\r\n\t\tthis.svg.path.setAttribute('fill', fill ? fill : svgObj.fill);\r\n\t\tthis.svg.path.setAttribute('d', svgObj.path);\r\n\t}\r\n}*/"]}