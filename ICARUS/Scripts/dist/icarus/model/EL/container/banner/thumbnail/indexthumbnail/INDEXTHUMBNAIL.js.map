{"version":3,"sources":["model/EL/container/banner/thumbnail/indexthumbnail/INDEXTHUMBNAIL.js"],"names":["CONTAINER","ATTRIBUTES","EL","MODEL","HEADER","IMG","MENULIST","MODAL","P","THUMBNAIL","INDEXTHUMBNAIL","[object Object]","node","model","super","this","setClass","console","log","addModal","addDataListNavItems","modal","show","data","header","container","body","pane","addClass","image","src","el","set","label","p","style","previewNotes","class","preview","listClass","toUpperCase","menulist","name","li","list","length","title","id","menu","addNavItem","onclick","empty","launchPreview","delay","className","setTimeout","$","getJSON","result","create","innerHTML"],"mappings":"MAGO,4CACAA,WAAaC,WAAYC,GAAIC,UAAa,+BAC1CC,WAAY,sCACZC,QAAS,gCACTC,aAAc,uCACdC,UAAW,oCACXC,MAAO,4BACPC,cAAe,iCAOP,MAAMC,uBAAuBD,UAM3CE,YAAYC,EAAMC,GACjBC,MAAMF,EAAMC,GACZE,KAAKC,SAAS,wDASfL,cACCM,QAAQC,IAAI,gCACZH,KAAKI,WACLJ,KAAKK,sBACLL,KAAKM,MAAMC,OAMZX,WAoBC,OAnBAI,KAAKM,MAAQ,IAAId,MAAMQ,KAAKQ,KAAKC,QACjCT,KAAKM,MAAMI,UAAUC,KAAKC,KAAKC,SAAS,6BACxCb,KAAKM,MAAMI,UAAUI,MAAQ,IAAIxB,IAAIU,KAAKM,MAAMI,UAAUC,KAAKC,KAAM,IAAIxB,MAAM,IAAIF,WAAW,CAAE6B,IAAOf,KAAKc,MAAME,GAAGD,QAErHf,KAAKM,MAAMI,UAAUD,OAAS,IAAIpB,OAAOW,KAAKM,MAAMI,UAAUC,KAAKC,MAAM,IAAIxB,OAAQ6B,IAAI,CACxFC,MAASlB,KAAKQ,KAAKC,UAEpBT,KAAKM,MAAMI,UAAUS,EAAI,IAAI1B,EAAEO,KAAKM,MAAMI,UAAUC,KAAKC,KAAM,IAAIxB,MAAM,IAAIF,WAAW,CACvFkC,MAAS,kBACLpB,KAAKQ,KAAKW,GACfnB,KAAKM,MAAMI,UAAUW,aAAe,IAAIlC,GAAGa,KAAKM,MAAMI,UAAUC,KAAKC,KAAM,MAAO,IAAIxB,MAAM,IAAIF,WAAW,CAC1GoC,MAAS,mBACL,IACLtB,KAAKM,MAAMI,UAAUa,QAAU,IAAItC,UAAUe,KAAKM,MAAMI,UAAUC,KAAKC,KAAM,MAAO,IAAIxB,MAAM,IAAIF,WAAW,YAAa,CAACc,KAAKQ,KAAKgB,UAAUC,gBAE/IzB,KAAKM,MAAMI,UAAUgB,SAAW,IAAInC,SAASS,KAAKM,MAAMI,UAAUC,KAAKC,KAAM,IAAIxB,MAAM,4BAA4B6B,IAAI,CACtHU,KAAQ,eACRT,MAASlB,KAAKQ,KAAKgB,UAAY,SAEzBxB,KAAKM,MAMbV,sBACC,IAAK,IAAIgC,EAAK,EAAGA,EAAK5B,KAAKQ,KAAKqB,KAAKC,OAAQF,IAAM,CAClD,IAAIG,EAAQ/B,KAAKQ,KAAKqB,KAAKD,GAAIV,MAAQ,KAAOlB,KAAKQ,KAAKgB,UAAY,IAAMxB,KAAKQ,KAAKqB,KAAKD,GAAII,GAAK,KAClGhC,KAAKM,MAAMI,UAAUgB,SAASO,KAAKC,YAAW,IAAI9C,OAAQ6B,IAAI,CAC7DC,MAASa,KACNf,GAAGmB,QAAU,MAChBnC,KAAKM,MAAMI,UAAUa,QAAQZ,KAAKC,KAAKwB,QACvCpC,KAAKqC,cAAc,IAAKN,EAAO/B,KAAKM,MAAMI,UAAUa,QAAQZ,KAAKC,KAAMZ,KAAKQ,KAAKgB,UAAWxB,KAAKQ,KAAKqB,KAAKD,GAAII,OAalHpC,cAAc0C,EAAQ,IAAKC,EAAWP,GACrCQ,WAAW,KACVC,EAAEC,QAAQ,IAAMH,EAAY,QAAUP,EAAKW,IAC1CzC,QAAQC,IAAIoC,EAAWI,GACvB3C,KAAKM,MAAMI,UAAUa,QAAQqB,OAAOD,EAAO7C,UAE1CwC,GAKHE,WAAW,KACVC,EAAEC,QAAQ,IAAMH,EAAY,wBAA0BP,EAAKW,IAC1DzC,QAAQC,IAAIoC,EAAY,YAAaI,EAAQA,EAAOb,OAAS,sBAE7D9B,KAAKM,MAAMI,UAAUW,aAAaL,GAAG6B,UAAY,sBAAwBF,EAAOb,UAE/EQ","file":"INDEXTHUMBNAIL.js","sourcesContent":["/**\r\n    @module\r\n*/\r\nimport '../../../../../../StringMethods.js';\r\nimport CONTAINER, { ATTRIBUTES, EL, MODEL } from '../../../CONTAINER.js';\r\nimport HEADER from '../../../../header/HEADER.js';\r\nimport IMG from '../../../../img/IMG.js';\r\nimport MENULIST from '../../../menulist/MENULIST.js';\r\nimport MODAL from '../../../../modal/MODAL.js';\r\nimport P from '../../../../p/P.js';\r\nimport THUMBNAIL from '../THUMBNAIL.js';\r\n/**\r\n    A thumbnail with a preview window and a list of Containers\r\n    that can be loaded into the preview\r\n    @class\r\n    @extends THUMBNAIL\r\n*/\r\nexport default class INDEXTHUMBNAIL extends THUMBNAIL {\r\n\t/**\r\n\t    Constructs a Bootstrap Jumbotron.\r\n\t    @param {CONTAINER} node The model\r\n\t    @param {MODEL} model Object Model\r\n\t */\r\n\tconstructor(node, model) {\r\n\t\tsuper(node, model);\r\n\t\tthis.setClass('col-xs-12 col-vs-6 col-sm-6 col-md-4 col-lg-offset-0');\r\n\t\t//this.construct();\r\n\t\t//this.populate(model.children);\r\n\t}\r\n\t/**\r\n\t\t    Creates the Modal that contains the list of objects for preview\r\n\t\t    @todo Consider paging these results\r\n\t        @returns {void}\r\n\t\t*/\r\n\tlaunchModal() {\r\n\t\tconsole.log('Launch Index Thumbnail Modal');\r\n\t\tthis.addModal();\r\n\t\tthis.addDataListNavItems();\r\n\t\tthis.modal.show();\r\n\t}\r\n\t/**\r\n\t\t    Creates a MODAL and populates its Container with a Header, Image and various details\r\n\t        @returns {MODAL} A Thumbnail MODAL\r\n\t\t*/\r\n\taddModal() {\r\n\t\tthis.modal = new MODAL(this.data.header);\r\n\t\tthis.modal.container.body.pane.addClass('thumbnail index-thumbnail');\r\n\t\tthis.modal.container.image = new IMG(this.modal.container.body.pane, new MODEL(new ATTRIBUTES({ 'src': this.image.el.src })));\r\n\t\t//this.modal.container.image.el.src = this.image.el.src;\r\n\t\tthis.modal.container.header = new HEADER(this.modal.container.body.pane, new MODEL().set({\r\n\t\t\t'label': this.data.header\r\n\t\t}));\r\n\t\tthis.modal.container.p = new P(this.modal.container.body.pane, new MODEL(new ATTRIBUTES({\r\n\t\t\t'style': 'height:auto;'\r\n\t\t})), this.data.p);\r\n\t\tthis.modal.container.previewNotes = new EL(this.modal.container.body.pane, 'DIV', new MODEL(new ATTRIBUTES({\r\n\t\t\t'class': 'preview-notes'\r\n\t\t})), '');\r\n\t\tthis.modal.container.preview = new CONTAINER(this.modal.container.body.pane, 'DIV', new MODEL(new ATTRIBUTES('preview')), [this.data.listClass.toUpperCase()]);\r\n\t\t//this.modal.container.preview.el.setAttribute('style', 'height:400px;max-height:400px;overflow-y:auto;');\r\n\t\tthis.modal.container.menulist = new MENULIST(this.modal.container.body.pane, new MODEL('index-thumbnail-menulist').set({\r\n\t\t\t'name': 'preview-list',\r\n\t\t\t'label': this.data.listClass + '(s)'\r\n\t\t}));\r\n\t\treturn this.modal;\r\n\t}\r\n\t/**\r\n\t\t    Adds NavItems for each data list\r\n\t        @returns {void}\r\n\t\t*/\r\n\taddDataListNavItems() {\r\n\t\tfor (let li = 0; li < this.data.list.length; li++) {\r\n\t\t\tlet title = this.data.list[li].label + ' (' + this.data.listClass + '[' + this.data.list[li].id + '])';\r\n\t\t\tthis.modal.container.menulist.menu.addNavItem(new MODEL().set({\r\n\t\t\t\t'label': title\r\n\t\t\t})).el.onclick = () => {\r\n\t\t\t\tthis.modal.container.preview.body.pane.empty();\r\n\t\t\t\tthis.launchPreview(500, title, this.modal.container.preview.body.pane, this.data.listClass, this.data.list[li].id);\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t        Creates a modal and loads the specified container\r\n\t        @param {number} delay Delay in milliseconds\r\n\t        param {string} title Modal Title\r\n\t        param {EL} node Modal node to append to\r\n\t        @param {string} className Object class name\r\n\t        @param {number} id Object id\r\n\t        @returns {void}\r\n\t\t*/\r\n\tlaunchPreview(delay = 500, className, id) { //title = 'Preview', // node\r\n\t\tsetTimeout(() => {\r\n\t\t\t$.getJSON('/' + className + '/Get/' + id, (result) => {\r\n\t\t\t\tconsole.log(className, result);\r\n\t\t\t\tthis.modal.container.preview.create(result.model);\r\n\t\t\t});\r\n\t\t}, delay);\r\n\t\t/**\r\n\t\t            Get a list of Parents for this Container\r\n\t\t            @returns {void}\r\n\t\t        */\r\n\t\tsetTimeout(() => {\r\n\t\t\t$.getJSON('/' + className + '/GetContainerParents/' + id, (result) => {\r\n\t\t\t\tconsole.log(className + ' Parents:', result, result.length + ' parent Containers');\r\n\t\t\t\t//this.modal.container.previewNotes.el.innerHTML = 'Parent Containers: ' + result.length;\r\n\t\t\t\tthis.modal.container.previewNotes.el.innerHTML = 'Parent Containers: ' + result.length;\r\n\t\t\t});\r\n\t\t}, delay);\r\n\t}\r\n}"]}