{"version":3,"sources":["icarus/model/EL/container/banner/thumbnail/THUMBNAIL.js"],"names":["CONTAINER","ATTRIBUTES","EL","MODEL","BUTTONGROUP","HEADER","ICONS","IMG","MODAL","P","THUMBNAIL","[object Object]","node","model","super","this","setClass","body","pane","addClass","image","header","set","label","data","p","String","truncate","buttonGroup","button","addButton","CHEVRON_RIGHT","dataId","parsed","img","Number","isInteger","parseInt","$","getJSON","jsonResults","JSON","parse","length","name","value","el","src","base64","ee","console","log","showImageDetails","innerHTML","filename","id","fileSize","dimX","dimY","fileType","e","onclick","launchModal","bind","modal","container","style","show"],"mappings":"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","file":"THUMBNAIL.js","sourcesContent":["/**\r\n    @module\r\n*/\r\nimport CONTAINER, { ATTRIBUTES, EL, MODEL } from '../../CONTAINER.js';\r\nimport BUTTONGROUP from '../../../group/buttongroup/BUTTONGROUP.js';\r\nimport HEADER from '../../../header/header.js';\r\nimport { ICONS } from '../../../../../enums/ICONS.js';\r\nimport IMG from '../../../img/IMG.js';\r\nimport MODAL from '../../../modal/MODAL.js';\r\nimport P from '../../../p/P.js';\r\n/**\r\n    Jumbotron with centered icon and text\r\n    @class\r\n    @extends CONTAINER\r\n*/\r\nexport default class THUMBNAIL extends CONTAINER {\r\n\t/**\r\n\t    Constructs a Bootstrap Jumbotron.\r\n\t    @param {CONTAINER} node The model\r\n\t     @param {MODEL} model Object Model\r\n\t */\r\n\tconstructor(node, model) {\r\n\t\tsuper(node, 'DIV', model);\r\n\t\tthis.setClass('col-xs-12 col-sm-6 col-md-4 col-lg-offset-0'); // Override icarus-container \r\n\t\tthis.body.pane.addClass('thumbnail');\r\n\t\t//this.image = new IMG(this.body.pane, new MODEL());\r\n\t\t//this.construct();\r\n\t\t//this.populate(model.children);\r\n\t}\r\n\tconstruct() {\r\n\t\tthis.image = new IMG(this.body.pane, new MODEL());\r\n\t\tthis.header = new HEADER(this.body.pane, new MODEL().set({ 'label': this.data.header }));\r\n\t\tthis.p = new P(this.body.pane, new MODEL(), String(this.data.p).truncate(128));\r\n\t\tthis.buttonGroup = new BUTTONGROUP(this.body.pane, 'btn-block');\r\n\t\tthis.button = this.buttonGroup.addButton('', ICONS.CHEVRON_RIGHT);\r\n\t\tthis.button.addClass('btn-block');\r\n\t\tif (this.dataId > 0 || this.dataId === -1) {\r\n\t\t\tlet parsed = null;\r\n\t\t\tif (this.data.img) {\r\n\t\t\t\t// If this.data.img is integer, retrieve relevant formpost\r\n\t\t\t\tif (Number.isInteger(parseInt(this.data.img))) {\r\n\t\t\t\t\t// Test to see if the formpost can be retrieved\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\t$.getJSON('/FORMPOST/Get/' + parseInt(this.data.img), (data) => { // If access granted...\r\n\t\t\t\t\t\t\tif (data.model) {\r\n\t\t\t\t\t\t\t\tif (data.model.jsonResults) {\r\n\t\t\t\t\t\t\t\t\tparsed = JSON.parse(data.model.jsonResults);\r\n\t\t\t\t\t\t\t\t\t// Extract the base64 values and create an image\r\n\t\t\t\t\t\t\t\t\tlet img = {};\r\n\t\t\t\t\t\t\t\t\tfor (let p = 0; p < parsed.length; p++) {\r\n\t\t\t\t\t\t\t\t\t\timg[parsed[p].name] = parsed[p].value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t\t//this.image.el.src = img['base64'];\r\n\t\t\t\t\t\t\t\t\t\tthis.image.el.src = img.base64;\r\n\t\t\t\t\t\t\t\t\t} catch (ee) {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Unable to set Thumbnail image', img);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// Set text in Thumbnail when required (see ImageGallery.js)\r\n\t\t\t\t\t\t\t\t\tif (this.data.showImageDetails) {\r\n\t\t\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t\t\t//this.image.el.src = img['base64'];\r\n\t\t\t\t\t\t\t\t\t\t\t//this.header.el.innerHTML = img['filename'];\r\n\t\t\t\t\t\t\t\t\t\t\tthis.header.el.innerHTML = img.filename;\r\n\t\t\t\t\t\t\t\t\t\t\t//this.p.el.innerHTML = 'Id: ' + img['id'] + '<br>' + 'Filesize: ' + img['fileSize'] + 'kb (' + img['dimX'] + ' x ' + img['dimY'] + ')<br>' + img['fileType'];\r\n\t\t\t\t\t\t\t\t\t\t\tthis.p.el.innerHTML = 'Id: ' + img.id + '<br>Filesize: ' + img.fileSize + 'kb (' + img.dimX + ' x ' + img.dimY + ')<br>' + img.fileType;\r\n\t\t\t\t\t\t\t\t\t\t} catch (ee) {\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('Unable to set Thumbnail attributes', img);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tconsole.log('Json Results empty');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tconsole.log('Unable to retrieve FormPost.', e);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.image = new IMG(this.body.pane, new MODEL(new ATTRIBUTES({ 'src': this.data.img })));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.button.el.onclick = this.launchModal.bind(this);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t\t    Launches a modal that contains the detailed view of the given article\r\n\t        @returns {void}\r\n\t\t */\r\n\tlaunchModal() {\r\n\t\tconsole.log('Launch Modal');\r\n\t\tthis.modal = new MODAL(this.data.header);\r\n\t\tthis.modal.container.body.pane.addClass('thumbnail');\r\n\t\tthis.modal.container.image = new IMG(this.modal.container.body.pane, new MODEL());\r\n\t\tthis.modal.container.image.el.src = this.image.el.src;\r\n\t\tthis.modal.container.header = new HEADER(this.modal.container.body.pane, new MODEL().set({\r\n\t\t\t'label': this.data.header\r\n\t\t}));\r\n\t\tthis.modal.container.p = new P(this.modal.container.body.pane, new MODEL(new ATTRIBUTES({\r\n\t\t\t'style': 'height:auto;'\r\n\t\t})), this.data.p);\r\n\t\tthis.modal.show();\r\n\t}\r\n}\r\nexport { ATTRIBUTES, EL, MODEL };"]}