{"version":3,"sources":["model/EL/container/banner/index/INDEX.js"],"names":["CONTAINER","ATTRIBUTES","MODEL","BANNER","DIV","HEADER","ICONS","MENU","MENULIST","MODAL","P","INDEX","[object Object]","node","model","super","this","addClass","menu","body","pane","set","label","collapsed","showHeader","forEach","element","addThumbButtonActions","addNavItemIcon","icon","toUpperCase","dataId","data","header","p","thumb","$","post","__RequestVerificationToken","getToken","payload","status","str","list","length","className","el","setAttribute","onclick","launchModal","listClass","console","log","modal","container","style","previewNotes","class","preview","menulist","name","li","title","id","addNavItem","empty","launchPreview","show","delay","setTimeout","getJSON","result","create","innerHTML"],"mappings":"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","file":"INDEX.js","sourcesContent":["/** @module  */\r\nimport CONTAINER, { ATTRIBUTES, MODEL } from '../../CONTAINER.js';\r\nimport BANNER from '../BANNER.js';\r\nimport DIV from '../../../div/DIV.js';\r\nimport HEADER from '../../../header/HEADER.js';\r\nimport { ICONS } from '../../../../../enums/ICONS.js';\r\nimport MENU from '../../../nav/menu/MENU.js';\r\nimport MENULIST from '../../menulist/MENULIST.js';\r\nimport MODAL from '../../../modal/MODAL.js';\r\nimport P from '../../../p/P.js';\r\n/** Contains a high level view of all objects owned by this user\r\n    @class\r\n    @extends BANNER\r\n*/\r\nexport default class INDEX extends BANNER {\r\n\t/** Constructs a SECTION Container Element\r\n\t    @param {CONTAINER} node Parent node\r\n\t    @param {MODEL} model INDEX model\t    \r\n    */\r\n\tconstructor(node, model) {\r\n\t\tsuper(node, model);\r\n\t\tthis.addClass('index');\r\n    }\r\n\tconstruct() {\r\n        this.menu = new MENU(this.body.pane, new MODEL('horizontal collapse').set({\r\n            'label': 'INDEX',\r\n            'collapsed': 1,\r\n            'showHeader': 1\r\n\t\t}));\r\n        ['ARTICLE', 'FORM', 'JUMBOTRON', 'BANNER', 'CALLOUT', 'THUMBNAIL', 'CHAT', 'DICTIONARY', 'WORD', 'IMAGEGALLERY']\r\n        .forEach((element) => {\r\n            this.addThumbButtonActions(element,\r\n                this.menu.addNavItemIcon(new MODEL().set({\r\n                    'icon': ICONS[element.toUpperCase()],\r\n                    'label': element,\r\n                    'dataId': -1,\r\n                    'data': {\r\n                        'header': element,\r\n                        'p': '&nbsp;'\r\n                    }\r\n                }))\r\n            );\r\n        });\r\n\t}\r\n\t/** Posts to the given element and retrieves a list of available instances, \r\n\t    then assigns relevant actions to it\r\n\t    @param {string} element The name of the element \r\n\t    @param {NAVITEMICON} thumb A NAVITEMICON that represents the given element\r\n\t    @returns {void}\r\n\t    @async\r\n\t*/\r\n\taddThumbButtonActions(element, thumb) {\r\n\t\t$.post('/' + element + '/List', {\r\n\t\t\t'__RequestVerificationToken': this.getToken()\r\n\t\t}, (payload, status) => {\r\n\t\t\tif (status === 'success') {\r\n\t\t\t\tlet str = 'There are ' + payload.list.length + ' instances of ' + payload.className;\r\n\t\t\t\tthumb.el.setAttribute('title', str);\r\n\t\t\t\tthumb.el.onclick = () => {\r\n\t\t\t\t\tthis.launchModal(payload.className, str, payload.className, payload.list);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t/** Creates the Modal that contains the list of objects for preview\r\n        @todo Consider paging these results\r\n        @param {string} header Header text\r\n        @param {string} p paragraph\r\n        @param {string} listClass element class\r\n        @param {Array} list A list\r\n        @returns {void}\r\n    */\r\n\tlaunchModal(header, p, listClass, list) {\r\n\t\tconsole.log('Launch Index Thumbnail Modal');\r\n\t\tthis.modal = new MODAL(header);\r\n\t\tthis.modal.container.body.pane.addClass('thumbnail index-thumbnail');\r\n\t\t//this.modal.container.image = new IMG(this.modal.container.body.pane, new MODEL());\r\n\t\t//this.modal.container.image.el.src = this.image.el.src;\r\n\t\tthis.modal.container.header = new HEADER(this.modal.container.body.pane, new MODEL().set({\r\n\t\t\t'label': header\r\n\t\t}));\r\n\t\tthis.modal.container.p = new P(this.modal.container.body.pane, new MODEL(new ATTRIBUTES({\r\n\t\t\t'style': 'height:auto;'\r\n\t\t})), p);\r\n\t\tthis.modal.container.previewNotes = new DIV(this.modal.container.body.pane, new MODEL(new ATTRIBUTES({\r\n\t\t\t'class': 'preview-notes'\r\n\t\t})), '');\r\n\t\tthis.modal.container.preview = new CONTAINER(this.modal.container.body.pane, 'DIV', new MODEL(new ATTRIBUTES('preview')),\r\n\t\t\t[listClass.toUpperCase()]);\r\n\t\tthis.modal.container.preview.el.setAttribute('style', 'height:400px;max-height:400px;overflow-y:auto;');\r\n\t\tthis.modal.container.menulist = new MENULIST(this.modal.container.body.pane, new MODEL(new ATTRIBUTES({\r\n\t\t\t'style': 'max-height:200px;overflow-y:auto;'\r\n\t\t})).set({\r\n\t\t\t'name': 'preview-list',\r\n\t\t\t'label': listClass + '(s)'\r\n\t\t}));\r\n\t\tfor (let li = 0; li < list.length; li++) {\r\n\t\t\tlet title = list[li].label + ' (' + listClass + '[' + list[li].id + '])';\r\n\t\t\tthis.modal.container.menulist.menu.addNavItem(new MODEL().set({\r\n\t\t\t\t'label': title\r\n\t\t\t})).el.onclick = () => {\r\n\t\t\t\tthis.modal.container.preview.body.pane.empty();\r\n\t\t\t\tthis.launchPreview(500, listClass, list[li].id); // title, this.modal.container.preview.body.pane,\r\n\t\t\t};\r\n\t\t}\r\n\t\tthis.modal.show();\r\n\t}\r\n\t/**\r\n\t        Creates a modal and loads the specified container\r\n\t        @param {number} delay Delay in milliseconds\r\n\t        param {string} title Modal Title\r\n\t        param {EL} node Modal node to append to\r\n\t        @param {string} className Object class name\r\n\t        @param {number} id Object id\r\n\t        @returns {void}\r\n\t\t*/\r\n\tlaunchPreview(delay = 500, className, id) { // title = 'Preview', // node\r\n\t\tsetTimeout(() => {\r\n\t\t\t$.getJSON('/' + className + '/Get/' + id, (result) => {\r\n\t\t\t\tconsole.log(className, result);\r\n\t\t\t\tthis.modal.container.preview.create(result.model);\r\n\t\t\t});\r\n\t\t}, delay);\r\n\t\tsetTimeout(() => {\r\n\t\t\t$.getJSON('/' + className + '/GetContainerParents/' + id, (result) => {\r\n\t\t\t\tconsole.log(className + ' Parents:', result, result.length + ' parent Containers');\r\n\t\t\t\t//this.modal.container.previewNotes.el.innerHTML = 'Parent Containers: ' + result.length;\r\n\t\t\t\tthis.modal.container.previewNotes.el.innerHTML = 'Parent Containers: ' + result.length;\r\n\t\t\t});\r\n\t\t}, delay);\r\n\t}\r\n}"]}