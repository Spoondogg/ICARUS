{"version":3,"sources":["model/EL/container/banner/index/INDEX.js"],"names":["CONTAINER","ATTRIBUTES","MODEL","BANNER","DIV","HEADER","ICONS","MENU","MENULIST","MODAL","P","INDEX","[object Object]","node","model","super","this","addClass","menu","body","pane","set","label","elementList","l","length","thumb","addNavItemIcon","icon","toUpperCase","dataId","data","header","p","addThumbButtonActions","element","$","post","__RequestVerificationToken","getToken","payload","status","str","list","className","el","setAttribute","onclick","launchModal","listClass","console","log","modal","container","style","previewNotes","class","preview","menulist","name","li","title","id","addNavItem","empty","launchPreview","show","delay","setTimeout","getJSON","result","create","innerHTML"],"mappings":"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","file":"INDEX.js","sourcesContent":["/** @module */\r\nimport CONTAINER, { ATTRIBUTES, MODEL } from '../../CONTAINER.js'; // EL\r\nimport BANNER from '../BANNER.js';\r\nimport DIV from '../../../div/DIV.js';\r\nimport HEADER from '../../../header/HEADER.js';\r\nimport { ICONS } from '../../../../../enums/ICONS.js';\r\nimport MENU from '../../../nav/menu/MENU.js';\r\nimport MENULIST from '../../menulist/MENULIST.js';\r\nimport MODAL from '../../../modal/MODAL.js';\r\n//import NAV from '../../../nav/NAV.js';\r\n//import NAVITEMICON from '../../../nav/navitemicon/NAVITEMICON.js';\r\nimport P from '../../../p/P.js';\r\n/** Contains a high level view of all objects owned by this user\r\n    @class\r\n    @extends BANNER\r\n*/\r\nexport default class INDEX extends BANNER {\r\n\t/** Constructs a SECTION Container Element\r\n\t    @param {CONTAINER} node Parent node\r\n\t    @param {MODEL} model INDEX model\t    \r\n    */\r\n\tconstructor(node, model) {\r\n\t\tsuper(node, model);\r\n\t\tthis.addClass('index');\r\n    }\r\n\tconstruct() {\r\n\t\tthis.menu = new MENU(this.body.pane, new MODEL().set({\r\n\t\t\t'label': 'INDEX'\r\n\t\t}));\r\n\t\tlet elementList = ['ARTICLE', 'FORM', 'JUMBOTRON', 'BANNER', 'CALLOUT', 'THUMBNAIL', 'CHAT', 'DICTIONARY', 'WORD', 'IMAGEGALLERY'];\r\n\t\tfor (let l = 0; l < elementList.length; l++) {\r\n\t\t\tlet thumb = this.menu.addNavItemIcon(new MODEL().set({\r\n                'icon': ICONS[elementList[l].toUpperCase()],\r\n                'label': elementList[l],\r\n                'dataId': -1,\r\n                'data': {\r\n                    'header': elementList[l],\r\n                    'p': '&nbsp;'\r\n                }\r\n\t\t\t}));\r\n\t\t\tthis.addThumbButtonActions(elementList[l], thumb);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t    Posts to the given element and retrieves a list of available instances, \r\n\t    then assigns relevant actions to it\r\n\t    @param {string} element The name of the element \r\n\t    @param {NAVITEMICON} thumb A NAVITEMICON that represents the given element\r\n\t    @returns {void}\r\n\t    @async\r\n\t*/\r\n\taddThumbButtonActions(element, thumb) {\r\n\t\t$.post('/' + element + '/List', {\r\n\t\t\t'__RequestVerificationToken': this.getToken()\r\n\t\t}, (payload, status) => {\r\n\t\t\tif (status === 'success') {\r\n\t\t\t\tlet str = 'There are ' + payload.list.length + ' instances of ' + payload.className;\r\n\t\t\t\tthumb.el.setAttribute('title', str);\r\n\t\t\t\tthumb.el.onclick = () => {\r\n\t\t\t\t\tthis.launchModal(payload.className, str, payload.className, payload.list);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t/**\r\n        Creates the Modal that contains the list of objects for preview\r\n        @todo Consider paging these results\r\n        @param {string} header Header text\r\n        @param {string} p paragraph\r\n        @param {string} listClass element class\r\n        @param {Array} list A list\r\n        @returns {void}\r\n    */\r\n\tlaunchModal(header, p, listClass, list) {\r\n\t\tconsole.log('Launch Index Thumbnail Modal');\r\n\t\tthis.modal = new MODAL(header);\r\n\t\tthis.modal.container.body.pane.addClass('thumbnail index-thumbnail');\r\n\t\t//this.modal.container.image = new IMG(this.modal.container.body.pane, new MODEL());\r\n\t\t//this.modal.container.image.el.src = this.image.el.src;\r\n\t\tthis.modal.container.header = new HEADER(this.modal.container.body.pane, new MODEL().set({\r\n\t\t\t'label': header\r\n\t\t}));\r\n\t\tthis.modal.container.p = new P(this.modal.container.body.pane, new MODEL(new ATTRIBUTES({\r\n\t\t\t'style': 'height:auto;'\r\n\t\t})), p);\r\n\t\tthis.modal.container.previewNotes = new DIV(this.modal.container.body.pane, new MODEL(new ATTRIBUTES({\r\n\t\t\t'class': 'preview-notes'\r\n\t\t})), '');\r\n\t\tthis.modal.container.preview = new CONTAINER(this.modal.container.body.pane, 'DIV', new MODEL(new ATTRIBUTES('preview')),\r\n\t\t\t[listClass.toUpperCase()]);\r\n\t\tthis.modal.container.preview.el.setAttribute('style', 'height:400px;max-height:400px;overflow-y:auto;');\r\n\t\tthis.modal.container.menulist = new MENULIST(this.modal.container.body.pane, new MODEL(new ATTRIBUTES({\r\n\t\t\t'style': 'max-height:200px;overflow-y:auto;'\r\n\t\t})).set({\r\n\t\t\t'name': 'preview-list',\r\n\t\t\t'label': listClass + '(s)'\r\n\t\t}));\r\n\t\tfor (let li = 0; li < list.length; li++) {\r\n\t\t\tlet title = list[li].label + ' (' + listClass + '[' + list[li].id + '])';\r\n\t\t\tthis.modal.container.menulist.menu.addNavItem(new MODEL().set({\r\n\t\t\t\t'label': title\r\n\t\t\t})).el.onclick = () => {\r\n\t\t\t\tthis.modal.container.preview.body.pane.empty();\r\n\t\t\t\tthis.launchPreview(500, listClass, list[li].id); // title, this.modal.container.preview.body.pane,\r\n\t\t\t};\r\n\t\t}\r\n\t\tthis.modal.show();\r\n\t}\r\n\t/**\r\n\t        Creates a modal and loads the specified container\r\n\t        @param {number} delay Delay in milliseconds\r\n\t        param {string} title Modal Title\r\n\t        param {EL} node Modal node to append to\r\n\t        @param {string} className Object class name\r\n\t        @param {number} id Object id\r\n\t        @returns {void}\r\n\t\t*/\r\n\tlaunchPreview(delay = 500, className, id) { // title = 'Preview', // node\r\n\t\tsetTimeout(() => {\r\n\t\t\t$.getJSON('/' + className + '/Get/' + id, (result) => {\r\n\t\t\t\tconsole.log(className, result);\r\n\t\t\t\tthis.modal.container.preview.create(result.model);\r\n\t\t\t});\r\n\t\t}, delay);\r\n\t\tsetTimeout(() => {\r\n\t\t\t$.getJSON('/' + className + '/GetContainerParents/' + id, (result) => {\r\n\t\t\t\tconsole.log(className + ' Parents:', result, result.length + ' parent Containers');\r\n\t\t\t\t//this.modal.container.previewNotes.el.innerHTML = 'Parent Containers: ' + result.length;\r\n\t\t\t\tthis.modal.container.previewNotes.el.innerHTML = 'Parent Containers: ' + result.length;\r\n\t\t\t});\r\n\t\t}, delay);\r\n\t}\r\n}"]}