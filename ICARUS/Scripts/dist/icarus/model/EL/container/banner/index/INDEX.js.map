{"version":3,"sources":["model/EL/container/banner/index/INDEX.js"],"names":["CONTAINER","ATTRIBUTES","MODEL","BANNER","DIV","HEADER","ICONS","MENULIST","MODAL","NAVITEMICON","P","INDEX","[object Object]","node","model","super","this","addClass","token","getMainContainer","getToken","containerHeader","body","pane","set","label","elementList","l","length","thumb","anchor","icon","toUpperCase","dataId","data","header","p","addThumbButtonActions","element","$","post","__RequestVerificationToken","payload","status","str","list","className","el","setAttribute","onclick","launchModal","listClass","console","log","modal","container","style","previewNotes","class","preview","menulist","name","li","title","id","menu","addNavItem","empty","launchPreview","show","delay","setTimeout","getJSON","result","create","innerHTML"],"mappings":"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","file":"INDEX.js","sourcesContent":["/**\r\n    @module\r\n*/\r\nimport CONTAINER, { ATTRIBUTES, MODEL } from '../../CONTAINER.js'; // EL\r\nimport BANNER from '../BANNER.js';\r\nimport DIV from '../../../div/DIV.js';\r\nimport HEADER from '../../../header/HEADER.js';\r\nimport { ICONS } from '../../../../../enums/ICONS.js';\r\nimport MENULIST from '../../menulist/MENULIST.js';\r\nimport MODAL from '../../../modal/MODAL.js';\r\nimport NAVITEMICON from '../../../nav/navitemicon/NAVITEMICON.js';\r\nimport P from '../../../p/P.js';\r\n//import TOKEN from '../../formelement/forminput/TOKEN.js';\r\n/**\r\n    Contains a high level view of all objects owned by this user\r\n    @class\r\n    @extends BANNER\r\n*/\r\nexport default class INDEX extends BANNER {\r\n\t/**\r\n\t    Constructs a SECTION Container Element\r\n\t    @param {CONTAINER} node Parent node\r\n\t    @param {MODEL} model INDEX model\t    \r\n\t */\r\n\tconstructor(node, model) {\r\n\t\tsuper(node, model);\r\n\t\tthis.addClass('index');\r\n\t\tthis.token = this.getMainContainer().getToken(); //model.data.token; // Required\r\n\t}\r\n\tconstruct() {\r\n\t\tthis.containerHeader = new HEADER(this.body.pane, new MODEL().set({ 'label': 'INDEX' }));\r\n\t\tlet elementList = ['ARTICLE', 'FORM', 'JUMBOTRON', 'BANNER', 'CALLOUT', 'THUMBNAIL', 'CHAT', 'DICTIONARY', 'WORD', 'IMAGEGALLERY'];\r\n\t\tfor (let l = 0; l < elementList.length; l++) {\r\n\t\t\tlet thumb = new NAVITEMICON(this.body.pane, new MODEL().set({\r\n\t\t\t\t'anchor': new MODEL().set({\r\n\t\t\t\t\t'icon': ICONS[elementList[l].toUpperCase()],\r\n\t\t\t\t\t'label': elementList[l],\r\n\t\t\t\t\t'dataId': -1,\r\n\t\t\t\t\t'data': {\r\n\t\t\t\t\t\t'header': elementList[l],\r\n\t\t\t\t\t\t'p': '&nbsp;'\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}));\r\n\t\t\tthis.addThumbButtonActions(elementList[l], thumb);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t    Posts to the given element and retrieves a list of available instances, \r\n\t    then assigns relevant actions to it\r\n\t    @param {string} element The name of the element \r\n\t    @param {NAVITEMICON} thumb A NAVITEMICON that represents the given element\r\n\t    @returns {void}\r\n\t    @async\r\n\t*/\r\n\taddThumbButtonActions(element, thumb) {\r\n\t\t$.post('/' + element + '/List', {\r\n\t\t\t'__RequestVerificationToken': this.getMainContainer().getToken()\r\n\t\t}, (payload, status) => {\r\n\t\t\tif (status === 'success') {\r\n\t\t\t\tlet str = 'There are ' + payload.list.length + ' instances of ' + payload.className;\r\n\t\t\t\tthumb.el.setAttribute('title', str);\r\n\t\t\t\tthumb.el.onclick = () => {\r\n\t\t\t\t\tthis.launchModal(payload.className, str, payload.className, payload.list);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t/**\r\n        Creates the Modal that contains the list of objects for preview\r\n        @todo Consider paging these results\r\n        @param {string} header Header text\r\n        @param {string} p paragraph\r\n        @param {string} listClass element class\r\n        @param {Array} list A list\r\n        @returns {void}\r\n    */\r\n\tlaunchModal(header, p, listClass, list) {\r\n\t\tconsole.log('Launch Index Thumbnail Modal');\r\n\t\tthis.modal = new MODAL(header);\r\n\t\tthis.modal.container.body.pane.addClass('thumbnail index-thumbnail');\r\n\t\t//this.modal.container.image = new IMG(this.modal.container.body.pane, new MODEL());\r\n\t\t//this.modal.container.image.el.src = this.image.el.src;\r\n\t\tthis.modal.container.header = new HEADER(this.modal.container.body.pane, new MODEL().set({\r\n\t\t\t'label': header\r\n\t\t}));\r\n\t\tthis.modal.container.p = new P(this.modal.container.body.pane, new MODEL(new ATTRIBUTES({\r\n\t\t\t'style': 'height:auto;'\r\n\t\t})), p);\r\n\t\tthis.modal.container.previewNotes = new DIV(this.modal.container.body.pane, new MODEL(new ATTRIBUTES({\r\n\t\t\t'class': 'preview-notes'\r\n\t\t})), '');\r\n\t\tthis.modal.container.preview = new CONTAINER(this.modal.container.body.pane, 'DIV', new MODEL(new ATTRIBUTES('preview')),\r\n\t\t\t[listClass.toUpperCase()]);\r\n\t\tthis.modal.container.preview.el.setAttribute('style', 'height:400px;max-height:400px;overflow-y:auto;');\r\n\t\tthis.modal.container.menulist = new MENULIST(this.modal.container.body.pane, new MODEL(new ATTRIBUTES({\r\n\t\t\t'style': 'max-height:200px;overflow-y:auto;'\r\n\t\t})).set({\r\n\t\t\t'name': 'preview-list',\r\n\t\t\t'label': listClass + '(s)'\r\n\t\t}));\r\n\t\tfor (let li = 0; li < list.length; li++) {\r\n\t\t\tlet title = list[li].label + ' (' + listClass + '[' + list[li].id + '])';\r\n\t\t\tthis.modal.container.menulist.menu.addNavItem(new MODEL().set({\r\n\t\t\t\t'label': title\r\n\t\t\t})).el.onclick = () => {\r\n\t\t\t\tthis.modal.container.preview.body.pane.empty();\r\n\t\t\t\tthis.launchPreview(500, listClass, list[li].id); // title, this.modal.container.preview.body.pane,\r\n\t\t\t};\r\n\t\t}\r\n\t\tthis.modal.show();\r\n\t}\r\n\t/**\r\n\t        Creates a modal and loads the specified container\r\n\t        @param {number} delay Delay in milliseconds\r\n\t        param {string} title Modal Title\r\n\t        param {EL} node Modal node to append to\r\n\t        @param {string} className Object class name\r\n\t        @param {number} id Object id\r\n\t        @returns {void}\r\n\t\t*/\r\n\tlaunchPreview(delay = 500, className, id) { // title = 'Preview', // node\r\n\t\tsetTimeout(() => {\r\n\t\t\t$.getJSON('/' + className + '/Get/' + id, (result) => {\r\n\t\t\t\tconsole.log(className, result);\r\n\t\t\t\tthis.modal.container.preview.create(result.model);\r\n\t\t\t});\r\n\t\t}, delay);\r\n\t\tsetTimeout(() => {\r\n\t\t\t$.getJSON('/' + className + '/GetContainerParents/' + id, (result) => {\r\n\t\t\t\tconsole.log(className + ' Parents:', result, result.length + ' parent Containers');\r\n\t\t\t\t//this.modal.container.previewNotes.el.innerHTML = 'Parent Containers: ' + result.length;\r\n\t\t\t\tthis.modal.container.previewNotes.el.innerHTML = 'Parent Containers: ' + result.length;\r\n\t\t\t});\r\n\t\t}, delay);\r\n\t}\r\n}"]}