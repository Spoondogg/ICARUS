import NAVITEM,{ATTRIBUTES,EL,MODEL}from"../../../nav/navitem/NAVITEM.js";import HEADER from"../../../header/header.js";import IMG from"../../../img/IMG.js";import P from"../../../p/P.js";import STRING from"../../../../../STRING.js";export default class THUMBNAIL extends NAVITEM{constructor(e,t){super(e,t),this.addClass("thumbnail col-xs-12 col-sm-6 col-lg-offset-0"),this.image=new IMG(this.anchor,new MODEL),$(this.image.el).insertBefore(this.anchor.label.el),this.header=new HEADER(this.anchor,(new MODEL).set({label:"thumbnailheader"})),this.p=new P(this.anchor,new MODEL,new STRING("thumbnaildescription").truncate(128)),this.fetchImage()}fetchImage(){if(this.dataId>0||-1===this.dataId){let e=null;if(this.data.img)if(Number.isInteger(parseInt(this.data.img)))try{$.getJSON("/FORMPOST/Get/"+parseInt(this.data.img),t=>{if(t.model&&t.model.jsonResults){e=JSON.parse(t.model.jsonResults);let s={};e.forEach(({name:e,value:t})=>{s[e]=t,"base64"===e&&(this.image.el.src=s[e])}),this.data.showImageDetails&&this.showImageDetails(s)}})}catch(e){console.log("Unable to retrieve FormPost.",e)}else this.image.el.setAttribute("src",this.data.img)}}showImageDetails(e){try{this.header.el.innerHTML=e.filename,this.p.el.innerHTML="Id: "+e.id+"<br>Filesize: "+e.fileSize+"kb ("+e.dimX+" x "+e.dimY+")<br>"+e.fileType}catch(t){console.log("Unable to set Thumbnail attributes",e)}}}export{ATTRIBUTES,EL,MODEL};
//# sourceMappingURL=THUMBNAIL.js.map
