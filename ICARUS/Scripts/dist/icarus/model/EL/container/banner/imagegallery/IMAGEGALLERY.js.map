{"version":3,"sources":["model/EL/container/banner/imagegallery/IMAGEGALLERY.js"],"names":["BUTTONGROUP","BUTTON","MODEL","BANNER","FOOTER","HEADER","THUMBNAIL","IMAGEGALLERY","[object Object]","node","model","super","this","addClass","page","pageLength","pageTotal","header","set","label","$","el","insertBefore","body","pane","pagination","createPaginationFooter","footer","insertAfter","loadPage","btnPrev","setAttribute","onclick","prevPage","bind","buttonGroup","loaded","btnNext","nextPage","postUrl","post","__RequestVerificationToken","getMainContainer","token","payload","status","total","l","list","length","thumb","dataId","data","p","id","className","index","img","showImageDetails","image","button","launchMain","pageCount","Math","ceil","addButton","console","log","setInnerHTML","buttons","children","b","removeClass","empty","construct","window","open","URL","location","href","origin"],"mappings":"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","file":"IMAGEGALLERY.js","sourcesContent":["/**\r\n    @module\r\n*/\r\nimport BUTTONGROUP, { BUTTON, MODEL } from '../../../group/buttongroup/BUTTONGROUP.js';\r\nimport BANNER from '../BANNER.js';\r\nimport FOOTER from '../../../footer/FOOTER.js';\r\nimport HEADER from '../../../header/HEADER.js';\r\nimport THUMBNAIL from '../thumbnail/THUMBNAIL.js';\r\n//import TOKEN from '../../formelement/input/TOKEN.js';\r\n/**\r\n    Contains a high level view of all objects owned by this user\r\n    @class\r\n    @extends BANNER\r\n*/\r\nexport default class IMAGEGALLERY extends BANNER {\r\n\t/**\r\n\t    Constructs a SECTION Container Element\r\n\t    @param {CONTAINER} node Parent node\r\n\t    @param {MODEL} model INDEX model\r\n\t */\r\n\tconstructor(node, model) {\r\n\t\tsuper(node, model);\r\n\t\tthis.addClass('image-gallery');\r\n\t\tthis.page = 0;\r\n\t\tthis.pageLength = 6;\r\n\t\tthis.pageTotal = 0;\r\n\t\tthis.header = new HEADER(this, new MODEL().set({\r\n\t\t\t'label': 'Image Gallery'\r\n\t\t}));\r\n\t\t$(this.header.el).insertBefore(this.body.pane.el);\r\n\t\tthis.pagination = this.createPaginationFooter();\r\n\t\tthis.footer = new FOOTER(this, new MODEL());\r\n\t\t$(this.pagination.el).insertAfter(this.body.pane.el);\r\n\t\tthis.loadPage(this.page);\r\n\t}\r\n\t/**\r\n\t    Creates a Pagination button group as a footer\r\n\t    @returns {FOOTER} A pagination footer\r\n\t*/\r\n\tcreatePaginationFooter() {\r\n\t\tlet pagination = new FOOTER(this, new MODEL('pagination text-center'));\r\n\t\t//this.pagination.el.setAttribute('style', 'text-align:center;');\r\n\t\t$(pagination.el).insertBefore(this.body.pane.el);\r\n\t\tpagination.btnPrev = new BUTTON(this.pagination, 'Prev');\r\n\t\tpagination.btnPrev.el.setAttribute('style', 'margin-right:1em;');\r\n\t\tpagination.btnPrev.el.onclick = this.prevPage.bind(this);\r\n\t\tpagination.buttonGroup = new BUTTONGROUP(this.pagination);\r\n\t\tpagination.buttonGroup.loaded = false;\r\n\t\tpagination.btnNext = new BUTTON(this.pagination, 'Next');\r\n\t\tpagination.btnNext.el.setAttribute('style', 'margin-left:1em;');\r\n\t\tpagination.btnNext.el.onclick = this.nextPage.bind(this);\r\n\t\treturn pagination;\r\n\t}\r\n\tconstruct() {\r\n\t\tlet postUrl = '/ImageGallery/ImageIndex';\r\n\t\tif (this.page) {\r\n\t\t\tpostUrl += '?page=' + this.page + '&pageLength=' + this.pageLength;\r\n\t\t}\r\n\t\t$.post(postUrl, {\r\n\t\t\t\t'__RequestVerificationToken': this.getMainContainer().token //token.value\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t\t\t\t    Processes the payload from /ImageGallery/ImageIndex?page=X&pageLenght=Y\r\n\t\t\t\t\t\t    @param {any} payload The POST payload\r\n\t\t\t\t\t\t    @param {any} status The POST status\r\n\t\t\t                @returns {void}\r\n\t\t\t\t\t\t*/\r\n\t\t\t(payload, status) => {\r\n\t\t\t\tif (status === 'success') {\r\n\t\t\t\t\tthis.pageTotal = payload.total;\r\n\t\t\t\t\tfor (let l = 0; l < payload.list.length; l++) {\r\n\t\t\t\t\t\tlet thumb = new THUMBNAIL(this.body.pane, new MODEL().set({\r\n\t\t\t\t\t\t\t'label': payload.list[l].label,\r\n\t\t\t\t\t\t\t'dataId': -1,\r\n\t\t\t\t\t\t\t'data': {\r\n\t\t\t\t\t\t\t\t'header': payload.list[l].label,\r\n\t\t\t\t\t\t\t\t'p': 'Launch ' + payload.list[l].label + ' (' + payload.list[l].id + ')<br>' + payload.className + '[' + payload.list[l].index + ']',\r\n\t\t\t\t\t\t\t\t'img': payload.list[l].id,\r\n\t\t\t\t\t\t\t\t'showImageDetails': true\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t\tif (payload.list[l].id === 0) {\r\n\t\t\t\t\t\t\tthumb.image.el.setAttribute('style', 'display:none;');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthumb.button.el.onclick = () => {\r\n\t\t\t\t\t\t\tthis.launchMain(payload.list[l].id);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!this.pagination.buttonGroup.loaded) {\r\n\t\t\t\t\t\t//console.log('Page Total: ' + this.pageTotal + ', Length: ' + this.pageLength);\r\n\t\t\t\t\t\tthis.pageCount = Math.ceil(this.pageTotal / this.pageLength);\r\n\t\t\t\t\t\t//console.log('PageCount: ' + this.pageCount + ', (' + this.pageTotal / this.pageLength + ')');\r\n\t\t\t\t\t\tfor (let p = 0; p < this.pageCount; p++) {\r\n\t\t\t\t\t\t\tthis.pagination.buttonGroup.addButton(p + 1).el.onclick = () => {\r\n\t\t\t\t\t\t\t\tthis.loadPage(p);\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.pagination.buttonGroup.loaded = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\t/**\r\n\t\t    Sets the page variables and reconstructs\r\n\t\t    @param {any} page A page to load\r\n\t        @returns {void}\r\n\t\t*/\r\n\tloadPage(page) {\r\n\t\tconsole.log('Loading page ' + page);\r\n\t\tthis.header.setInnerHTML('Page ' + (page + 1));\r\n\t\tlet buttons = this.pagination.buttonGroup.el.children;\r\n\t\tfor (let b = 0; b < buttons.length; b++) {\r\n\t\t\t$(buttons[b]).removeClass('active');\r\n\t\t}\r\n\t\t$(buttons[page]).addClass('active');\r\n\t\tthis.body.pane.empty();\r\n\t\tthis.page = page;\r\n\t\tthis.construct();\r\n\t}\r\n\t/**\r\n\t\t    Loads the next page\r\n\t        @returns {void}\r\n\t\t*/\r\n\tnextPage() {\r\n\t\tif (this.pageTotal > this.page * this.pageLength + 1) {\r\n\t\t\tthis.loadPage(this.page + 1);\r\n\t\t} else {\r\n\t\t\tconsole.log('No next pages to display');\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t\t    Loads the previous page\r\n\t        @returns {void}\r\n\t\t*/\r\n\tprevPage() {\r\n\t\tif (this.page > 0) {\r\n\t\t\tthis.loadPage(this.page - 1);\r\n\t\t} else {\r\n\t\t\tconsole.log('No previous pages to display');\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t\t    Opens the given Image FormPost in a new window\r\n\t\t    @param {number} id Main Container Id\r\n\t        @returns {void}\r\n\t\t */\r\n\tlaunchMain(id) {\r\n\t\twindow.open(new URL(window.location.href).origin + '/FormPost/Get/' + id);\r\n\t}\r\n}"]}