{"version":3,"sources":["icarus/model/EL/container/CONTAINER.js"],"names":["GROUP","ATTRIBUTES","EL","MODEL","AbstractMethodError","CONTAINERBODY","DATAELEMENTS","DIALOG","FOOTER","FORM","FORMINPUT","HEADER","ICONS","INPUTTYPES","NAVBAR","STATUS","CONTAINER","[object Object]","node","element","model","set","name","label","shared","containerList","super","this","addClass","dataElements","className","attrElements","id","el","setAttribute","updateUrl","subsections","split","navBar","createDraggableNavBar","body","addNavBarDefaults","addDefaultContainers","setDefaultVisibility","construct","expand","dataId","data","collapsed","collapse","showNavBar","splice","c","length","addContainerCase","ondragstart","ev","console","log","dataTransfer","setData","ondrop","preventDefault","container","$","document","getElementById","getData","insertBefore","ondragover","ondragend","value","text","html","prev","animate","height","setTimeout","insertAfter","delay","next","pane","empty","populate","children","domGroup","header","menu","getGroup","addNavItemIcon","anchor","icon","UP","onclick","moveContainerUp","bind","DOWN","moveContainerDown","REFRESH","refresh","DELETE","remove","EXCLAMATION","disable","crudGroup","LOAD","load","addDomItems","addCrudItems","btnSave","SAVE","createWrappedSaveForm","btnQuickSave","quickSave","toggleCollapse","moveUp","moveDown","toggle","hasClass","wrapper","save","wrp","nextElementSibling","parentNode","removeChild","e","url","type","formPost","ajax","async","success","result","Promise","resolve","reject","create","Error","then","err","addButton","getMainContainer","addCase","factory","get","ee","warn","addConstructElementButton","status","OPEN","open","btnLock","UNLOCK","options","removeAttribute","getId","CLOSED","close","s","LOCK","removeClass","getAttribute","attributes","getSubSections","form","createEmptyForm","setPostUrl","inputs","readonly","toString","innerHTML","fieldset","formElementGroup","addInputElements","afterSuccessfulPost","setLabel","elements","focusBody","loader","hide","getContainer","hidden","style","showHeader","FIELDSET","FORMELEMENTGROUP","parseInt","isNaN","push","getProtoTypeByClass","prompt","modelId","key","Reflect","call","htmlEncode","post","destroy","noPrompt","confirm","quickSaveFormPost","attributesId","caller","getLabel","tab","setInnerHTML","find","token","getToken","show","payload","URL","window","location","href","returnUrl","searchParams","origin","reload","message","PROMPT","footer","buttonGroup","REMOVE","__RequestVerificationToken","ajaxRefreshIfSuccessful"],"mappings":"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","file":"CONTAINER.js","sourcesContent":["/** @module */\r\nimport GROUP, { ATTRIBUTES, EL, MODEL } from '../group/GROUP.js';\r\n//import PROMPT, { MODAL } from '../modal/prompt/PROMPT.js';\r\nimport AbstractMethodError from '../../../error/AbstractMethodError.js';\r\nimport CONTAINERBODY from './CONTAINERBODY.js';\r\n//import CONTAINERFACTORY from './CONTAINERFACTORY.js';\r\nimport { DATAELEMENTS } from '../../../enums/DATAELEMENTS.js';\r\nimport DIALOG from '../dialog/DIALOG.js';\r\nimport FOOTER from '../footer/FOOTER.js';\r\nimport FORM, { FORMINPUT } from '../form/FORM.js';\r\nimport HEADER from '../header/HEADER.js';\r\nimport { ICONS } from '../../../enums/ICONS.js';\r\nimport { INPUTTYPES } from '../../../enums/INPUTTYPES.js';\r\nimport NAVBAR from '../nav/navbar/NAVBAR.js';\r\nimport { STATUS } from '../../../enums/STATUS.js';\r\n/**\r\n    An abstract Container element with NAVBAR\r\n    @description A container can be expanded or hidden and have elements added to itself\r\n    @class\r\n    @extends GROUP\r\n*/\r\nexport default class CONTAINER extends GROUP {\r\n\t/**\r\n\t    @constructs CONTAINER\r\n\t    @param {EL} node The element to contain the section\r\n\t    @param {string} element HTML element\r\n\t    @param {MODEL} model The CONTAINER object retrieved from the server\r\n\t    @param {array} containerList An array of strings representing child Containers that this Container can create\r\n\t */\r\n\tconstructor(node, element, model = new MODEL().set({\r\n\t\telement, //'element': \r\n\t\t'name': element || '',\r\n\t\t'label': element,\r\n\t\t'shared': 1\r\n\t}), containerList = []) {\r\n\t\tsuper(node, element, model); //console.log('CONTAINER{' + this.className + '}');\r\n\t\tthis.addClass('icarus-container'); //this.isContainer = 1;\r\n\t\tthis.dataElements = DATAELEMENTS[this.className];\r\n\t\tthis.attrElements = [];\r\n\t\tif (model.id) { // Eventually, this needs to go\r\n\t\t\tthis.el.setAttribute('id', model.id);\r\n\t\t}\r\n\t\t/**\r\n\t\t    @property {number} shared If shared == 1\r\n\t\t*/\r\n\t\tthis.shared = this.shared || 1; //this.shared = this.shared ? this.shared : 1;\r\n\t\t/**\r\n\t\t    @property {PROMPT} prompt A local PROMPT\r\n\t\t    @type {PROMPT}\r\n\t\t    @todo This should really only be needed in the MAIN Container.  \r\n\t\t    There should never be more than one prompt in the DOM.\r\n\t\t    Consider creating a queue to hold multiple prompts\r\n\t\t\t\t\r\n\t\tthis.prompt = null;*/\r\n\t\tthis.updateUrl = this.element + '/Set'; // model.className should be the actual value, no?                \r\n\t\tthis.subsections = model.subsections ? model.subsections.split(',') : '0'; // Delimited list of child ids\r\n\t\tthis.navBar = this.createDraggableNavBar();\r\n\t\tthis.body = new CONTAINERBODY(this, model);\r\n\t\tthis.addNavBarDefaults();\r\n\t\tthis.addDefaultContainers(containerList);\r\n\t\tthis.setDefaultVisibility(model);\r\n\t\tif (this.className !== 'CONTAINER') {\r\n\t\t\tthis.construct();\r\n\t\t}\r\n\t}\r\n\t/** \r\n\t\tAbstract construct method throws an error if not declared \r\n\t\t@abstract\r\n\t    @returns {void}\r\n\t*/\r\n\tconstruct() {\r\n\t\tif (this.className !== 'CONTAINER') {\r\n\t\t\tthrow new AbstractMethodError('CONTAINER{' + this.className + '} : Abstract method ' + this.className + '.construct() not implemented.');\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t    The default visibility state for menus and collapseable content\r\n\t    @param {MODEL} model The CONTAINER object retrieved from the server\r\n\t    @returns {void}\r\n\t*/\r\n\tsetDefaultVisibility(model) {\r\n\t\tthis.expand(); // Collapse or Expand Body Pane\r\n\t\tif (model.dataId > 0) {\r\n\t\t\tif (model.data.collapsed) {\r\n\t\t\t\tthis.collapse();\r\n\t\t\t}\r\n\t\t\tif (model.data.showNavBar) {\r\n\t\t\t\tthis.showNavBar();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t    Adds the default Container Cases to the CRUD Menu\r\n\t    @param {Array} containerList An array of container class names\r\n\t    @returns {void}\r\n\t*/\r\n\taddDefaultContainers(containerList) {\r\n\t\tlet defaultContainers = ['IFRAME', 'FORM', 'LIST', 'MENULIST', 'JUMBOTRON', 'BANNER', 'PARAGRAPH', 'CHAT'];\r\n\t\tcontainerList.splice(2, 0, ...defaultContainers);\r\n\t\tfor (let c = 0; c < containerList.length; c++) {\r\n\t\t\tthis.addContainerCase(containerList[c]);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t    Drag containers by their NavBars\r\n\t    @see https://www.w3schools.com/jsref/event_ondrag.asp\r\n\t    param {string} label The header text\r\n\t    @returns {NAVBAR} A draggable navbar\r\n\t*/\r\n\tcreateDraggableNavBar() {\r\n\t\tlet navBar = new NAVBAR(this, new MODEL().set({\r\n\t\t\t'label': this.label // model.label\r\n\t\t}));\r\n\t\tnavBar.el.setAttribute('draggable', true);\r\n\t\tnavBar.el.ondragstart = (ev) => {\r\n\t\t\tconsole.log('Dragging Container: ' + this.className + '(' + this.id + ') ' + this.label);\r\n\t\t\tthis.collapse();\r\n\t\t\tev.dataTransfer.setData(\"Container\", this.id);\r\n\t\t};\r\n\t\t// Drop the Container\r\n\t\tnavBar.el.ondrop = (ev) => {\r\n\t\t\tconsole.log('Dropping onto Container: ' + this.className + '(' + this.id + ')');\r\n\t\t\tev.preventDefault();\r\n\t\t\t//var containerId = ev.dataTransfer.getData(\"Container\");\r\n\t\t\t//console.log(data);    \r\n\t\t\tlet container = $(document.getElementById(ev.dataTransfer.getData(\"Container\")));\r\n\t\t\tcontainer.insertBefore(this.el);\r\n\t\t\tcontainer.collapse('show');\r\n\t\t\t/*\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t    console.log('QuickSaving drop recipient parent ' + this.className + '(' + this.id + ')');\r\n\t\t\t    this.getProtoTypeByClass('CONTAINER').quickSave(false); // QuickSave Parent\r\n\t\t\t}.bind(this), 500);\r\n\t\t\t*/\r\n\t\t\tconsole.log('You should save your changes');\r\n\t\t};\r\n\t\t// Allow drop on this Container\r\n\t\tnavBar.el.ondragover = (ev) => {\r\n\t\t\t//console.log('Dragging over ' + this.className + '(' + this.id + ')');\r\n\t\t\tev.preventDefault();\r\n\t\t};\r\n\t\tnavBar.el.ondragend = () => { //this.navBar.el.ondragend = (ev) => {\r\n\t\t\t// Drag Ending\r\n\t\t};\r\n\t\treturn navBar;\r\n\t}\r\n\t/**\r\n\t    HTML Encode the given value.\r\n\r\n\t    Create a in-memory div, set it's inner text(which jQuery automatically encodes\r\n\t    then grab the encoded contents back out.  The div never exists on the page.\r\n\r\n\t    TODO: This really should just be an extention of the String class\r\n\r\n\t    @param {any} value The string to be html encoded\r\n\t    @returns {text} An html encoded string\r\n\t */\r\n\thtmlEncode(value) {\r\n\t\treturn $('<div/>').text(value).html();\r\n\t}\r\n\t/**\r\n\t    Decodes an HTML encoded value back into HTML string\r\n\r\n\t    TODO: This really should just be an extention of the String class\r\n\r\n\t    @param {any} value An html encoded string\r\n\t    @returns {string} A string that was previously html encoded\r\n\t */\r\n\thtmlDecode(value) {\r\n\t\treturn $('<div/>').html(value).text();\r\n\t}\r\n\t/**\r\n\t    Moves this element UP one slot\r\n\t    @returns {ThisType} This Container\r\n\t*/\r\n\tmoveUp() {\r\n\t\tconsole.log('Move Up');\r\n\t\tlet node = $(this.el);\r\n\t\tif (node.prev().length > 0) {\r\n\t\t\tnode.animate({ height: 'toggle' }, 300);\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tnode.prev().animate({ height: 'toggle' }, 300).insertAfter(node).animate({ height: 'toggle' }, 300);\r\n\t\t\t}, 0);\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tnode.animate({ height: 'toggle' }, 300).delay(300);\r\n\t\t\t}, 300);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t    Moves this element DOWN one slot\r\n\t    @returns {ThisType} This Container\r\n\t*/\r\n\tmoveDown() {\r\n\t\tconsole.log('Move Down');\r\n\t\tlet node = $(this.el);\r\n\t\tif (node.next().length > 0) {\r\n\t\t\tnode.animate({ height: 'toggle' }, 300);\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tnode.next().animate({ height: 'toggle' }, 300).insertBefore(node).animate({ height: 'toggle' }, 300).delay(300);\r\n\t\t\t}, 0);\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tnode.animate({ height: 'toggle' }, 300);\r\n\t\t\t}, 300);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t\t    Empties the Container Pane and reconstructs its contents \r\n\t\t    based on the current model\r\n\t        @returns {void}\r\n\t\t*/\r\n\trefresh() {\r\n\t\tconsole.log(0, 'Refreshing CONTAINER{' + this.className + '}[' + this.id + ']');\r\n\t\tthis.body.pane.empty();\r\n\t\tthis.construct();\r\n\t\tthis.populate(this.body.pane.children);\r\n\t}\r\n\t/**\r\n\t\t    Shows the Container NavBar\r\n\t        @returns {void}\r\n\t\t*/\r\n\tshowNavBar() {\r\n\t\t$(this.navBar.el).collapse('show');\r\n\t}\r\n\t/**\r\n\t    Adds default items to the DOM Menu\r\n\t    @returns {GROUP} A Menu Group\r\n\t*/\r\n\taddDomItems() {\r\n\t\tlet domGroup = this.navBar.header.menu.getGroup('DOM');\r\n\t\tdomGroup.addNavItemIcon(new MODEL().set({\r\n\t\t\t'anchor': new MODEL().set({\r\n\t\t\t\t'icon': ICONS.UP,\r\n\t\t\t\t'label': 'UP'\r\n\t\t\t})\r\n\t\t})).el.onclick = this.moveContainerUp.bind(this);\r\n\t\tdomGroup.addNavItemIcon(new MODEL().set({\r\n\t\t\t'anchor': new MODEL().set({\r\n\t\t\t\t'icon': ICONS.DOWN,\r\n\t\t\t\t'label': 'DOWN'\r\n\t\t\t})\r\n\t\t})).el.onclick = this.moveContainerDown.bind(this);\r\n\t\tdomGroup.addNavItemIcon(new MODEL().set({\r\n\t\t\t'anchor': new MODEL().set({\r\n\t\t\t\t'icon': ICONS.REFRESH,\r\n\t\t\t\t'label': 'REFRESH'\r\n\t\t\t})\r\n\t\t})).el.onclick = this.refresh.bind(this);\r\n\t\tdomGroup.addNavItemIcon(new MODEL().set({\r\n\t\t\t'anchor': new MODEL().set({\r\n\t\t\t\t'icon': ICONS.DELETE,\r\n\t\t\t\t'label': 'REMOVE'\r\n\t\t\t})\r\n\t\t})).el.onclick = this.remove.bind(this);\r\n\t\tdomGroup.addNavItemIcon(new MODEL().set({\r\n\t\t\t'anchor': new MODEL().set({\r\n\t\t\t\t'icon': ICONS.EXCLAMATION,\r\n\t\t\t\t'label': 'DELETE'\r\n\t\t\t})\r\n\t\t})).el.onclick = this.disable.bind(this);\r\n\t\treturn domGroup;\r\n\t}\r\n\t/**\r\n\t    Adds the CRUD Nav Items\r\n        @returns {GROUP} A Menu Group\r\n\t*/\r\n\taddCrudItems() {\r\n\t\tlet crudGroup = this.navBar.header.menu.getGroup('CRUD');\r\n\t\tcrudGroup.addNavItemIcon(new MODEL().set({\r\n\t\t\t'anchor': new MODEL().set({\r\n\t\t\t\t'icon': ICONS.LOAD,\r\n\t\t\t\t'label': 'LOAD'\r\n\t\t\t})\r\n\t\t})).el.onclick = this.load.bind(this);\r\n\t\treturn crudGroup;\r\n\t}\r\n\t/**\r\n\t\t    Adds default DOM, CRUD and ELEMENT Nav Items to the Option Menu\r\n\t        @returns {void}\r\n\t\t */\r\n\taddNavBarDefaults() {\r\n\t\tif (this.navBar.header.menu) {\r\n\t\t\t//let domGroup = this.addDomItems();\r\n\t\t\tthis.addDomItems();\r\n\t\t\tlet crudGroup = this.addCrudItems();\r\n\t\t\t// Add items to Options Dropdown Tab\r\n\t\t\tthis.btnSave = crudGroup.addNavItemIcon(new MODEL().set({\r\n\t\t\t\t'anchor': new MODEL().set({\r\n\t\t\t\t\t'icon': ICONS.SAVE,\r\n\t\t\t\t\t'label': 'SAVE'\r\n\t\t\t\t})\r\n\t\t\t}));\r\n\t\t\tthis.btnSave.el.onclick = this.createWrappedSaveForm.bind(this);\r\n\t\t\tthis.btnQuickSave = crudGroup.addNavItemIcon(new MODEL().set({\r\n\t\t\t\t'anchor': new MODEL().set({\r\n\t\t\t\t\t'icon': ICONS.SAVE,\r\n\t\t\t\t\t'label': 'QUICKSAVE'\r\n\t\t\t\t})\r\n\t\t\t}));\r\n\t\t\tthis.btnQuickSave.el.onclick = this.quickSave.bind(this);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t\tMoves the Container up one slot in the DOM\r\n\t    @returns {void}\r\n\t*/\r\n\tmoveContainerUp() {\r\n\t\tthis.navBar.header.toggleCollapse();\r\n\t\tthis.moveUp();\r\n\t}\r\n\t/**\r\n\t\tMoves the Container down one slot in the DOM\r\n\t    @returns {void}\r\n\t*/\r\n\tmoveContainerDown() {\r\n\t\tthis.navBar.header.toggleCollapse();\r\n\t\tthis.moveDown();\r\n\t}\r\n\t/**\r\n\t\tCreates a save form for this Container and places it in a wrapper\r\n\t\tinside the CRUD Group\r\n\t    @returns {void}\r\n\t*/\r\n\tcreateWrappedSaveForm() {\r\n\t\tthis.btnSave.toggle('active');\r\n\t\tif ($(this.btnSave.el).hasClass('active')) {\r\n\t\t\tlet node = this.navBar.header.menu.getGroup('CRUD').wrapper;\r\n\t\t\tthis.btnSave.wrapper = new EL(node, 'DIV', new MODEL(new ATTRIBUTES('collapse in wrapper')));\r\n\t\t\tthis.save(this.btnSave.wrapper);\r\n\t\t} else {\r\n\t\t\tconsole.log(0, 'Closing ' + this.className + '.save() form.');\r\n\t\t\tlet wrp = this.navBar.header.menu.getGroup('CRUD').el.nextElementSibling;\r\n\t\t\ttry {\r\n\t\t\t\t$(wrp).collapse('toggle');\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\twrp.parentNode.removeChild(wrp);\r\n\t\t\t\t}, 2000);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log('Unable to destroy this', e);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t    Performs JQuery's ajax method to the given url.\r\n\t    @param {string} url Target url\r\n\t    @param {string} type HTTP Method (GET,PUT,POST,DELETE)\r\n\t    @param {FormPost} formPost Data to be sent to the server\r\n\t    param {function} success Function to be called on success\r\n\t    @returns {{}} payload\r\n\t*/\r\n\tajax(url, type, formPost) { // success\r\n\t\treturn $.ajax({\r\n\t\t\turl,\r\n\t\t\ttype, //ie: POST\r\n\t\t\tasync: true,\r\n\t\t\tdata: formPost,\r\n\t\t\tsuccess: (result) => result\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t\t    Adds the Construct 'element' button to the options menu\r\n\t\t    @param {string} className Element constructor class name\r\n\t        @returns {void}\r\n\t\t*/\r\n\taddConstructElementButton(className) {\r\n\t\tif (this.navBar.header.menu) {\r\n\t\t\tthis.navBar.header.menu.getGroup('ELEMENTS').addNavItemIcon(new MODEL().set({\r\n\t\t\t\t\t'anchor': new MODEL().set({\r\n\t\t\t\t\t\t'icon': ICONS[className],\r\n\t\t\t\t\t\t'label': className //'Create ^'\r\n\t\t\t\t\t})\r\n\t\t\t\t})).el.onclick =\r\n\t\t\t\t/**\r\n\t\t\t\t\t\t\t\t    Makes a Promise to perform Container.create() with the\r\n\t\t\t\t\t\t\t\t    response (MODEL) and performs a QuickSave on the parent Container\r\n\t\t\t\t                    @see https://scotch.io/tutorials/javascript-promises-for-dummies\r\n\t\t\t\t                    @see https://developers.google.com/web/fundamentals/primers/promises\r\n\t\t\t\t\t\t\t\t*/\r\n\t\t\t\t() => {\r\n\t\t\t\t\tthis.navBar.header.toggleCollapse();\r\n\t\t\t\t\tlet promise = new Promise((resolve, reject) => {\r\n\t\t\t\t\t\tconsole.log('Promise');\r\n\t\t\t\t\t\t// do a thing, possibly async, then…\r\n\t\t\t\t\t\tlet result = this.create(new MODEL().set({\r\n\t\t\t\t\t\t\tclassName\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t\tconsole.log('Promise', result);\r\n\t\t\t\t\t\tif (result === null) {\r\n\t\t\t\t\t\t\treject(Error('Failed to create element'));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tresolve(result); // Successfully created Element\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tpromise.then((result) => {\r\n\t\t\t\t\t\tconsole.log('promise success', result);\r\n\t\t\t\t\t\tthis.quickSave(true);\r\n\t\t\t\t\t}, (err) => {\r\n\t\t\t\t\t\tconsole.log('promise fail', err); // Error: \"It broke\"\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t\t    Performs addCase() for the given Element within a \r\n\t\t    Container of an element that extends Container\r\n\r\n\t\t    Sets the constructor callback for this element\r\n\t\t    and adds respective button to this container\r\n\r\n\t\t    @param {string} className ie SECTION or FORM\r\n\t        param {CONTAINERFACTORY} factory A Container Factory\r\n\t\t    @param {boolean} addButton If false, no button is created\r\n\r\n\t        @returns {void}\r\n\t\t*/\r\n\taddContainerCase(className, addButton = true) {\r\n\t\ttry {\r\n\t\t\tif (typeof this.getMainContainer() !== 'undefined') {\r\n\t\t\t\tthis.addCase(className, function(model) {\r\n\t\t\t\t\tconsole.log(this.className + ': CALLING CASE: ' + className);\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\treturn this.factory.get(this.body.pane, className, model.id || 0);\r\n\t\t\t\t\t} catch (ee) {\r\n\t\t\t\t\t\tconsole.warn('Unable to retrieve factory for Container Case', ee);\r\n\t\t\t\t\t}\r\n\t\t\t\t}.bind(this)); // CONTAINERFACTORY\r\n\t\t\t\tif (addButton) {\r\n\t\t\t\t\tthis.addConstructElementButton(className);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tconsole.warn(this.className + ': Unable to add Container Case', e);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t\t    Overrides EL.open();\r\n\t\t    Opens the CONTAINER up for editing.  This should create a link\r\n\t\t    between the object on the server and its client side representation\r\n\t        @returns {void}\r\n\t\t*/\r\n\topen() {\r\n\t\ttry {\r\n\t\t\tthis.status = STATUS.OPEN;\r\n\t\t\tsuper.open();\r\n\t\t\tthis.el.setAttribute('data-status', 'open');\r\n\t\t\tthis.header.btnLock.icon.el.className = ICONS.UNLOCK;\r\n\t\t\tthis.header.options.el.removeAttribute('disabled');\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log('Unable to open parent.', e);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t\t    Closes the CONTAINER up for editing.  This should create a link\r\n\t\t    between the object on the server and its client side representation\r\n\t\t    and update accordingly\r\n\t        @returns {void}\r\n\t\t*/\r\n\tclose() {\r\n\t\tconsole.log('Locking ' + this.element + '(' + this.getId() + ')');\r\n\t\tthis.status = STATUS.CLOSED;\r\n\t\tthis.node.close();\r\n\t\tthis.el.setAttribute('data-status', 'closed');\r\n\t\t// If section is open and we are trying to lock, we must first lock the children\r\n\t\tconsole.log(this.element + ' has ' + this.children.length + ' child(ren)');\r\n\t\tfor (let s = 0; s < this.children.length; s++) {\r\n\t\t\tif (this.children[s].status === STATUS.OPEN) {\r\n\t\t\t\tthis.children[s].close();\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log('Children are closed. Closing ' + this.element + '(' + this.getId() + ')');\r\n\t\tthis.header.btnLock.icon.el.className = ICONS.LOCK;\r\n\t\t$(this.header.btnLock.el).removeClass('active');\r\n\t\tthis.header.options.el.setAttribute('disabled', 'disabled');\r\n\t\tconsole.log('Locked');\r\n\t}\r\n\t/**\r\n\t    Returns the CONTAINER's name attribute\r\n\t    @returns {string} Container name\r\n\t*/\r\n\tgetId() {\r\n\t\treturn this.el.getAttribute('id');\r\n\t}\r\n\t/**\r\n\t\t    Sets the CONTAINER's ID\r\n\t\t    @param {number} id Container database Id\r\n\t        @returns {void}\r\n\t\t*/\r\n\tsetId(id) {\r\n\t\tthis.id = id;\r\n\t\tthis.el.setAttribute('id', id);\r\n\t\tthis.data.id = id;\r\n\t\tthis.attributes.id = id;\r\n\t}\r\n\t/**\r\n\t    Returns the CONTAINER's name attribute\r\n\t    @returns {string} Container name\r\n\t*/\r\n\tgetName() {\r\n\t\treturn this.el.getAttribute('name');\r\n\t}\r\n\t/**\r\n\t\t    Sets the name of this element to the given value.\r\n\t\t    @param {string} name The name to be set\r\n\t        @returns {void}\r\n\t\t*/\r\n\tsetName(name) {\r\n\t\tthis.el.setAttribute('name', name);\r\n\t\tthis.model.name = name;\r\n\t}\r\n\t/**\r\n\t\t    Collapses the container's body\r\n\t\t    @returns {boolean} true if hidden\r\n\t        @returns {void}\r\n\t\t*/\r\n\tcollapse() {\r\n\t\ttry {\r\n\t\t\t$(this.body.el).collapse('hide');\r\n\t\t\treturn true;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t\t    Expands the container's body\r\n\t        @returns {void}\r\n\t\t*/\r\n\texpand() {\r\n\t\ttry {\r\n\t\t\t$(this.body.el).collapse('show');\r\n\t\t} catch (e) {\r\n\t\t\tconsole.warn(e);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t\t    Toggles the collapsed state of the container's body\r\n\t        @returns {void}\r\n\t\t */\r\n\ttoggleBody() {\r\n\t\t$(this.body.el).collapse('toggle');\r\n\t}\r\n\t/**\r\n\t\t    An abstract load method for a CONTAINER\r\n\t        @abstract\r\n\t        @returns {void}\r\n\t\t */\r\n\tload() {\r\n\t\t//let modal = new MODAL('Select A Form Group', 'Choose from the following...');\r\n\t\t//modal.show();\r\n\t\tthrow new AbstractMethodError('CONTAINER{' + this.className + '}.load() : Abstract method ' + this.className + '.load() not implemented.');\r\n\t}\r\n\t/**\r\n\t\t    Saves the state of this Element\r\n\t\t    @param {EL} node The parent container to hold the save menu\r\n\t        @returns {void}\r\n\t\t */\r\n\tsave(node) {\r\n\t\tconsole.log(this.element + '.save()');\r\n\t\tlet subsections = this.getSubSections(); // Populate subsections with elements in this body\r\n\t\tlet form = FORM.createEmptyForm(node, false);\r\n\t\tform.addClass('saveContainer');\r\n\t\tform.setPostUrl(this.className + '/Set');\r\n\t\tlet inputs = [\r\n\t\t\tnew MODEL(new ATTRIBUTES({\r\n\t\t\t\t'name': 'element',\r\n\t\t\t\t'value': this.get('element'),\r\n\t\t\t\t'readonly': 'readonly'\r\n\t\t\t})).set({\r\n\t\t\t\t'element': 'INPUT',\r\n\t\t\t\t'label': 'element'\r\n\t\t\t}),\r\n\t\t\tnew MODEL(new ATTRIBUTES({\r\n\t\t\t\t'id': 0,\r\n\t\t\t\t'name': 'id',\r\n\t\t\t\t'value': this.get('id').toString(),\r\n\t\t\t\t'readonly': 'readonly'\r\n\t\t\t})).set({\r\n\t\t\t\t'element': 'INPUT',\r\n\t\t\t\t'label': 'ID'\r\n\t\t\t}),\r\n\t\t\tnew MODEL(new ATTRIBUTES({\r\n\t\t\t\t'name': 'label',\r\n\t\t\t\t'value': typeof this.get('label') === 'object' ? this.get('label').el.innerHTML : this.get('label')\r\n\t\t\t})).set({\r\n\t\t\t\t'element': 'INPUT',\r\n\t\t\t\t'label': 'Label'\r\n\t\t\t}),\r\n\t\t\tnew MODEL(new ATTRIBUTES({\r\n\t\t\t\t'name': 'subsections',\r\n\t\t\t\t'value': subsections.length > 0 ? subsections.toString() : '0',\r\n\t\t\t\t'readonly': 'readonly'\r\n\t\t\t})).set({\r\n\t\t\t\t'element': 'INPUT',\r\n\t\t\t\t'label': 'SubSections'\r\n\t\t\t}),\r\n\t\t\t// Should be checkbox or dropdown\r\n\t\t\tnew MODEL(new ATTRIBUTES({\r\n\t\t\t\t'name': 'status',\r\n\t\t\t\t'type': 'NUMBER',\r\n\t\t\t\t'value': this.get('status').toString()\r\n\t\t\t})).set({\r\n\t\t\t\t'element': 'INPUT',\r\n\t\t\t\t'label': 'Status'\r\n\t\t\t}),\r\n\t\t\t// FORMPOSTINPUT\r\n\t\t\tnew MODEL(new ATTRIBUTES({\r\n\t\t\t\t'name': 'dataId',\r\n\t\t\t\t'type': 'NUMBER',\r\n\t\t\t\t'value': this.get('dataId').toString()\r\n\t\t\t})).set({\r\n\t\t\t\t'element': 'BUTTON',\r\n\t\t\t\t'label': 'dataId',\r\n\t\t\t\t'type': 'FORMPOSTINPUT'\r\n\t\t\t}),\r\n\t\t\t// FORMPOSTINPUT\r\n\t\t\tnew MODEL(new ATTRIBUTES({\r\n\t\t\t\t'name': 'attributesId',\r\n\t\t\t\t'type': 'NUMBER',\r\n\t\t\t\t'value': this.get('attributesId').toString()\r\n\t\t\t})).set({\r\n\t\t\t\t'element': 'BUTTON',\r\n\t\t\t\t'label': 'attributesId',\r\n\t\t\t\t'type': 'FORMPOSTINPUT'\r\n\t\t\t}),\r\n\t\t\t// FORMPOSTINPUT\r\n\t\t\tnew MODEL(new ATTRIBUTES({\r\n\t\t\t\t'name': 'descriptionId',\r\n\t\t\t\t'type': 'NUMBER',\r\n\t\t\t\t'value': this.get('descriptionId').toString()\r\n\t\t\t})).set({\r\n\t\t\t\t'element': 'BUTTON',\r\n\t\t\t\t'label': 'descriptionId',\r\n\t\t\t\t'type': 'FORMPOSTINPUT'\r\n\t\t\t}),\r\n\t\t\tnew MODEL(new ATTRIBUTES({\r\n\t\t\t\t'name': 'shared',\r\n\t\t\t\t'type': 'NUMBER',\r\n\t\t\t\t'value': this.get('shared').toString() || '1'\r\n\t\t\t})).set({\r\n\t\t\t\t'element': 'BUTTON',\r\n\t\t\t\t'label': 'shared'\r\n\t\t\t})\r\n\t\t];\r\n\t\tform.fieldset.formElementGroup.addInputElements(inputs);\r\n\t\t/*\r\n\t\t    Restore Container View to defaults and refresh parent Container\r\n\t\t*/\r\n\t\tform.afterSuccessfulPost = () => {\r\n\t\t\tthis.setLabel(form.el.elements.label.value);\r\n\t\t\ttry {\r\n\t\t\t\tthis.getMainContainer().focusBody();\r\n\t\t\t\tthis.getMainContainer().loader.hide();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tthis.getContainer().refresh();\r\n\t\t\t} catch (e) {\r\n\t\t\t\t//console.log('Unable to reload Container);\r\n\t\t\t\t//location.reload(true);\r\n\t\t\t\tthis.getMainContainer().refresh();\r\n\t\t\t}\r\n\t\t};\r\n\t\t$(node.el).collapse('show');\r\n\t\treturn form;\r\n\t}\r\n\t/**\r\n\t    Populates this form with a single fieldset and formelementgroup\r\n\t    @param {EL} node Parent node\r\n\t    @param {boolean} hidden If true, form is hidden\r\n\t    @returns {FORM} An empty form container\r\n\t*/\r\n\tstatic createEmptyForm(node, hidden = false) {\r\n\t\tlet form = new FORM(node, new MODEL(new ATTRIBUTES({\r\n\t\t\t'style': hidden ? 'display:none;' : ''\r\n\t\t})).set({\r\n\t\t\t'label': 'FORM',\r\n\t\t\t'showHeader': 0\r\n\t\t}));\r\n\t\tform.fieldset = new FIELDSET(form.body.pane, new MODEL().set({\r\n\t\t\t'label': 'FIELDSET',\r\n\t\t\t'showHeader': 0\r\n\t\t}));\r\n\t\tform.fieldset.formElementGroup = new FORMELEMENTGROUP(form.fieldset.body.pane, new MODEL().set({\r\n\t\t\t'label': 'FORMELEMENTGROUP',\r\n\t\t\t'showHeader': 0\r\n\t\t}));\r\n\t\treturn form;\r\n\t}\r\n\t/**\r\n\t     Generates an array of subsection Ids for this Container\r\n\t     @returns {array} A collection of subsection ids\r\n\t */\r\n\tgetSubSections() {\r\n\t\tlet id = null;\r\n\t\tlet subsections = [];\r\n\t\tfor (let c = 0; c < this.body.pane.el.children.length; c++) {\r\n\t\t\tid = parseInt(this.body.pane.el.children[c].id);\r\n\t\t\tif (!isNaN(id)) {\r\n\t\t\t\tsubsections.push(id);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn subsections;\r\n\t}\r\n\t/**\r\n\t    Returns the parent container for this container or null if it does not exist\r\n\t    @returns {CONTAINER} The parent container for this container\r\n\t*/\r\n\tgetContainer() {\r\n\t\treturn this.container;\r\n\t}\r\n\t/**\r\n\t    Returns the MAIN container\r\n\t    @returns {CONTAINER} The MAIN Container\r\n\t    @throws Will throw an error \r\n\t*/\r\n\tgetMainContainer() {\r\n\t\ttry {\r\n\t\t\treturn this.getProtoTypeByClass('MAIN');\r\n\t\t} catch (e) {\r\n\t\t\tswitch (this.getProtoTypeByClass('MODAL').className) {\r\n\t\t\t\tcase 'LOADER':\r\n\t\t\t\t\tconsole.warn('Modals exist in body.document and do not have a parent Container');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log(this.className + ' does not have a parent Container.', this, this.getProtoTypeByClass('MODAL'));\r\n\t\t\t}\r\n\t\t\t//return null;\r\n\t\t\t//console.log('CONTAINER.getMainContainer() caught an error');\r\n\t\t\t//throw e;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t    Retrieves the application {@link PROMPT}\r\n\t    @returns {PROMPT} The application prompt\r\n\t    @throws Will throw an error if unable to retrieve the application prompt\r\n\t*/\r\n\tgetPrompt() {\r\n\t\ttry {\r\n\t\t\treturn this.getMainContainer().prompt;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.warn('Unable to retrieve the application prompt');\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t\t    If dataId or attributesId exists, extract the appropriate values\r\n\t\t    @param {number} modelId The object's unique identifier\r\n\t\t    @param {object} data The object to be saved\r\n\t        @returns {void}\r\n\t\t*/\r\n\tquickSaveFormPost(modelId, data) {\r\n\t\tconsole.log('QuickSaveFormPost:' + modelId, data);\r\n\t\tif (modelId > 0) {\r\n\t\t\tconsole.log(50, 'Saving FormPost: ' + modelId);\r\n\t\t\tlet form = FORM.createEmptyForm(this, true);\r\n\t\t\tlet inputs = [];\r\n\t\t\tconsole.log('Adding data attributes');\r\n\t\t\tfor (let key in data) {\r\n\t\t\t\tif (Reflect.call(data, key)) { // if (Object.prototype.hasOwnProperty.call(data, key)) {\r\n\t\t\t\t\tconsole.log('Key', key);\r\n\t\t\t\t\tconsole.log('Value', this.htmlEncode(data[key]));\r\n\t\t\t\t\tinputs.push(new MODEL(new ATTRIBUTES({\r\n\t\t\t\t\t\t'name': key,\r\n\t\t\t\t\t\t'value': this.htmlEncode(data[key]) //value\r\n\t\t\t\t\t})).set({\r\n\t\t\t\t\t\t'element': 'INPUT',\r\n\t\t\t\t\t\t'label': key\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tform.fieldset.formElementGroup.addInputElements(inputs);\r\n\t\t\tform.setPostUrl('FormPost/Set');\r\n\t\t\tform.post();\r\n\t\t\tform.afterSuccessfulPost = () => {\r\n\t\t\t\tform.destroy();\r\n\t\t\t\tconsole.log('FormPost: ' + modelId + ' has been quicksaved');\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tconsole.log('No modelId provided');\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t    Displays a prompt that performs a save of the container, it's \r\n\t    attributes and any data objects associated with it.\r\n\r\n\t    @param {BOOLEAN} noPrompt If false (default), no prompt is displayed\r\n\t    @returns {BOOLEAN} True if successful\r\n\t */\r\n\tquickSave(noPrompt = false) {\r\n\t\tif (noPrompt || confirm('Quick Save ' + this.className + '(' + this.id + ') : ' + this.label + ' ?')) {\r\n\t\t\t//console.log(this.className + '.save()', this);\r\n\t\t\t// Populate subsections with elements in this body\r\n\t\t\tlet subsections = this.getSubSections();\r\n\t\t\tlet form = FORM.createEmptyForm(this, true);\r\n\t\t\tform.fieldset.formElementGroup.addInputElements([\r\n\t\t\t\tnew MODEL(new ATTRIBUTES({\r\n\t\t\t\t\t'name': 'element',\r\n\t\t\t\t\t'value': this.get('element'),\r\n\t\t\t\t\t'readonly': 'readonly'\r\n\t\t\t\t})).set({\r\n\t\t\t\t\t'element': 'INPUT',\r\n\t\t\t\t\t'label': 'element'\r\n\t\t\t\t}),\r\n\t\t\t\tnew MODEL(new ATTRIBUTES({\r\n\t\t\t\t\t'id': 0,\r\n\t\t\t\t\t'name': 'id',\r\n\t\t\t\t\t'value': this.get('id').toString(),\r\n\t\t\t\t\t'readonly': 'readonly'\r\n\t\t\t\t})).set({\r\n\t\t\t\t\t'element': 'INPUT',\r\n\t\t\t\t\t'label': 'ID'\r\n\t\t\t\t}),\r\n\t\t\t\tnew MODEL(new ATTRIBUTES({\r\n\t\t\t\t\t'name': 'label',\r\n\t\t\t\t\t'value': typeof this.get('label') === 'object' ? this.get('label').el.innerHTML.toString() : this.get('label').toString()\r\n\t\t\t\t})).set({\r\n\t\t\t\t\t'element': 'INPUT',\r\n\t\t\t\t\t'label': 'Label'\r\n\t\t\t\t}),\r\n\t\t\t\tnew MODEL(new ATTRIBUTES({\r\n\t\t\t\t\t'name': 'subsections',\r\n\t\t\t\t\t'value': subsections.length > 0 ? subsections.toString() : '0',\r\n\t\t\t\t\t'readonly': 'readonly'\r\n\t\t\t\t})).set({\r\n\t\t\t\t\t'element': 'INPUT',\r\n\t\t\t\t\t'label': 'SubSections'\r\n\t\t\t\t}),\r\n\t\t\t\t// Should be checkbox or dropdown\r\n\t\t\t\tnew MODEL(new ATTRIBUTES({\r\n\t\t\t\t\t'name': 'status',\r\n\t\t\t\t\t'type': 'NUMBER',\r\n\t\t\t\t\t'value': this.get('status').toString()\r\n\t\t\t\t})).set({\r\n\t\t\t\t\t'element': 'INPUT',\r\n\t\t\t\t\t'label': 'Status'\r\n\t\t\t\t}),\r\n\t\t\t\tnew MODEL(new ATTRIBUTES({\r\n\t\t\t\t\t'name': 'dataId',\r\n\t\t\t\t\t'type': 'NUMBER',\r\n\t\t\t\t\t'value': this.get('dataId').toString()\r\n\t\t\t\t})).set({\r\n\t\t\t\t\t'element': 'BUTTON',\r\n\t\t\t\t\t'label': 'dataId',\r\n\t\t\t\t\t'type': 'FORMPOSTINPUT'\r\n\t\t\t\t}),\r\n\t\t\t\tnew MODEL(new ATTRIBUTES({\r\n\t\t\t\t\t'name': 'attributesId',\r\n\t\t\t\t\t'type': 'NUMBER',\r\n\t\t\t\t\t'value': this.get('attributesId').toString()\r\n\t\t\t\t})).set({\r\n\t\t\t\t\t'element': 'BUTTON',\r\n\t\t\t\t\t'label': 'attributesId',\r\n\t\t\t\t\t'type': 'FORMPOSTINPUT'\r\n\t\t\t\t}),\r\n\t\t\t\tnew MODEL(new ATTRIBUTES({\r\n\t\t\t\t\t'name': 'descriptionId',\r\n\t\t\t\t\t'type': 'NUMBER',\r\n\t\t\t\t\t'value': this.get('descriptionId').toString()\r\n\t\t\t\t})).set({\r\n\t\t\t\t\t'element': 'BUTTON',\r\n\t\t\t\t\t'label': 'descriptionId',\r\n\t\t\t\t\t'type': 'FORMPOSTINPUT'\r\n\t\t\t\t}),\r\n\t\t\t\tnew MODEL(new ATTRIBUTES({\r\n\t\t\t\t\t'name': 'shared',\r\n\t\t\t\t\t'type': 'NUMBER',\r\n\t\t\t\t\t'value': this.get('shared').toString()\r\n\t\t\t\t})).set({\r\n\t\t\t\t\t'element': 'BUTTON',\r\n\t\t\t\t\t'label': 'shared'\r\n\t\t\t\t})\r\n\t\t\t]);\r\n\t\t\tform.setPostUrl(this.className + '/Set');\r\n\t\t\tform.post();\r\n\t\t\tform.afterSuccessfulPost = () => {\r\n\t\t\t\tthis.setLabel(form.el.elements.label.value);\r\n\t\t\t\tform.destroy();\r\n\t\t\t\tthis.quickSaveFormPost(this.dataId, this.data);\r\n\t\t\t\tthis.quickSaveFormPost(this.attributesId, this.attributes);\r\n\t\t\t};\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t    Attempts to have the direct parent Container of this Container perform\r\n\t    a QuickSave\r\n\t    @returns {Boolean} Returns true if successful\r\n\t*/\r\n\tquickSaveParent() {\r\n\t\ttry {\r\n\t\t\treturn this.container.quickSave(false);\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log('Container.QuickSaveParent() No parent exists');\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t\tActions performed after this container is saved\r\n\t\t@param {EL} node Parent node\r\n\t\t@param {EL} caller This\r\n\t    @returns {void}\r\n\t\t*/\r\n\tafterSuccessfulPost(node, caller) {\r\n\t\tconsole.log(100, 'Successful Post', node, caller);\r\n\t}\r\n\t/**\r\n\t    Returns the label for this section\r\n\t    @returns {string} The label\r\n\t*/\r\n\tgetLabel() {\r\n\t\treturn this.header.getLabel();\r\n\t}\r\n\t/**\r\n\t\tSets the label of this element to the given value.\r\n\t\t@param {string} label The name to be set\r\n\t    @returns {void}\r\n\t*/\r\n\tsetLabel(label) {\r\n\t\tthis.navBar.header.tab.anchor.setInnerHTML(label);\r\n\t\tthis.label = label;\r\n\t}\r\n\t/**\r\n\t\tSets the subsection array to the given value\r\n\t\t@param {array} subsections Sub Section UID array\r\n\t    @returns {void}\r\n\t*/\r\n\tsetSubSections(subsections) {\r\n\t\tthis.model.subsections = subsections;\r\n\t}\r\n\t/**\r\n        Toggles visibility of any child Container Headers\r\n        @returns {void}\r\n\t*/\r\n\ttoggleHeaders() {\r\n\t\t$(this.el).find('.icarus-container nav.navbar-nav').toggle();\r\n\t}\r\n\t/**\r\n        Updates the model\r\n        @param {any} payload Data returned by server\r\n        @returns {void}\r\n\t*/\r\n\tupdateModel() { //payload\r\n\t\t//console.log('updatemodel');\r\n\t\t//this.setName(payload.name);\r\n\t\t//this.setLabel(payload.label);\r\n\t\t//this.setSubSections(payload.subsections);\r\n\t}\r\n\t/**\r\n        Creates a PROMPT and if user permits, deletes this CONTAINER from the DOM.\r\n        Optionally, this should also delete the object from the database\r\n        @returns {void}\r\n    */\r\n\tremove() {\r\n\t\tlet label = 'Remove ' + this.className + '{' + this.element + '}[' + this.id + ']';\r\n\t\tlet text = 'Remove ' + this.className + ' from ' + this.node.node.node.className + '?';\r\n\t\ttry {\r\n\t\t\t/*\r\n\t\t\tlet dialog = new PROMPT(label, text, [], [], true); // label, text, buttons, inputs, vertical            \r\n\t\t\tdialog.form.footer.buttonGroup.children[0].setLabel('Remove', ICONS.REMOVE);\r\n\t\t\tdialog.form.footer.buttonGroup.children[0].el.onclick = () => {\r\n\t\t\t\tthis.destroy();\r\n\t\t\t\tthis.prompt.hide();\r\n\t\t\t};\r\n\t\t\tdialog.show();\r\n\t\t\t*/\r\n\t\t\tlet dialog = new DIALOG(new MODEL().set({\r\n\t\t\t\tlabel,\r\n\t\t\t\ttext,\r\n\t\t\t\t'token': this.getMainContainer().getToken()\r\n\t\t\t}));\r\n\t\t\tdialog.show();\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log('Unable to disable this ' + this.element, e);\r\n\t\t}\r\n\t}\r\n\t/**\r\n        Typically this function is used within JQuery posts.\r\n        If the results are a Payload and its status is \"success\",\r\n        the page is reloaded.\r\n\r\n        @param {object} payload A post payload\r\n        @param {any} status Result status\r\n        @returns {void} \r\n    */\r\n\tajaxRefreshIfSuccessful(payload, status) {\r\n\t\tconsole.log('ajaxRefreshIfSuccessful: Payload', payload, 'status', status);\r\n\t\tif (payload.result) { //!== 0\r\n\t\t\tlet url = new URL(window.location.href);\r\n\t\t\tlet returnUrl = url.searchParams.get('ReturnUrl');\r\n\t\t\tif (returnUrl) {\r\n\t\t\t\treturnUrl = url.origin + returnUrl;\r\n\t\t\t\tlocation.href = returnUrl;\r\n\t\t\t} else {\r\n\t\t\t\tlocation.reload(true);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.log('Login failed. (err_' + status + ')', payload.message);\r\n\t\t\tconsole.log('Failed to POST results to server with status: \"' + status + '\"', payload);\r\n\t\t}\r\n\t}\r\n\t/**\r\n        Creates a PROMPT and if user permits, deletes this CONTAINER from the DOM.\r\n        Optionally, this should also delete the object from the database\r\n        @returns {void}\r\n    */\r\n\tdisable() {\r\n\t\tlet label = 'Disable ' + this.className + '{' + this.element + '}[' + this.id + ']';\r\n\t\tlet text = 'Disable ' + label + ' in the Database?<br>This ' + this.className + ' will be permenantly deleted from database in X days!!!';\r\n\t\t//let container = this.getContainer();\r\n\t\t//let main = container.getMainContainer();\r\n\t\tlet token = this.getMainContainer().getToken();\r\n\t\t//console.log('Token', token);\r\n\t\ttry {\r\n\t\t\tthis.prompt = new PROMPT(label, text, [], [], true);\r\n\t\t\tthis.prompt.form.footer.buttonGroup.children[0].setLabel('Disable', ICONS.REMOVE);\r\n\t\t\tthis.prompt.form.footer.buttonGroup.children[0].el.onclick = () => {\r\n\t\t\t\tthis.destroy();\r\n\t\t\t\tthis.prompt.hide();\r\n\t\t\t\tconsole.log('TODO: Disable method on Container controller.');\r\n\t\t\t\tconsole.log(100, 'Disabling ' + this.className);\r\n\t\t\t\t$.post('/' + this.className + '/Disable/' + this.id, {\r\n\t\t\t\t\t'__RequestVerificationToken': token //token.value\r\n\t\t\t\t}, this.ajaxRefreshIfSuccessful);\r\n\t\t\t\tconsole.log(100, 'Disable Complete');\r\n\t\t\t};\r\n\t\t\tthis.prompt.show();\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log('Unable to disable this ' + this.element, e);\r\n\t\t}\r\n\t}\r\n}\r\nexport { ATTRIBUTES, DATAELEMENTS, DIALOG, EL, FOOTER, FORM, HEADER, ICONS, INPUTTYPES, MODEL };"]}