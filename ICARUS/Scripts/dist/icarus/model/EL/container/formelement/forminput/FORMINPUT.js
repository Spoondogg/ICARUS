import FORMELEMENT,{ATTRIBUTES,EL,INPUTTYPES,MODEL}from"../FORMELEMENT.js";import DATALIST from"../../../datalist/DATALIST.js";import FORMTEXTAREA from"../formtextarea/FORMTEXTAREA.js";import IMG from"../../../img/IMG.js";import INPUT from"../../../input/INPUT.js";export default class FORMINPUT extends FORMELEMENT{constructor(e,t){console.log("FORMINPUT"),super(e,"DIV",t),this.createInput()}createInput(){let e=this.attributes.name||this.data.name,t=this.attributes.value||this.data.value;return this.input=new INPUT(this.body.pane,new MODEL(new ATTRIBUTES({class:"form-control",type:this.attributes.type||this.data.type||"TEXT",list:e+"-options",name:e,value:t||""}))),"file"===this.data.type||"image"===this.attributes.type||"file"===this.attributes.type?this.createSubForm():this.addInputOptions(),this.input}addInputOptions(){if(this.options=[],this.datalist=new DATALIST(this.node,new MODEL(new ATTRIBUTES({id:this.attributes.name+"-options"}))),Array.isArray(this.options))for(let e=0;e<this.options.length;e++)this.addOption(this.options[e].value)}createSubForm(){this.img=new IMG(this.body.pane,new MODEL("input-image-preview")),this.img.el.onclick=(()=>{this.input.el.click()}),this.img.el.onload=(()=>{this.dimX.input.el.setAttribute("value",this.img.el.naturalWidth),this.dimY.input.el.setAttribute("value",this.img.el.naturalHeight)}),this.base64=new FORMTEXTAREA(this.body.pane,new MODEL(new ATTRIBUTES({name:"base64"}).set({name:"base64"}))),this.fileName=new FORMINPUT(this.body.pane,new MODEL(new ATTRIBUTES({name:"filename",label:"base64"}).set({name:"filename"}))),this.fileType=new FORMINPUT(this.body.pane,new MODEL(new ATTRIBUTES({name:"fileType",label:"base64"}).set({name:"fileType"}))),this.fileSize=new FORMINPUT(this.body.pane,new MODEL(new ATTRIBUTES({name:"fileSize"}).set({name:"fileSize"}))),this.dimX=new FORMINPUT(this.body.pane,new MODEL(new ATTRIBUTES({name:"dimX"}).set({name:"dimX"}))),this.dimY=new FORMINPUT(this.body.pane,new MODEL(new ATTRIBUTES({name:"dimY"}).set({name:"dimY"}))),this.input.el.onchange=this.readURL.bind(this)}readURL(){console.log(10,"readUrl():  Reading an Image");try{if(this.input.el.files&&this.input.el.files[0]){let e=new FileReader;return e.onload=function(e){$(this.input.el).attr("src",e.target.result),this.img.el.src=e.target.result,this.base64.input.el.innerHTML=e.target.result,this.fileName.input.el.value=this.input.el.files[0].name,this.fileType.input.el.value=this.input.el.files[0].type,this.fileSize.input.el.value=Math.ceil(this.input.el.files[0].size/1e3)}.bind(this),e.readAsDataURL(this.input.el.files[0]),!0}}catch(e){throw e}}setLabel(e){return this.navBar.menu.tab.anchor.setInnerHTML(e),this.label.setInnerHTML(e),this.input.el.setAttribute("name",e),this}addOption(e,t){return this.options.push(new Option(this.datalist.el,e,t)),this}}export{ATTRIBUTES,EL,FORMELEMENT,INPUTTYPES,MODEL};
//# sourceMappingURL=FORMINPUT.js.map
