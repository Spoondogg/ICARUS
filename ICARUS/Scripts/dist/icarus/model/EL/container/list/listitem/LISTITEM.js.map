{"version":3,"sources":["model/EL/container/list/listitem/LISTITEM.js"],"names":["CONTAINER","MODEL","P","LISTITEM","[object Object]","node","model","super","this","populate","children","dataId","data","p","body","pane","htmlDecode"],"mappings":"OAGOA,WAAaC,UAAa,4BAC1BC,MAAO,iCAOC,MAAMC,iBAAiBH,UAMrCI,YAAYC,EAAMC,GACjBC,MAAMF,EAAM,KAAMC,EAAO,CAAC,SAC1BE,KAAKC,SAASH,EAAMI,UAErBN,aACKI,KAAKG,OAAS,IAAsB,IAAjBH,KAAKG,SACvBH,KAAKI,KAAKC,IACbL,KAAKK,EAAI,IAAIX,EAAEM,KAAKM,KAAKC,KAAM,IAAId,MAASO,KAAKQ,WAAWR,KAAKI,KAAKC","file":"LISTITEM.js","sourcesContent":["/**\r\n    @module\r\n*/\r\nimport CONTAINER, { MODEL } from '../../CONTAINER.js';\r\nimport P from '../../../p/P.js';\r\n/**\r\n    List Item Constructor\r\n    A LIST is essentially a UL that is designed to contain List Items (LI)\r\n    @class\r\n    @extends CONTAINER    \r\n*/\r\nexport default class LISTITEM extends CONTAINER {\r\n\t/**\r\n\t    Constructs A List Item\r\n\t    @param {EL} node Parent Node\r\n\t    @param {MODEL} model Object MODEL\r\n\t */\r\n\tconstructor(node, model) {\r\n\t\tsuper(node, 'LI', model, ['LIST']);\r\n\t\tthis.populate(model.children);\r\n\t}\r\n\tconstruct() {\r\n\t\tif (this.dataId > 0 || this.dataId === -1) {\r\n\t\t\tif (this.data.p) {\r\n\t\t\t\tthis.p = new P(this.body.pane, new MODEL(), this.htmlDecode(this.data.p));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"]}