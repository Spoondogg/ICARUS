{"version":3,"sources":["model/EL/container/paragraph/PARAGRAPH.js"],"names":["CONTAINER","MODEL","FORMPOSTINPUT","HEADER","P","PARAGRAPH","[object Object]","node","model","super","this","addClass","body","pane","populate","children","dataId","data","p","d","getDateCreated","header","set","label","date","time","htmlDecode","inputs","newAttributes"],"mappings":"OACOA,WAAaC,UAAa,yBAC1BC,kBAAmB,uDACnBC,WAAY,gCACZC,MAAO,8BAMC,MAAMC,kBAAkBL,UAKtCM,YAAYC,EAAMC,GACjBC,MAAMF,EAAM,MAAOC,EAAO,CAAC,UAC3BE,KAAKC,SAAS,aACdD,KAAKE,KAAKC,KAAKF,SAAS,aACxBD,KAAKI,SAASN,EAAMO,UAKrBT,YACC,GAAII,KAAKM,OAAS,GACjB,GAAIN,KAAKO,KAAKC,EAAG,CACJ,IAAIC,EAAIT,KAAKU,iBACzBV,KAAKW,OAAS,IAAIlB,OAAOO,KAAKE,KAAKC,MAAM,IAAIZ,OAAQqB,IAAI,CACxDC,MAASJ,EAAEK,KAAO,MAAQL,EAAEM,QAE7Bf,KAAKQ,EAAI,IAAId,EAAEM,KAAKE,KAAKC,KAAM,IAAIZ,MAASS,KAAKgB,WAAWhB,KAAKO,KAAKC,SAEjE,CACc,IAAIhB,cAAcQ,MAAM,IAAIT,OAAQqB,IAAI,CAC3DK,OAAUjB,KAAKiB,UAEFC,cAAclB,KAAM,SAAUA","file":"PARAGRAPH.js","sourcesContent":["/** @module */\r\nimport CONTAINER, { MODEL } from '../CONTAINER.js';\r\nimport FORMPOSTINPUT from '../formelement/formpostinput/FORMPOSTINPUT.js';\r\nimport HEADER from '../../header/HEADER.js';\r\nimport P from '../../p/P.js';\r\n/** A block of text\r\n    @class\r\n    @deprecated Replaced with TEXTBLOCK\r\n    @extends CONTAINER\r\n*/\r\nexport default class PARAGRAPH extends CONTAINER {\r\n\t/** Constructs a Banner that contains CallOuts.\r\n        @param {CONTAINER} node The model\r\n        @param {MODEL} model Object Model\r\n    */\r\n\tconstructor(node, model) {\r\n\t\tsuper(node, 'DIV', model, ['IMAGE']);\r\n\t\tthis.addClass('textblock');\r\n\t\tthis.body.pane.addClass('paragraph');\r\n\t\tthis.populate(model.children);\r\n\t}\r\n\t/** Constructs a Paragraph Container\r\n        @returns {void}\r\n\t*/\r\n\tconstruct() {\r\n\t\tif (this.dataId > 0) {\r\n\t\t\tif (this.data.p) {\r\n                let d = this.getDateCreated();\r\n\t\t\t\tthis.header = new HEADER(this.body.pane, new MODEL().set({\r\n\t\t\t\t\t'label': d.date + ' - ' + d.time\r\n\t\t\t\t}));\r\n\t\t\t\tthis.p = new P(this.body.pane, new MODEL(), this.htmlDecode(this.data.p));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet formPostInput = new FORMPOSTINPUT(this, new MODEL().set({\r\n\t\t\t\t'inputs': this.inputs\r\n\t\t\t}));\r\n\t\t\tformPostInput.newAttributes(this, 'dataId', this);\r\n\t\t}\r\n\t}\r\n}"]}