{"version":3,"sources":["model/EL/container/main/MAIN.js"],"names":["CONTAINER","DIALOG","ICONS","MODEL","FORM","LOADER","NAVITEMICON","SIDEBAR","STICKYFOOTER","MAIN","[object Object]","model","document","title","label","super","body","this","addClass","navBar","pane","factory","loader","token","url","sidebar","set","addNavOptions","stickyFooter","populate","children","el","setAttribute","showNavBar","user","btnLogin","menu","tabs","addNavItemIcon","icon","USER","onclick","login","bind","dev","btnSidebar","toggleSidebar","$","insertBefore","tab","focusBody","addDefaultMenuItems","userMenu","addMenu","name","showHeader","collapsed","toggleCollapse","logout","OPTIONS","domMenu","getGroup","HOME","setTimeout","location","href","origin","TOGGLE","toggleHeaders","CONSOLE","show","showConsole","REFRESH","reload","crudMenu","newMain","getJSON","payload","console","log","hasClass","removeClass","collapse","id","returnUrl","searchParams","get","loadAjaxCall","data","result","empty","setId","setLabel","e","className","message","toggle","dialog","text","form","createEmptyForm","appendTo","setPostUrl","addInputElements","createInputModel","footer","buttonGroup","addButton","register","afterSuccessfulPost","status","ajaxRefreshIfSuccessful","externalLogin","prompt","container","style","display","post","__RequestVerificationToken"],"mappings":"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","file":"MAIN.js","sourcesContent":["/** @module */\r\nimport CONTAINER, { DIALOG, ICONS, MODEL } from '../CONTAINER.js'; // ATTRIBUTES, INPUTTYPES\r\n//import CONTAINERFACTORY from '../../../../controller/CONTAINERFACTORY.js';\r\nimport FORM from '../../form/FORM.js';\r\n//import FORMINPUT from '../formelement/forminput/FORMINPUT.js';\r\nimport LOADER from '../../modal/loader/LOADER.js';\r\n//import MENU from '../../nav/menu/MENU.js';\r\nimport NAVITEMICON from '../../nav/navitemicon/NAVITEMICON.js';\r\n//import PROMPT from '../../modal/prompt/PROMPT.js';\r\nimport SIDEBAR from '../sidebar/SIDEBAR.js';\r\nimport STICKYFOOTER from '../../footer/stickyfooter/STICKYFOOTER.js';\r\n/** A top level View that holds all other child Containers\r\n    @class\r\n    @extends CONTAINER\r\n*/\r\nexport default class MAIN extends CONTAINER {\r\n\t/** Constructs a MAIN Container and populates the DOM\r\n\t    with any relevant elements\r\n\t    @constructor\r\n\t    @param {MODEL} model APP model\r\n\t */\r\n\tconstructor(model) {\r\n\t\tdocument.title = model.label;\r\n\t\tsuper(document.body, 'MAIN', model, ['ARTICLE', 'INDEX', 'INDEXMAIN', 'CLASSVIEWER', 'IMAGEGALLERY', 'DICTIONARY', 'WORD']);\r\n\t\tthis.addClass('app').navBar.addClass('navbar-fixed-top');\r\n\t\tthis.body.pane.addClass('pane-tall');\r\n\t\t/** @type {CONTAINERFACTORY} */\r\n\t\tthis.factory = model.factory;\r\n\t\t/** @type {LOADER} */\r\n\t\tthis.loader = model.loader;\r\n\t\t/** A Security token @type {string} */\r\n\t\tthis.token = model.token;\r\n\t\t/** Browser Url\r\n\t\t    @property {Url} url The browser url\r\n\t\t*/\r\n\t\tthis.url = model.url;\r\n\t\t/** A Sidebar for details and navigation\r\n\t\t    @property {SIDEBAR} sidebar A Sidebar that exists at the top level of the MAIN Container\r\n\t\t*/\r\n\t\tthis.sidebar = new SIDEBAR(this, new MODEL().set({ 'label': 'Left Sidebar' }));\r\n\t\tthis.addNavOptions();\r\n\t\tthis.stickyFooter = new STICKYFOOTER(this, new MODEL());\r\n\t\tthis.populate(model.children);\r\n\t}\r\n\tconstruct() {\r\n\t\tthis.navBar.el.setAttribute('draggable', 'false');\r\n\t\tthis.showNavBar();\r\n\t\tif (this.user === 'Guest') {\r\n\t\t\tthis.btnLogin = this.navBar.menu.tabs.addNavItemIcon(new MODEL('pull-right').set({\r\n\t\t\t\t'icon': ICONS.USER,\r\n\t\t\t\t'label': 'LOG IN'\r\n\t\t\t}));\r\n\t\t\tthis.btnLogin.el.onclick = this.login.bind(this);\r\n\t\t}\r\n\t}\r\n\t/** Returns the Application Dev setting\r\n\t    @todo Move this into a config\r\n\t    @returns {boolean} Returns true if app in dev mode\r\n\t*/\r\n\tisDev() {\r\n\t\treturn this.dev;\r\n\t}\r\n\t/** Returns a friendly username for the current user (if exists)\r\n\t    @returns {string} A friendly username\r\n\t*/\r\n\tgetUser() {\r\n\t\treturn this.user;\r\n\t}\r\n\t/** Returns the MAIN Factory\r\n\t    @returns {CONTAINERFACTORY} The Main Container Factory\r\n\t*/\r\n\tgetFactory() {\r\n\t\treturn this.factory;\r\n\t}\r\n\t/** Add items to Options Dropdown Tab\r\n\t    @returns {ThisType} Returns this MAIN for method chaining\r\n\t*/\r\n\taddNavOptions() {\r\n\t\tif (this.navBar.menu.menu) {\r\n\t\t\tthis.btnSidebar = this.navBar.menu.tabs.addNavItemIcon(new MODEL('pull-left').set({\r\n\t\t\t\t'icon': ICONS.SIDEBAR\r\n\t\t\t}));\r\n\t\t\tthis.btnSidebar.el.onclick = this.toggleSidebar.bind(this);\r\n\t\t\t$(this.btnSidebar.el).insertBefore(this.navBar.menu.tab.el);\r\n\t\t\tthis.body.el.onclick = this.focusBody.bind(this); // Hide Sidebar when container body is focused\r\n\t\t\tthis.addDefaultMenuItems();\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t    Adds a NavItemIcon to the given menu with the given params\r\n\t    @param {MENU} menu A navigation MENU\r\n\t    @param {string} icon An Icon reference\r\n\t    @param {string} label The displayed text\r\n\t    @param {string} url The optional url that this Nav Item references \r\n\t    @returns {NAVITEMICON} A Nav Item with an Icon and optional label\r\n\t */\r\n\taddNavItemIcon(menu, icon, label = '', url = '#') {\r\n\t\treturn menu.addNavItemIcon(new MODEL().set({\r\n\t\t\ticon,\r\n\t\t\tlabel,\r\n\t\t\turl\r\n\t\t}))\r\n\t}\r\n\t/**\r\n\t    Adds the default User, Crud and Dom menus to this Container\r\n\t    @returns {void}\r\n\t*/\r\n\taddDefaultMenuItems() {\r\n\t\tlet userMenu = this.navBar.menu.menu.addMenu(new MODEL('horizontal collapse').set({\r\n\t\t\t'name': 'USER',\r\n\t\t\t'showHeader': 1,\r\n\t\t\t'collapsed': 1\r\n\t\t}));\r\n\t\tthis.addNavItemIcon(userMenu, ICONS.USER, 'Log Out', '#?url=logout').el.onclick = () => {\r\n\t\t\tthis.navBar.menu.toggleCollapse();\r\n\t\t\tthis.logout();\r\n\t\t};\r\n\t\tthis.addNavItemIcon(userMenu, ICONS.OPTIONS, 'Manage', 'Manage/Index');\r\n\t\tlet domMenu = this.navBar.menu.menu.getGroup('DOM');\r\n\t\tthis.addNavItemIcon(domMenu, ICONS.HOME, 'Home').el.onclick = () => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tlocation.href = this.url.origin;\r\n\t\t\t}, 300);\r\n\t\t};\r\n\t\tthis.addNavItemIcon(domMenu, ICONS.TOGGLE, 'Headers').el.onclick = () => {\r\n\t\t\tthis.toggleHeaders();\r\n\t\t\tthis.navBar.menu.toggleCollapse();\r\n\t\t};\r\n\t\tthis.addNavItemIcon(domMenu, ICONS.CONSOLE, 'Console').el.onclick = () => {\r\n\t\t\tthis.loader.show();\r\n\t\t\tthis.loader.showConsole();\r\n\t\t};\r\n\t\tthis.addNavItemIcon(domMenu, ICONS.REFRESH, 'Reload').el.onclick = () => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tlocation.reload(true);\r\n\t\t\t}, 1000);\r\n\t\t};\r\n\t\tlet crudMenu = this.navBar.menu.menu.getGroup('CRUD');\r\n\t\tthis.addNavItemIcon(crudMenu, ICONS.MAIN, 'New').el.onclick = this.newMain.bind(this);\r\n\t}\r\n\t/** Requests a new {@link MAIN} from the server and redirects to that page\r\n        @todo This should be a POST to avoid CSRF\r\n        @returns {Promise<boolean>} Promised to return true if new MAIN created successfully\r\n    */\r\n\tnewMain() {\r\n\t\t$.getJSON('/MAIN/Get/0', (payload) => {\r\n\t\t\tconsole.log('Created MAIN', payload);\r\n\t\t\t/**\r\n\t\t\t    Prompts the user to open the new page.\r\n\t\t\t    In order to avoid popup blocking, the user must \r\n\t\t\t    manually click to be redirected or launch a new\r\n\t\t\t    page in this window\r\n\t\t\t\t\t\t\r\n\t\t\tlet url = '/' + payload.model.id;\r\n\t\t\tlet prompt = new PROMPT('New Page', 'A new page has been created at <a href=\"' + url + '\" target=\"_blank\">' + url + '</a>');\r\n\t\t\tlet button = prompt.form.footer.buttonGroup.children[0];\r\n\t\t\tbutton.setLabel('Open in new Window?');\r\n\t\t\tbutton.el.onclick = () => {\r\n\t\t\t\twindow.open(url, '_blank');\r\n\t\t\t\tprompt.hide(300, true);\r\n\t\t\t};\r\n\t\t\tprompt.form.footer.buttonGroup.addButton('Open in this Window?').el.onclick = () => {\r\n\t\t\t\tlocation.href = url;\r\n\t\t\t\tprompt.hide(300, true);\r\n\t\t\t};\r\n\t\t\tprompt.show();*/\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\t/** Overrides CONTAINER.getContainer() and returns this MAIN Container\r\n\t    @returns {MAIN} The MAIN Container\r\n\t*/\r\n\tgetContainer() {\r\n\t\treturn this;\r\n\t}\r\n\t/** Overrides CONTAINER.getMainContainer() and returns this MAIN Container\r\n\t    @returns {MAIN} The MAIN Container\r\n\t*/\r\n\tgetMainContainer() {\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t    Sets the focus on the Main container body.  \r\n\t    This generally is used to hide elements such \r\n\t    as a Sidebar, Modal or an EDIT pane\r\n\t    @returns {void}\r\n\t*/\r\n\tfocusBody() {\r\n\t\tif ($(this.sidebar.el).hasClass('active')) {\r\n\t\t\tthis.sidebar.removeClass('active');\r\n\t\t}\r\n\t\t$(this.navBar.menu.menu.el).collapse('hide');\r\n\t}\r\n\t/** Loads the specified app id into the Main Container\r\n\t    @todo Prompt the user for an Id to load\r\n\t    @todo create a simple application browser to retrieve a MAIN\r\n\t\t@param {number} id App Id to load\r\n\t\t@returns {MAIN} This MAIN\r\n\t*/\r\n\tload(id = 1) {\r\n\t\tlet returnUrl = this.url.searchParams.get('ReturnUrl');\r\n\t\tif (returnUrl) {\r\n\t\t\treturnUrl = this.url.origin + returnUrl;\r\n\t\t\tlocation.href = returnUrl;\r\n\t\t}\r\n\t\t$.getJSON('Main/Get/' + id, this.loadAjaxCall.bind(this));\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t\tThe ajax call performed when MAIN.load is called\r\n\t\tReceives the MAIN model from Main/Get/id (if permitted)\r\n\t\tThen, sets the document title, application id and label\r\n\t\tand Populates accordingly\r\n\t\t@param {any} data The ajax payload\r\n\t    @returns {boolean} True on success\r\n\t    @throws Throws an error if unable to construct given class\r\n\t*/\r\n\tloadAjaxCall(data) {\r\n\t\tif (data.result === 1) {\r\n\t\t\ttry {\r\n\t\t\t\tif (data.model.label) {\r\n\t\t\t\t\tdocument.title = data.model.label;\r\n\t\t\t\t}\r\n\t\t\t\tthis.body.pane.empty();\r\n\t\t\t\tthis.setId(this.id);\r\n\t\t\t\tthis.setLabel(data.model.label);\r\n\t\t\t\tthis.populate(data.model.children);\r\n\t\t\t\treturn true;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(0, 'Unable to construct ' + this.className + '(' + this.id + ')');\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.loader.log(0, 'Failed to retrieve ' + this.className + '(' + this.id + ') from server\\n' + data.message);\r\n\t\t\tthis.loader.showConsole();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t\tToggles the active state of the sidebar\r\n\t    @return {ThisType} Return this for method chain\r\n\t\t*/\r\n\ttoggleSidebar() {\r\n\t\tthis.sidebar.toggle('active');\r\n\t\treturn this;\r\n\t}\r\n\t/** Allows the user to open a MAIN \r\n\t\t@param {number} id MAIN id\r\n\t    @todo Create method to browse MAINs\r\n\t    @returns {boolean} True on success\r\n\t*/\r\n\topen(id = 0) {\r\n\t\tconsole.log('TODO: APP.open(' + id + ')');\r\n\t\treturn false;\r\n\t}\r\n\t/** Returns the APP Id\r\n\t    @returns {number} App Id\r\n\t*/\r\n\tgetId() {\r\n\t\treturn this.id;\r\n\t}\r\n\t/** Launches the External Authentication Process\r\n\t\tThe user will be redirected to a third party authenticator\r\n\t    @returns {void}\r\n\t*/\r\n\tloginExternal() {\r\n\t\tconsole.log('loginExternal()');\r\n\t\t/*\r\n\t\t\t\tconsole.log('Log In - External OAuth Provider');\r\n\t\t\t\tthis.prompt = new PROMPT('Log In - OAuth', '', [], [], true);\r\n\t\t\t\tthis.prompt.addClass('prompt');\r\n\t\t\t\tthis.prompt.form.postUrl = '/Account/ExternalLogin';\r\n\t\t\t\tthis.prompt.form.provider = new EL(this.prompt.form.fieldset.formElementGroup.body.pane, 'INPUT', new MODEL(new ATTRIBUTES({\r\n\t\t\t\t\t'type': 'hidden',\r\n\t\t\t\t\t'name': 'provider'\r\n\t\t\t\t})));\r\n\t\t\t\tthis.prompt.form.returnUrl = new EL(this.prompt.form.fieldset.formElementGroup.body.pane, 'INPUT', new MODEL(new ATTRIBUTES({\r\n\t\t\t\t\t'type': 'hidden',\r\n\t\t\t\t\t'name': 'ReturnUrl'\r\n\t\t\t\t})));\r\n\t\t\t\tthis.prompt.form.destroy(0);\r\n\t\t\t\t// Create a new form to submit 3rd party logins\r\n\t\t\t\tthis.externalLogin = FORM.createEmptyForm(this.prompt.container.body.pane);\r\n\t\t\t\tthis.externalLogin.el.setAttribute('method', 'post');\r\n\t\t\t\tthis.externalLogin.el.setAttribute('action', '/Account/ExternalLogin?ReturnUrl=%2F');\r\n\t\t\t\tthis.externalLogin.footer.buttonGroup.children[0].el.style.display = 'none';\r\n\t\t\t\tthis.provider = new EL(this.externalLogin.fieldset.formElementGroup.body.pane, 'INPUT', new MODEL(new ATTRIBUTES({\r\n\t\t\t\t\t'type': 'hidden',\r\n\t\t\t\t\t'name': 'provider'\r\n\t\t\t\t})));\r\n\t\t\t\tthis.returnUrl = new EL(this.externalLogin.fieldset.formElementGroup.body.pane, 'INPUT', new MODEL(new ATTRIBUTES({\r\n\t\t\t\t\t'type': 'hidden',\r\n\t\t\t\t\t'name': 'ReturnUrl'\r\n\t\t\t\t})));\r\n\t\t\t\tlet btnOAuth = this.externalLogin.footer.buttonGroup.addButton('OAuth - Google');\r\n\t\t\t\tbtnOAuth.el.onclick = () => {\r\n\t\t\t\t\tconsole.log(50, 'Launching OAuth2 Authenticator...');\r\n\t\t\t\t\t//let url = new URL(window.location.href);\r\n\t\t\t\t\tlet returnUrl = this.url.origin + '/signin-google';\r\n\t\t\t\t\tthis.returnUrl.el.setAttribute('value', returnUrl);\r\n\t\t\t\t\tlet provider = 'Google';\r\n\t\t\t\t\tthis.provider.el.setAttribute('value', provider);\r\n\t\t\t\t\tlet postUrl = '/Account/ExternalLogin/externalLogin?provider=' + provider + '&returnUrl=' + encodeURI(returnUrl);\r\n\t\t\t\t\tlocation.href = postUrl;\r\n\t\t\t\t};\r\n\t\t\t\tthis.prompt.show();\r\n\t\t        */\r\n\t}\r\n\t/** Log into the application using the given credentials\r\n\t\tparam {string} email Username / Email \r\n\t\tparam {string} password Account Password\r\n\r\n        <form action=\"/Account/ExternalLogin?ReturnUrl=%2F\" method=\"post\">\r\n\t\t\t<input name=\"__RequestVerificationToken\" type=\"hidden\" value=\"woot\">\r\n            <div id=\"socialLoginList\">\r\n\t\t\t<p>\r\n\t\t\t    <button type=\"submit\"\r\n\t\t\t        class=\"btn btn-default\" id=\"Google\"\r\n\t\t\t        name=\"provider\" value=\"Google\"\r\n\t\t\t        title=\"Log in using your Google account\"\r\n\t\t\t    >Google</button>\r\n\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\r\n\t    @todo Consider handling email/password string or CREDENTIALS object\r\n\t    @todo Create INPUT CHECKBOX called 'RememberMe'\r\n\t    @todo Create BUTTON to launch 'Register as new User\r\n\t    @todo Create AHREF to 'ForgotPassword'\r\n\t    @returns {void}\r\n\t*/\r\n\tlogin() { //email, password\r\n\t\tlet dialog = new DIALOG(new MODEL().set({ 'text': 'Log In' })); //'token': this.getMainContainer().getToken()\r\n\t\tlet form = FORM.createEmptyForm(this.body.pane);\r\n\t\t$(form.el).appendTo(dialog.body.el);\r\n\t\tform.setPostUrl('/Account/Login');\r\n\t\tform.id = 0;\r\n\t\tform.label = 'Login';\r\n\t\tform.el.setAttribute('id', 0);\r\n\t\tform.el.setAttribute('class', 'login');\r\n\t\tform.el.setAttribute('method', 'POST');\r\n\t\tform.el.setAttribute('action', '#');\r\n\t\tform.children[0].children[0].addInputElements([ // fieldset.formElementGroup\r\n\t\t\tFORM.createInputModel('INPUT', 'Email', 'Email / Username', '', 'EMAIL'),\r\n\t\t\tFORM.createInputModel('INPUT', 'Password', 'Password', '', 'PASSWORD'),\r\n\t\t\tFORM.createInputModel('INPUT', 'RememberMe', 'Remember Me', '', 'CHECKBOX')\r\n\t\t]);\r\n\t\tform.footer.buttonGroup.addButton('Register').el.onclick = this.register;\r\n\t\t/*\r\n        // Create a new form to submit 3rd party logins\r\n        this.externalLogin = this.createExternalLoginForm();\r\n        this.provider = new FORMINPUT(this.externalLogin.children[0].children[0].body.pane, new MODEL(new ATTRIBUTES({\r\n            'type': 'hidden',\r\n            'name': 'provider'\r\n        })));\r\n        this.returnUrl = new FORMINPUT(this.externalLogin.children[0].children[0].body.pane, new MODEL(new ATTRIBUTES({\r\n            'type': 'hidden',\r\n            'name': 'returnUrl'\r\n        })));\r\n        let btnOAuth = this.externalLogin.footer.buttonGroup.addButton('OAuth');\r\n        btnOAuth.el.onclick = function () {\r\n            console.log(50, 'Launching OAuth2 Authenticator...');\r\n\t\t\tlet returnUrl = this.url.origin + '/signin-google';\r\n            this.returnUrl.el.setAttribute('value', returnUrl);\r\n            \r\n\t\t\tlet provider = 'Google';\r\n\t\t\tthis.provider.el.setAttribute('value', provider);\t\t\t            \r\n\r\n            let postUrl = '/Account/ExternalLogin?provider=' +\r\n                provider + '&returnUrl=' + encodeURI(returnUrl); \r\n\t\t\t\r\n            location.href = '/Account/ExternalLogin';\r\n\t\t\t\r\n        };\r\n        */\r\n\t\tform.afterSuccessfulPost = (payload, status) => {\r\n\t\t\tthis.ajaxRefreshIfSuccessful(payload, status)\r\n\t\t};\r\n\t\tdialog.show();\r\n\t}\r\n\t/**\r\n\t    Sets up the External Login Form\r\n\t    @returns {FORM} An external login form\r\n\t*/\r\n\tcreateExternalLoginForm() {\r\n\t\tlet externalLogin = FORM.createEmptyForm(this.prompt.container.body.pane);\r\n\t\texternalLogin.el.setAttribute('method', 'post');\r\n\t\texternalLogin.el.setAttribute('action', '/Account/ExternalLogin');\r\n\t\texternalLogin.footer.buttonGroup.children[0].el.style.display = 'none';\r\n\t\treturn externalLogin;\r\n\t}\r\n\t/**\r\n\t\t    Logs the current user out\r\n\t        @returns {Promise<boolean>} True on success\r\n\t\t*/\r\n\tlogout() {\r\n\t\tthis.loader.showConsole();\r\n\t\tthis.loader.log(50, 'MAIN.logout(); Logging out...', true);\r\n\t\t$.post('/Account/LogOff', {\r\n\t\t\t'__RequestVerificationToken': this.token\r\n\t\t}, this.ajaxRefreshIfSuccessful, \"json\");\r\n\t}\r\n\t/**\r\n\t\t    Log into the application using the given credentials\r\n\t\t    @param {string} email Username / Email \r\n\t\t    @param {string} password Account Password\r\n\t        @returns {void}\r\n\t\t*/\r\n\tregister() {\r\n\t\tconsole.log('Register');\r\n\t\t/*this.prompt = new PROMPT('Register', '', [], [], true);\r\n\t\t\t\tthis.prompt.addClass('prompt');\r\n\t\t\t\tthis.prompt.form.setPostUrl('/Account/Register');\r\n\t\t\t\tthis.prompt.form.el.setAttribute('class', 'register');\r\n\t\t\t\t//this.prompt.form.el.setAttribute('method', 'POST');\r\n\t\t\t\t//this.prompt.form.el.setAttribute('action', 'Account/Register');\r\n\t\t\t\tthis.prompt.form.postUrl = \"Account/Register\";\r\n\t\t\t\t//this.email = new INPUT(this.prompt.formElementGroup.body.pane,\r\n\t\t\t\tthis.email = new FORMINPUT(this.prompt.form.fieldset.formElementGroup.body.pane, new MODEL(new ATTRIBUTES({\r\n\t\t\t\t\t'typeId': INPUTTYPES.INPUT,\r\n\t\t\t\t\t'type': 'Email',\r\n\t\t\t\t\t'name': 'email'\r\n\t\t\t\t})).set({\r\n\t\t\t\t\t'label': 'Username',\r\n\t\t\t\t\t'showHeader': 0\r\n\t\t\t\t}));\r\n\t\t\t\tthis.password = new FORMINPUT(this.prompt.form.fieldset.formElementGroup.body.pane, new MODEL(new ATTRIBUTES({\r\n\t\t\t\t\t'typeId': INPUTTYPES.PASSWORD,\r\n\t\t\t\t\t'type': 'Password',\r\n\t\t\t\t\t'name': 'password'\r\n\t\t\t\t})).set({\r\n\t\t\t\t\t'label': 'Password',\r\n\t\t\t\t\t'showHeader': 0\r\n\t\t\t\t}));\r\n\t\t\t\tthis.passwordConfirm = new FORMINPUT(this.prompt.form.fieldset.formElementGroup.body.pane, new MODEL(new ATTRIBUTES({\r\n\t\t\t\t\t'typeId': INPUTTYPES.PASSWORD,\r\n\t\t\t\t\t'type': 'Password',\r\n\t\t\t\t\t'name': 'PasswordConfirm'\r\n\t\t\t\t})).set({\r\n\t\t\t\t\t'label': 'Confirm Password',\r\n\t\t\t\t\t'showHeader': 0\r\n\t\t\t\t}));\r\n\t\t\t\tthis.prompt.form.afterSuccessfulPost = function(payload) {\r\n\t\t\t\t\tthis.prompt.form.ajaxRefreshIfSuccessful(payload, 'success');\r\n\t\t\t\t\tthis.prompt.hide();\r\n\t\t\t\t}.bind(this);\r\n\t\t\t\tthis.prompt.show();\r\n\t\t        */\r\n\t}\r\n\t/**\r\n\t\t    Call an external registration form\r\n\t\t    param {string} email Username / Email \r\n\t        @returns {void}\r\n\t\t*/\r\n\tregisterExternal() { // email\r\n\t\tconsole.log('Register External Login');\r\n\t\t/*this.prompt = new PROMPT('Associate your OAuth2 Id', '', [], [], true);\r\n\t\tthis.prompt.form.destroy();\r\n\t\tlet tmp = new DIV(this.prompt.container.body.pane, new MODEL());\r\n\t\t$(document.getElementById('externalLoginConfirmation')).insertBefore(tmp.el);\r\n\t\ttmp.destroy();\r\n\t\tthis.prompt.show();*/\r\n\t}\r\n}\r\nexport { LOADER, MODEL, NAVITEMICON };"]}