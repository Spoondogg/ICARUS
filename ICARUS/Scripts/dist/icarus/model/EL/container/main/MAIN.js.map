{"version":3,"sources":["model/EL/container/main/MAIN.js"],"names":["CONTAINER","ATTRIBUTES","DIALOG","ICONS","INPUTTYPES","MODEL","FORM","FORMINPUT","LOADER","NAVITEMICON","PROMPT","SIDEBAR","STICKYFOOTER","MAIN","[object Object]","model","document","title","label","super","body","this","addClass","navBar","pane","factory","loader","token","url","sidebar","set","addNavOptions","stickyFooter","populate","children","showNavBar","user","btnLogin","header","tabs","addNavItem","icon","USER","anchor","el","onclick","login","bind","dev","menu","btnSidebar","toggleSidebar","$","insertBefore","tab","focusBody","addDefaultMenuItems","addNavItemIcon","userMenu","addMenu","name","showHeader","collapsed","toggleCollapse","logout","OPTIONS","domMenu","getGroup","HOME","setTimeout","location","href","origin","TOGGLE","toggleHeaders","CONSOLE","show","showConsole","REFRESH","reload","crudMenu","newMain","getJSON","payload","console","log","hasClass","removeClass","collapse","id","returnUrl","searchParams","get","loadAjaxCall","data","result","empty","setId","setLabel","e","className","message","toggle","dialog","text","form","createEmptyForm","appendTo","setPostUrl","setAttribute","fieldset","formElementGroup","typeId","INPUT","type","PASSWORD","prompt","email","password","footer","buttonGroup","post","serialize","ajaxRefreshIfSuccessful","addButton","register","externalLogin","createExternalLoginForm","provider","container","style","display","__RequestVerificationToken"],"mappings":"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","file":"MAIN.js","sourcesContent":["/** @module */\r\nimport CONTAINER, { ATTRIBUTES, DIALOG, ICONS, INPUTTYPES, MODEL } from '../CONTAINER.js';\r\n//import CONTAINERFACTORY from '../../../../controller/CONTAINERFACTORY.js';\r\nimport FORM from '../../form/FORM.js';\r\nimport FORMINPUT from '../formelement/forminput/FORMINPUT.js';\r\nimport LOADER from '../../modal/loader/LOADER.js';\r\nimport NAVITEMICON from '../../nav/navitemicon/NAVITEMICON.js';\r\nimport PROMPT from '../../modal/prompt/PROMPT.js';\r\nimport SIDEBAR from '../sidebar/SIDEBAR.js';\r\nimport STICKYFOOTER from '../../footer/stickyfooter/STICKYFOOTER.js';\r\n/** A top level View that holds all other child Containers\r\n    @class\r\n    @extends CONTAINER\r\n*/\r\nexport default class MAIN extends CONTAINER {\r\n\t/** Constructs a MAIN Container and populates the DOM\r\n\t    with any relevant elements\r\n\t    @constructor\r\n\t    @param {MODEL} model APP model\r\n\t */\r\n\tconstructor(model) {\r\n\t\tdocument.title = model.label;\r\n\t\tsuper(document.body, 'MAIN', model, ['ARTICLE', 'INDEX', 'INDEXMAIN', 'CLASSVIEWER', 'IMAGEGALLERY', 'DICTIONARY', 'WORD']);\r\n\t\tthis.addClass('app').navBar.addClass('navbar-fixed-top');\r\n\t\tthis.body.pane.addClass('pane-tall');\r\n\t\t/**\r\n\t\t    @type {CONTAINERFACTORY}\r\n\t\t*/\r\n\t\tthis.factory = model.factory;\r\n\t\t/**\r\n\t\t    @type {LOADER}\r\n\t\t*/\r\n\t\tthis.loader = model.loader;\r\n\t\t/** A Security token\r\n\t\t    @type {string}\r\n\t\t*/\r\n\t\tthis.token = model.token;\r\n\t\t/** Browser Url\r\n\t\t    @property {Url} url The browser url\r\n\t\t*/\r\n\t\tthis.url = model.url;\r\n\t\t/**\r\n\t\t    A Sidebar for details and navigation\r\n\t\t    @property {SIDEBAR} sidebar A Sidebar that exists at the top level of the MAIN Container\r\n\t\t*/\r\n\t\tthis.sidebar = new SIDEBAR(this, new MODEL().set({ 'label': 'Left Sidebar' }));\r\n\t\tthis.addNavOptions();\r\n\t\tthis.stickyFooter = new STICKYFOOTER(this, new MODEL());\r\n\t\tthis.populate(model.children);\r\n\t}\r\n\tconstruct() {\r\n\t\tthis.showNavBar();\r\n\t\tif (this.user === 'Guest') {\r\n\t\t\tthis.btnLogin = this.navBar.header.tabs.addNavItem( //this.tabs.addNavItem(\r\n\t\t\t\tnew MODEL('pull-right').set({\r\n\t\t\t\t\t'icon': ICONS.USER,\r\n\t\t\t\t\t'anchor': new MODEL().set({\r\n\t\t\t\t\t\t'icon': ICONS.USER //,\r\n\t\t\t\t\t\t//'label': '',\r\n\t\t\t\t\t\t//'url': '#'\r\n\t\t\t\t\t})\r\n\t\t\t\t}));\r\n\t\t\tthis.btnLogin.el.onclick = this.login.bind(this);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t    Returns the Application Dev setting\r\n\t    @todo Move this into a config\r\n\t    @returns {boolean} Returns true if app in dev mode\r\n\t*/\r\n\tisDev() {\r\n\t\treturn this.dev;\r\n\t}\r\n\t/**\r\n\t    Returns a friendly username for the current user (if exists)\r\n\t    @returns {string} A friendly username\r\n\t*/\r\n\tgetUser() {\r\n\t\treturn this.user;\r\n\t}\r\n\t/**\r\n\t    Returns the MAIN Token\r\n\t    @returns {string} A Session Token\r\n\t*/\r\n\tgetToken() {\r\n\t\treturn this.token;\r\n\t}\r\n\t/**\r\n\t    Returns the MAIN Factory\r\n\t    @returns {CONTAINERFACTORY} The Main Container Factory\r\n\t*/\r\n\tgetFactory() {\r\n\t\treturn this.factory;\r\n\t}\r\n\t/**\r\n\t\t    Add items to Options Dropdown Tab\r\n\t        @returns {ThisType} Returns this MAIN for method chaining\r\n\t\t */\r\n\taddNavOptions() {\r\n\t\tif (this.navBar.header.menu) {\r\n\t\t\t/** A NavItem that toggles the visibility of the Sidebar */\r\n\t\t\tthis.btnSidebar = this.navBar.header.tabs.addNavItem(new MODEL('pull-left').set({\r\n\t\t\t\t'anchor': new MODEL().set({\r\n\t\t\t\t\t'icon': ICONS.SIDEBAR //,\r\n\t\t\t\t\t//'label': '',\r\n\t\t\t\t\t//'url': '#'\t\t\t\t\t\r\n\t\t\t\t})\r\n\t\t\t}));\r\n\t\t\tthis.btnSidebar.el.onclick = this.toggleSidebar.bind(this);\r\n\t\t\t$(this.btnSidebar.el).insertBefore(this.navBar.header.tab.el);\r\n\t\t\tthis.body.el.onclick = this.focusBody.bind(this); // Hide Sidebar when container body is focused\r\n\t\t\tthis.addDefaultMenuItems();\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t    Adds a NavItemIcon to the given menu with the given params\r\n\t    @param {MENU} menu A navigation MENU\r\n\t    @param {string} icon An Icon reference\r\n\t    @param {string} label The displayed text\r\n\t    @param {string} url The optional url that this Nav Item references \r\n\t    @returns {NAVITEMICON} A Nav Item with an Icon and optional label\r\n\t */\r\n\taddNavItemIcon(menu, icon, label = '', url = '#') {\r\n\t\tmenu.addNavItemIcon(new MODEL().set({\r\n\t\t\t'anchor': new MODEL().set({\r\n\t\t\t\ticon,\r\n\t\t\t\tlabel,\r\n\t\t\t\turl\r\n\t\t\t})\r\n\t\t}))\r\n\t}\r\n\t/**\r\n\t    Adds the default User, Crud and Dom menus to this Container\r\n\t    @returns {void}\r\n\t*/\r\n\taddDefaultMenuItems() {\r\n\t\tlet userMenu = this.navBar.header.menu.addMenu(new MODEL(new ATTRIBUTES('horizontal collapse')).set({\r\n\t\t\t'name': 'USER',\r\n\t\t\t'showHeader': 1,\r\n\t\t\t'collapsed': 1\r\n\t\t}));\r\n\t\tthis.addNavItemIcon(userMenu, ICONS.USER, 'Log Out', '#?url=logout').el.onclick = () => {\r\n\t\t\tthis.navBar.header.toggleCollapse();\r\n\t\t\tthis.logout();\r\n\t\t};\r\n\t\tthis.addNavItemIcon(userMenu, ICONS.OPTIONS, 'Manage', 'Manage/Index');\r\n\t\tlet domMenu = this.navBar.header.menu.getGroup('DOM');\r\n\t\tthis.addNavItemIcon(domMenu, ICONS.HOME, 'Home').el.onclick = () => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tlocation.href = this.url.origin;\r\n\t\t\t}, 300);\r\n\t\t};\r\n\t\tthis.addNavItemIcon(domMenu, ICONS.TOGGLE, 'Headers').el.onclick = () => {\r\n\t\t\tthis.toggleHeaders();\r\n\t\t\tthis.navBar.header.toggleCollapse();\r\n\t\t};\r\n\t\tthis.addNavItemIcon(domMenu, ICONS.CONSOLE, 'Console').el.onclick = () => {\r\n\t\t\tthis.loader.show();\r\n\t\t\tthis.loader.showConsole();\r\n\t\t};\r\n\t\tthis.addNavItemIcon(domMenu, ICONS.REFRESH, 'Reload').el.onclick = () => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tlocation.reload(true);\r\n\t\t\t}, 1000);\r\n\t\t};\r\n\t\tlet crudMenu = this.navBar.header.menu.getGroup('CRUD');\r\n\t\tthis.addNavItemIcon(crudMenu, ICONS.MAIN, 'New').el.onclick = this.newMain.bind(this);\t\t\r\n\t}\r\n\t/** Requests a new {@link MAIN} from the server and redirects to that page\r\n        @todo This should be a POST to avoid CSRF\r\n        @returns {Promise<boolean>} Promised to return true if new MAIN created successfully\r\n    */\r\n\tnewMain() {\r\n\t\t$.getJSON('/MAIN/Get/0', (payload) => {\r\n\t\t\tconsole.log('Created MAIN', payload);\r\n\t\t\t/**\r\n\t\t\t    Prompts the user to open the new page.\r\n\t\t\t    In order to avoid popup blocking, the user must \r\n\t\t\t    manually click to be redirected or launch a new\r\n\t\t\t    page in this window\r\n\t\t\t\t\t\t\r\n\t\t\tlet url = '/' + payload.model.id;\r\n\t\t\tlet prompt = new PROMPT('New Page', 'A new page has been created at <a href=\"' + url + '\" target=\"_blank\">' + url + '</a>');\r\n\t\t\tlet button = prompt.form.footer.buttonGroup.children[0];\r\n\t\t\tbutton.setLabel('Open in new Window?');\r\n\t\t\tbutton.el.onclick = () => {\r\n\t\t\t\twindow.open(url, '_blank');\r\n\t\t\t\tprompt.hide(300, true);\r\n\t\t\t};\r\n\t\t\tprompt.form.footer.buttonGroup.addButton('Open in this Window?').el.onclick = () => {\r\n\t\t\t\tlocation.href = url;\r\n\t\t\t\tprompt.hide(300, true);\r\n\t\t\t};\r\n\t\t\tprompt.show();*/\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\t/** Overrides CONTAINER.getContainer() and returns this MAIN Container\r\n\t    @returns {MAIN} The MAIN Container\r\n\t*/\r\n\tgetContainer() {\r\n\t\treturn this;\r\n\t}\r\n\t/** Overrides CONTAINER.getMainContainer() and returns this MAIN Container\r\n\t    @returns {MAIN} The MAIN Container\r\n\t*/\r\n\tgetMainContainer() {\r\n\t\treturn this;\r\n\t}\r\n    /**\r\n        Sets the focus on the Main container body.  \r\n        This generally is used to hide elements such \r\n        as a Sidebar, Modal or an EDIT pane\r\n        @returns {void}\r\n    */\r\n\tfocusBody() {\r\n\t\tif ($(this.sidebar.el).hasClass('active')) {\r\n\t\t\tthis.sidebar.removeClass('active');\r\n\t\t}\r\n\t\t$(this.navBar.header.menu.el).collapse('hide');\r\n\t}\r\n\t/**\r\n\t\tLoads the specified app id into the Main Container\r\n\r\n\t    @todo Prompt the user for an Id to load\r\n\t    @todo create a simple application browser to retrieve a MAIN\r\n\r\n\t\t@param {number} id App Id to load\r\n\t\t@returns {MAIN} This MAIN\r\n\t*/\r\n\tload(id = 1) {\r\n\t\tlet returnUrl = this.url.searchParams.get('ReturnUrl');\r\n\t\tif (returnUrl) {\r\n\t\t\treturnUrl = this.url.origin + returnUrl;\r\n\t\t\tlocation.href = returnUrl;\r\n\t\t}\r\n\t\t$.getJSON('Main/Get/' + id, this.loadAjaxCall.bind(this));\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t\tThe ajax call performed when MAIN.load is called\r\n\t\tReceives the MAIN model from Main/Get/id (if permitted)\r\n\t\tThen, sets the document title, application id and label\r\n\t\tand Populates accordingly\r\n\t\t@param {any} data The ajax payload\r\n\t    @returns {boolean} True on success\r\n\t    @throws Throws an error if unable to construct given class\r\n\t*/\r\n\tloadAjaxCall(data) {\r\n\t\tif (data.result === 1) {\r\n\t\t\ttry {\r\n\t\t\t\tif (data.model.label) {\r\n\t\t\t\t\tdocument.title = data.model.label;\r\n\t\t\t\t}\r\n\t\t\t\tthis.body.pane.empty();\r\n\t\t\t\tthis.setId(this.id);\r\n\t\t\t\tthis.setLabel(data.model.label);\r\n\t\t\t\tthis.populate(data.model.children);\r\n\t\t\t\treturn true;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(0, 'Unable to construct ' + this.className + '(' + this.id + ')');\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.loader.log(0, 'Failed to retrieve ' + this.className + '(' + this.id + ') from server\\n' + data.message);\r\n\t\t\tthis.loader.showConsole();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t\tToggles the active state of the sidebar\r\n\t    @return {ThisType} Return this for method chain\r\n\t\t*/\r\n\ttoggleSidebar() {\r\n\t\tthis.sidebar.toggle('active');\r\n\t\treturn this;\r\n\t}\r\n\t/** Allows the user to open a MAIN \r\n\t\t@param {number} id MAIN id\r\n\t    @todo Create method to browse MAINs\r\n\t    @returns {boolean} True on success\r\n\t*/\r\n\topen(id = 0) {\r\n\t\tconsole.log('TODO: APP.open(' + id + ')');\r\n\t\treturn false;\r\n\t}\r\n\t/** Returns the APP Id\r\n\t    @returns {number} App Id\r\n\t*/\r\n\tgetId() {\r\n\t\treturn this.id;\r\n\t}\r\n\t/** Launches the External Authentication Process\r\n\t\tThe user will be redirected to a third party authenticator\r\n\t    @returns {void}\r\n\t*/\r\n\tloginExternal() {\r\n\t\tconsole.log('loginExternal()');\r\n\t\t/*\r\n\t\t\t\tconsole.log('Log In - External OAuth Provider');\r\n\t\t\t\tthis.prompt = new PROMPT('Log In - OAuth', '', [], [], true);\r\n\t\t\t\tthis.prompt.addClass('prompt');\r\n\t\t\t\tthis.prompt.form.postUrl = '/Account/ExternalLogin';\r\n\t\t\t\tthis.prompt.form.provider = new EL(this.prompt.form.fieldset.formElementGroup.body.pane, 'INPUT', new MODEL(new ATTRIBUTES({\r\n\t\t\t\t\t'type': 'hidden',\r\n\t\t\t\t\t'name': 'provider'\r\n\t\t\t\t})));\r\n\t\t\t\tthis.prompt.form.returnUrl = new EL(this.prompt.form.fieldset.formElementGroup.body.pane, 'INPUT', new MODEL(new ATTRIBUTES({\r\n\t\t\t\t\t'type': 'hidden',\r\n\t\t\t\t\t'name': 'ReturnUrl'\r\n\t\t\t\t})));\r\n\t\t\t\tthis.prompt.form.destroy(0);\r\n\t\t\t\t// Create a new form to submit 3rd party logins\r\n\t\t\t\tthis.externalLogin = FORM.createEmptyForm(this.prompt.container.body.pane);\r\n\t\t\t\tthis.externalLogin.el.setAttribute('method', 'post');\r\n\t\t\t\tthis.externalLogin.el.setAttribute('action', '/Account/ExternalLogin?ReturnUrl=%2F');\r\n\t\t\t\tthis.externalLogin.footer.buttonGroup.children[0].el.style.display = 'none';\r\n\t\t\t\tthis.provider = new EL(this.externalLogin.fieldset.formElementGroup.body.pane, 'INPUT', new MODEL(new ATTRIBUTES({\r\n\t\t\t\t\t'type': 'hidden',\r\n\t\t\t\t\t'name': 'provider'\r\n\t\t\t\t})));\r\n\t\t\t\tthis.returnUrl = new EL(this.externalLogin.fieldset.formElementGroup.body.pane, 'INPUT', new MODEL(new ATTRIBUTES({\r\n\t\t\t\t\t'type': 'hidden',\r\n\t\t\t\t\t'name': 'ReturnUrl'\r\n\t\t\t\t})));\r\n\t\t\t\tlet btnOAuth = this.externalLogin.footer.buttonGroup.addButton('OAuth - Google');\r\n\t\t\t\tbtnOAuth.el.onclick = () => {\r\n\t\t\t\t\tconsole.log(50, 'Launching OAuth2 Authenticator...');\r\n\t\t\t\t\t//let url = new URL(window.location.href);\r\n\t\t\t\t\tlet returnUrl = this.url.origin + '/signin-google';\r\n\t\t\t\t\tthis.returnUrl.el.setAttribute('value', returnUrl);\r\n\t\t\t\t\tlet provider = 'Google';\r\n\t\t\t\t\tthis.provider.el.setAttribute('value', provider);\r\n\t\t\t\t\tlet postUrl = '/Account/ExternalLogin/externalLogin?provider=' + provider + '&returnUrl=' + encodeURI(returnUrl);\r\n\t\t\t\t\tlocation.href = postUrl;\r\n\t\t\t\t};\r\n\t\t\t\tthis.prompt.show();\r\n\t\t        */\r\n\t}\r\n\t/** Log into the application using the given credentials\r\n\t\tparam {string} email Username / Email \r\n\t\tparam {string} password Account Password\r\n\t    @todo Consider handling email/password string or CREDENTIALS object\r\n\t    @todo Create INPUT CHECKBOX called 'RememberMe'\r\n\t    @todo Create BUTTON to launch 'Register as new User\r\n\t    @todo Create AHREF to 'ForgotPassword'\r\n\t    @returns {void}\r\n\t*/\r\n\tlogin() { //email, password\r\n        let dialog = new DIALOG(new MODEL().set({ 'text': 'Log In' })); //'token': this.getMainContainer().getToken()\r\n        let form = FORM.createEmptyForm(this.body.pane);\r\n        $(form.el).appendTo(dialog.body.el);\r\n        form.show();\r\n        form.setPostUrl('/Account/Login');\r\n        form.el.setAttribute('class', 'login');\r\n        form.el.setAttribute('method', 'POST');\r\n        form.el.setAttribute('action', '#');\r\n\r\n        let email = new FORMINPUT(form.fieldset.formElementGroup.body.pane, new MODEL(new ATTRIBUTES({\r\n            'typeId': INPUTTYPES.INPUT,\r\n            'type': 'Email',\r\n            'name': 'Email'\r\n        })).set({\r\n            'label': 'Username',\r\n            'showHeader': 0\r\n            }));\r\n\r\n        let password = new FORMINPUT(form.fieldset.formElementGroup.body.pane, new MODEL(new ATTRIBUTES({\r\n            'typeId': INPUTTYPES.PASSWORD,\r\n            'type': 'Password',\r\n            'name': 'Password'\r\n        })).set({\r\n            'label': 'Password',\r\n            'showHeader': 0\r\n        }));\r\n\r\n        dialog.show();\r\n    }\r\n    /**\r\n        @deprecated\r\n        Outdated login form\r\n        @returns {void}\r\n    */\r\n    loginLegacy() {\r\n        this.prompt = new PROMPT('Log In', '', [], [], true);\r\n        this.prompt.addClass('prompt');\r\n        this.prompt.form.setPostUrl('/Account/Login');\r\n        this.prompt.form.el.setAttribute('class', 'login');\r\n        this.prompt.form.el.setAttribute('method', 'POST');\r\n        this.prompt.form.el.setAttribute('action', '#');\r\n        this.email = new FORMINPUT(this.prompt.form.fieldset.formElementGroup.body.pane, new MODEL(new ATTRIBUTES({\r\n            'typeId': INPUTTYPES.INPUT,\r\n            'type': 'Email',\r\n            'name': 'Email'\r\n        })).set({\r\n            'label': 'Username',\r\n            'showHeader': 0\r\n        }));\r\n        this.password = new FORMINPUT(this.prompt.form.fieldset.formElementGroup.body.pane, new MODEL(new ATTRIBUTES({\r\n            'typeId': INPUTTYPES.PASSWORD,\r\n            'type': 'Password',\r\n            'name': 'Password'\r\n        })).set({\r\n            'label': 'Password',\r\n            'showHeader': 0\r\n        }));\r\n        //this.prompt.form.footer.buttonGroup.children[0].el.style.display = 'none';\r\n\t\t/**\r\n\t\t\tPost the Login FormPost\r\n\t\t\tIf login successful, load the new User Session (Refresh Page)\r\n\t\t    @returns {void}\r\n\t\t*/\r\n        this.prompt.form.footer.buttonGroup.children[0].el.onclick = () => {\r\n            $.post('/Account/LogIn', $(this.prompt.form.el).serialize(), this.ajaxRefreshIfSuccessful);\r\n        };\r\n        this.prompt.form.footer.buttonGroup.addButton('Register').el.onclick = this.register;\r\n        // Create a new form to submit 3rd party logins\r\n        this.externalLogin = this.createExternalLoginForm();\r\n        this.provider = new FORMINPUT(this.externalLogin.fieldset.formElementGroup.body.pane, new MODEL(new ATTRIBUTES({\r\n            'type': 'hidden',\r\n            'name': 'provider'\r\n        })));\r\n        this.returnUrl = new FORMINPUT(this.externalLogin.fieldset.formElementGroup.body.pane, new MODEL(new ATTRIBUTES({\r\n            'type': 'hidden',\r\n            'name': 'returnUrl'\r\n        })));\r\n        let btnOAuth = this.externalLogin.footer.buttonGroup.addButton('OAuth');\r\n        btnOAuth.el.onclick = function () {\r\n            console.log(50, 'Launching OAuth2 Authenticator...');\r\n\t\t\t/*\r\n\t\t\tlet returnUrl = this.url.origin + '/signin-google';\r\n\t\t\tthis.returnUrl.el.setAttribute('value', returnUrl);\r\n\t\t\t            \r\n\t\t\tlet provider = 'Google';\r\n\t\t\tthis.provider.el.setAttribute('value', provider);\r\n\t\t\t            \r\n\r\n\t\t\tlet postUrl = '/Account/ExternalLogin?provider='\r\n\t\t\t\t+ provider + '&returnUrl=' + encodeURI(returnUrl); \r\n\t\t\t*/\r\n            location.href = '/Account/ExternalLogin';\r\n\t\t\t/****            \r\n\t\t\t<form action=\"/Account/ExternalLogin?ReturnUrl=%2F\" method=\"post\">\r\n\t\t\t    <input name=\"__RequestVerificationToken\" type=\"hidden\" value=\"NUl4K_C0ubvHbrEeyfF19jddMf9-BZ-MTIuA33kSxdhMJoh5TEvV53sbv61vtRCp_vbWI2DQzFENnljDRpx2srlaBpQZQRsWZoKkLwSjTek1\">                <div id=\"socialLoginList\">\r\n\t\t\t    <p>\r\n\t\t\t        <button type=\"submit\" \r\n\t\t\t            class=\"btn btn-default\" id=\"Google\" \r\n\t\t\t            name=\"provider\" value=\"Google\" \r\n\t\t\t            title=\"Log in using your Google account\"\r\n\t\t\t        >Google</button>\r\n\t\t\t    </p>\r\n\t\t\t    </div>\r\n\t\t\t</form>\r\n\t\t\t****/\r\n        };\r\n        this.prompt.show();\r\n    }\r\n\t/**\r\n\t    Sets up the External Login Form\r\n\t    @returns {FORM} An external login form\r\n\t*/\r\n\tcreateExternalLoginForm() {\r\n\t\tlet externalLogin = FORM.createEmptyForm(this.prompt.container.body.pane);\r\n\t\texternalLogin.el.setAttribute('method', 'post');\r\n\t\texternalLogin.el.setAttribute('action', '/Account/ExternalLogin');\r\n\t\texternalLogin.footer.buttonGroup.children[0].el.style.display = 'none';\r\n\t\treturn externalLogin;\r\n\t}\r\n\t/**\r\n\t\t    Logs the current user out\r\n\t        @returns {Promise<boolean>} True on success\r\n\t\t*/\r\n\tlogout() {\r\n\t\tthis.loader.showConsole();\r\n\t\tthis.loader.log(50, 'MAIN.logout(); Logging out...', true);\r\n\t\t$.post('/Account/LogOff', {\r\n\t\t\t'__RequestVerificationToken': this.token\r\n\t\t}, this.ajaxRefreshIfSuccessful, \"json\");\r\n\t}\r\n\t/**\r\n\t\t    Log into the application using the given credentials\r\n\t\t    @param {string} email Username / Email \r\n\t\t    @param {string} password Account Password\r\n\t        @returns {void}\r\n\t\t*/\r\n\tregister() {\r\n\t\tconsole.log('Register');\r\n\t\t/*this.prompt = new PROMPT('Register', '', [], [], true);\r\n\t\t\t\tthis.prompt.addClass('prompt');\r\n\t\t\t\tthis.prompt.form.setPostUrl('/Account/Register');\r\n\t\t\t\tthis.prompt.form.el.setAttribute('class', 'register');\r\n\t\t\t\t//this.prompt.form.el.setAttribute('method', 'POST');\r\n\t\t\t\t//this.prompt.form.el.setAttribute('action', 'Account/Register');\r\n\t\t\t\tthis.prompt.form.postUrl = \"Account/Register\";\r\n\t\t\t\t//this.email = new INPUT(this.prompt.formElementGroup.body.pane,\r\n\t\t\t\tthis.email = new FORMINPUT(this.prompt.form.fieldset.formElementGroup.body.pane, new MODEL(new ATTRIBUTES({\r\n\t\t\t\t\t'typeId': INPUTTYPES.INPUT,\r\n\t\t\t\t\t'type': 'Email',\r\n\t\t\t\t\t'name': 'email'\r\n\t\t\t\t})).set({\r\n\t\t\t\t\t'label': 'Username',\r\n\t\t\t\t\t'showHeader': 0\r\n\t\t\t\t}));\r\n\t\t\t\tthis.password = new FORMINPUT(this.prompt.form.fieldset.formElementGroup.body.pane, new MODEL(new ATTRIBUTES({\r\n\t\t\t\t\t'typeId': INPUTTYPES.PASSWORD,\r\n\t\t\t\t\t'type': 'Password',\r\n\t\t\t\t\t'name': 'password'\r\n\t\t\t\t})).set({\r\n\t\t\t\t\t'label': 'Password',\r\n\t\t\t\t\t'showHeader': 0\r\n\t\t\t\t}));\r\n\t\t\t\tthis.passwordConfirm = new FORMINPUT(this.prompt.form.fieldset.formElementGroup.body.pane, new MODEL(new ATTRIBUTES({\r\n\t\t\t\t\t'typeId': INPUTTYPES.PASSWORD,\r\n\t\t\t\t\t'type': 'Password',\r\n\t\t\t\t\t'name': 'PasswordConfirm'\r\n\t\t\t\t})).set({\r\n\t\t\t\t\t'label': 'Confirm Password',\r\n\t\t\t\t\t'showHeader': 0\r\n\t\t\t\t}));\r\n\t\t\t\tthis.prompt.form.afterSuccessfulPost = function(payload) {\r\n\t\t\t\t\tthis.prompt.form.ajaxRefreshIfSuccessful(payload, 'success');\r\n\t\t\t\t\tthis.prompt.hide();\r\n\t\t\t\t}.bind(this);\r\n\t\t\t\tthis.prompt.show();\r\n\t\t        */\r\n\t}\r\n\t/**\r\n\t\t    Call an external registration form\r\n\t\t    param {string} email Username / Email \r\n\t        @returns {void}\r\n\t\t*/\r\n\tregisterExternal() { // email\r\n\t\tconsole.log('Register External Login');\r\n\t\t/*this.prompt = new PROMPT('Associate your OAuth2 Id', '', [], [], true);\r\n\t\tthis.prompt.form.destroy();\r\n\t\tlet tmp = new DIV(this.prompt.container.body.pane, new MODEL());\r\n\t\t$(document.getElementById('externalLoginConfirmation')).insertBefore(tmp.el);\r\n\t\ttmp.destroy();\r\n\t\tthis.prompt.show();*/\r\n\t}\r\n}\r\nexport { LOADER, MODEL, NAVITEMICON };"]}