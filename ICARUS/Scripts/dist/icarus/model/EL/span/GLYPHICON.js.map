{"version":3,"sources":["model/EL/span/GLYPHICON.js"],"names":["SPAN","ATTRIBUTES","MODEL","ICONS","GLYPHICON","[object Object]","node","label","glyphicon","super","this","addClass","el","className"],"mappings":"OAGOA,MAAQC,WAAYC,UAAa,mBAC/BC,UAAa,yCAMP,MAAMC,kBAAkBJ,KAOtCK,YAAYC,EAAMC,EAAOC,GACxBC,MAAMH,EAAM,IAAIJ,MAAM,IAAID,WAAWO,GAAwB,MAC7DE,KAAKC,SAAS,kBACdD,KAAKH,MAAQ,IAAIP,KAAKU,KAAM,IAAIR,MAAM,IAAID,WAAW,eAAgBM,GAOtEF,QAAQG,GACPE,KAAKE,GAAGC,UAAYL,UAGbL","file":"GLYPHICON.js","sourcesContent":["/**\r\n    @module\r\n*/\r\nimport SPAN, { ATTRIBUTES, MODEL } from './SPAN.js';\r\nimport { ICONS } from '../../../enums/ICONS.js';\r\n/**\r\n    Bootstrap style buttons, groups etc\r\n    @class\r\n    @extends SPAN\r\n*/\r\nexport default class GLYPHICON extends SPAN {\r\n\t/**\r\n\t    Construct a Glyphicon\r\n\t    @param {EL} node parent object\r\n\t    @param {string} label The label\r\n\t    @param {string} glyphicon The bootstrap glyphicon or ICON enum\r\n\t */\r\n\tconstructor(node, label, glyphicon) {\r\n\t\tsuper(node, new MODEL(new ATTRIBUTES(glyphicon ? glyphicon : '')));\r\n\t\tthis.addClass('icon glyphicon');\r\n\t\tthis.label = new SPAN(this, new MODEL(new ATTRIBUTES('icon-label')), label);\r\n\t}\r\n\t/**\r\n\t\t    Sets the ICON class to the given glyphicon\r\n\t\t    @param {string} glyphicon The glyphicon name\r\n\t        @returns {void}\r\n\t\t */\r\n\tsetIcon(glyphicon) {\r\n\t\tthis.el.className = glyphicon;\r\n\t}\r\n}\r\nexport { ICONS };"]}