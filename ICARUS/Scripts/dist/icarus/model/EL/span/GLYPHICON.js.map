{"version":3,"sources":["model/EL/span/GLYPHICON.js"],"names":["SPAN","ATTRIBUTES","MODEL","ICONS","GLYPHICON","[object Object]","node","label","glyphicon","super","this","addClass","el","className"],"mappings":"OACOA,MAAQC,WAAYC,UAAa,mBAC/BC,UAAa,yCAKP,MAAMC,kBAAkBJ,KAMtCK,YAAYC,EAAMC,EAAOC,GACxBC,MAAMH,EAAM,IAAIJ,OACVQ,KAAKC,SAAS,kBAAoBH,GACxCE,KAAKH,MAAQ,IAAIP,KAAKU,KAAM,IAAIR,MAAM,cAAeK,GAMtDF,QAAQG,GACPE,KAAKE,GAAGC,UAAYL,UAGbL","file":"GLYPHICON.js","sourcesContent":["/** @module */\r\nimport SPAN, { ATTRIBUTES, MODEL } from './SPAN.js';\r\nimport { ICONS } from '../../../enums/ICONS.js';\r\n/** Bootstrap style buttons, groups etc\r\n    @class\r\n    @extends SPAN\r\n*/\r\nexport default class GLYPHICON extends SPAN {\r\n\t/** Construct a Glyphicon\r\n\t    @param {EL} node parent object\r\n\t    @param {string} label The label\r\n\t    @param {string} glyphicon The bootstrap glyphicon or ICON enum\r\n\t */\r\n\tconstructor(node, label, glyphicon) {\r\n\t\tsuper(node, new MODEL());\r\n        this.addClass('icon glyphicon ' + glyphicon);\r\n\t\tthis.label = new SPAN(this, new MODEL('icon-label'), label);\r\n\t}\r\n\t/** Sets the ICON class to the given glyphicon\r\n        @param {string} glyphicon The glyphicon name\r\n        @returns {void}\r\n    */\r\n\tsetIcon(glyphicon) {\r\n\t\tthis.el.className = glyphicon;\r\n\t}\r\n}\r\nexport { ICONS };"]}