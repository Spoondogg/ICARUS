{"version":3,"sources":["model/EL/GROUP/GROUP.js"],"names":["EL","ATTRIBUTES","MODEL","GROUP","[object Object]","node","element","model","super","name","this","el","setAttribute","e","console","log","groups","group"],"mappings":"OAGOA,IAAMC,WAAYC,UAAa,0BAMvB,MAAMC,cAAcH,GAOlCI,YAAYC,EAAMC,EAASC,GAC1BC,MAAMH,EAAMC,EAASC,GACrB,IACKA,EAAME,OACTC,KAAKD,KAAOF,EAAME,KAClBC,KAAKC,GAAGC,aAAa,OAAQL,EAAME,OAEnC,MAAOI,GACRC,QAAQC,IAAI,kCAAmCL,KAAMG,GAEtDH,KAAKM,OAAS,GAOfZ,SAASK,GACR,OAAOC,KAAKM,OAAOP,GAOpBL,SAASa,GAER,OADAP,KAAKM,OAAOC,EAAMR,MAAQQ,EACnBP,KAAKM,OAAOC,EAAMR,MAO1BL,SAASa,GAIR,YAHiC,IAAtBP,KAAKM,OAAOP,QACtBC,KAAKM,OAAOC,EAAMR,MAAQQ,GAEpBP,KAAKM,OAAOC,EAAMR,cAGlBR,WAAYD,GAAIG,MAAOD","file":"GROUP.js","sourcesContent":["/**\r\n    @module\r\n*/\r\nimport EL, { ATTRIBUTES, MODEL } from '../EL.js';\r\n/**\r\n    A grouping of list items\r\n    @class\r\n    @extends EL\r\n */\r\nexport default class GROUP extends EL {\r\n\t/**\r\n\t    Construct a group of NavItems\r\n\t    @param {EL} node The element that will contain this object\r\n\t    @param {string} element HTML Element \r\n\t    @param {MODEL} model The json object representing this element\r\n\t*/\r\n\tconstructor(node, element, model) {\r\n\t\tsuper(node, element, model);\r\n\t\ttry {\r\n\t\t\tif (model.name) {\r\n\t\t\t\tthis.name = model.name; // Required\r\n\t\t\t\tthis.el.setAttribute('name', model.name);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log('Why is this happening? GROUP.js', this, e);\r\n\t\t}\r\n\t\tthis.groups = {};\r\n\t}\r\n\t/**\r\n\t    Retrieves the specified group\r\n\t    @param {string} name Name of group\r\n\t    @returns {GROUP} A group\r\n\t */\r\n\tgetGroup(name) {\r\n\t\treturn this.groups[name];\r\n\t}\r\n\t/**\r\n\t    Adds the given group to this.groups\r\n\t    @param {GROUP} group A GROUP Element\r\n\t    @returns {GROUP} The given group\r\n\t */\r\n\taddGroup(group) {\r\n\t\tthis.groups[group.name] = group;\r\n\t\treturn this.groups[group.name];\r\n\t}\r\n\t/**\r\n\t    Adds or Overrides the given group to this.groups\r\n\t    @param {GROUP} group A GROUP Element\r\n\t    @returns {GROUP} The given group\r\n\t */\r\n\tsetGroup(group) {\r\n\t\tif (typeof this.groups[name] === 'undefined') {\r\n\t\t\tthis.groups[group.name] = group;\r\n\t\t}\r\n\t\treturn this.groups[group.name];\r\n\t}\r\n}\r\nexport { ATTRIBUTES, EL, GROUP, MODEL };"]}