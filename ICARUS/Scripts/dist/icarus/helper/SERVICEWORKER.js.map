{"version":3,"sources":["icarus/helper/SERVICEWORKER.js"],"names":["SERVICEWORKER","[object Object]","this","registerServiceWorker","navigator","window","addEventListener","serviceWorker","register","then","registration","console","log","scope","err"],"mappings":"eAQe,MAAMA,cACpBC,cACCC,KAAKC,wBAONF,wBACK,kBAAmBG,WACtBC,OAAOC,iBAAiB,OAAQ,WAC/BF,UAAUG,cAAcC,SAAS,qBAAqBC,KAAK,SAASC,GAEnEC,QAAQC,IAAI,qDAAsDF,EAAaG,QAC7E,SAASC,GAEXH,QAAQC,IAAI,sCAAuCE","file":"SERVICEWORKER.js","sourcesContent":["/**\r\n    @module\r\n*/\r\n//\r\n/**\r\n    A Web Application Service Worker\r\n    @class\r\n */\r\nexport default class SERVICEWORKER {\r\n\tconstructor() {\r\n\t\tthis.registerServiceWorker();\r\n\t}\r\n\t/**\r\n\t\t    Registers the Service Worker\r\n\t\t    @see https://developers.google.com/web/fundamentals/primers/service-workers/\r\n\t        @returns {void}\r\n\t\t*/\r\n\tregisterServiceWorker() {\r\n\t\tif ('serviceWorker' in navigator) {\r\n\t\t\twindow.addEventListener('load', function() {\r\n\t\t\t\tnavigator.serviceWorker.register('service-worker.js').then(function(registration) {\r\n\t\t\t\t\t// Registration was successful\r\n\t\t\t\t\tconsole.log('ServiceWorker registration successful with scope: ', registration.scope);\r\n\t\t\t\t}, function(err) {\r\n\t\t\t\t\t// registration failed :(\r\n\t\t\t\t\tconsole.log('ServiceWorker registration failed: ', err);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}"]}