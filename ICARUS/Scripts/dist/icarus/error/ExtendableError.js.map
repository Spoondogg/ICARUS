{"version":3,"sources":["error/ExtendableError.js"],"names":["ExtendableError","Error","[object Object]","message","super","this","name","constructor","captureStackTrace","stack"],"mappings":"eAUe,MAAMA,wBAAwBC,MAK5CC,YAAYC,GACXC,MAAMD,GACNE,KAAKC,KAAOD,KAAKE,YAAYD,KACU,mBAA5BL,MAAMO,kBAChBP,MAAMO,kBAAkBH,KAAMA,KAAKE,aAEnCF,KAAKI,MAAQ,IAAKR,MAAME,GAAUM","file":"ExtendableError.js","sourcesContent":["/**\r\n    @module\r\n*/\r\n/**\r\n    An extendable Error abstraction\r\n    @abstract\r\n    @class\r\n    @extends Error\r\n    @see https://stackoverflow.com/a/32749533/722785\r\n*/\r\nexport default class ExtendableError extends Error {\r\n\t/**\r\n\t    Constructs an Error\r\n\t    @param {string} message The error message\r\n\t */\r\n\tconstructor(message) {\r\n\t\tsuper(message);\r\n\t\tthis.name = this.constructor.name;\r\n\t\tif (typeof Error.captureStackTrace === 'function') {\r\n\t\t\tError.captureStackTrace(this, this.constructor);\r\n\t\t} else {\r\n\t\t\tthis.stack = (new Error(message)).stack;\r\n\t\t}\r\n\t}\r\n}"]}