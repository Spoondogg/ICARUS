{"version":3,"sources":["controller/CONTAINERFACTORY.js"],"names":["FORMSELECT","OPTION","MENULIST","LI","UL","SPAN","ATTRIBUTES","EL","MODEL","ARTICLE","BANNER","CALLOUT","CHAT","CLASSVIEWER","DICTIONARY","FIELDSET","FORM","FORMELEMENTGROUP","FORMINPUT","FORMTEXTAREA","IFRAME","IMAGEGALLERY","INDEX","INDEXMAIN","INDEXTHUMBNAIL","JUMBOTRON","LIST","LISTITEM","MENU","NAVITEM","NAVSEPARATOR","PARAGRAPH","SECTION","TEXTBLOCK","THUMBNAIL","WORD","CONTAINERFACTORY","[object Object]","node","className","id","span","index","children","push","$","getJSON","result","obj","model","save","this","el","parentNode","replaceChild","e","destroy","splice","console","log","container","getMainContainer","focusBody","loader","hide","getContainer","refresh","form","createEmptyForm","addClass","setPostUrl","fieldset","formElementGroup","addInputElements","createContainerInputs","afterSuccessfulPost","setLabel","elements","label","value","refreshParentContainer","collapse","modelId","data","inputs","key","Reflect","call","createInputModel","htmlEncode","post","noPrompt","confirm","quickSaveFormPost","dataId","attributesId","attributes","subsections","getSubSections","get","toString","set","innerHTML","length"],"mappings":"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","file":"CONTAINERFACTORY.js","sourcesContent":["/** @module */\r\nimport FORMSELECT, { OPTION } from '../model/el/container/formelement/formselect/FORMSELECT.js';\r\nimport MENULIST, { LI, UL } from '../model/el/container/menulist/MENULIST.js';\r\nimport SPAN, { ATTRIBUTES, EL, MODEL } from '../model/el/span/SPAN.js';\r\n//import EL, { ATTRIBUTES, MODEL } from '../model/el/EL.js';\r\nimport ARTICLE from '../model/el/article/ARTICLE.js';\r\nimport BANNER from '../model/el/container/banner/BANNER.js';\r\nimport CALLOUT from '../model/el/container/banner/callout/CALLOUT.js';\r\nimport CHAT from '../model/el/container/chat/CHAT.js';\r\nimport CLASSVIEWER from '../model/el/container/banner/classviewer/CLASSVIEWER.js'; // banners are dumb\r\n//import CONTAINER from '../model/el/container/CONTAINER.js';\r\nimport DICTIONARY from '../model/el/container/dictionary/DICTIONARY.js';\r\nimport FIELDSET from '../model/el/fieldset/FIELDSET.js';\r\nimport FORM from '../model/el/form/FORM.js';\r\nimport FORMELEMENTGROUP from '../model/el/container/formelement/FORMELEMENTGROUP.js';\r\nimport FORMINPUT from '../model/el/container/formelement/forminput/FORMINPUT.js';\r\nimport FORMTEXTAREA from '../model/el/container/formelement/formtextarea/FORMTEXTAREA.js';\r\n//import FORMPOSTINPUT from '../model/el/container/formelement/formpostinput/FORMPOSTINPUT.js';\r\nimport IFRAME from '../model/el/container/iframe/IFRAME.js';\r\nimport IMAGEGALLERY from '../model/el/container/banner/imagegallery/IMAGEGALLERY.js';\r\nimport INDEX from '../model/el/container/banner/index/INDEX.js';\r\nimport INDEXMAIN from '../model/el/container/banner/indexmain/INDEXMAIN.js';\r\nimport INDEXTHUMBNAIL from '../model/el/container/banner/thumbnail/indexthumbnail/INDEXTHUMBNAIL.js';\r\nimport JUMBOTRON from '../model/el/container/jumbotron/JUMBOTRON.js';\r\nimport LIST from '../model/el/container/list/LIST.js';\r\nimport LISTITEM from '../model/el/container/list/listitem/LISTITEM.js';\r\nimport MENU from '../model/el/nav/menu/MENU.js';\r\nimport NAVITEM from '../model/el/nav/navitem/NAVITEM.js';\r\nimport NAVSEPARATOR from '../model/el/nav/navitem/NAVSEPARATOR.js';\r\nimport PARAGRAPH from '../model/el/container/paragraph/PARAGRAPH.js';\r\nimport SECTION from '../model/el/section/SECTION.js';\r\nimport TEXTBLOCK from '../model/el/container/textblock/TEXTBLOCK.js';\r\nimport THUMBNAIL from '../model/el/container/banner/thumbnail/THUMBNAIL.js';\r\n//import TOKEN from '../model/el/container/formelement/forminput/TOKEN.js';\r\nimport WORD from '../model/el/container/word/WORD.js';\r\n/**\r\n    Constructs various Containers and returns them to be appended\r\n    Each Container child must be imported individually\r\n    to avoid cyclic redundancy of dependencies\r\n    @class\r\n */\r\nexport default class CONTAINERFACTORY {\r\n\t/* eslint-disable max-lines-per-function, complexity */\r\n\t/**\r\n\t    Gets this Container from the database via ajax GET request.\r\n\t    Retrieves object model and returns the container.\r\n\r\n\t    A placeholder object is created to ensure that values are loaded\r\n\t    in the appropriate order, regardless of any delays from getJson()\r\n\r\n\t    @param {MODEL} node Parent node (Generally append to node.body.pane)\r\n\t    @param {string} className Container Constructor Name\r\n\t    @param {number} id Container UId\r\n\t    @returns {CONTAINER} A newly constructed container\r\n\t*/\r\n\tget(node, className, id) {\r\n\t\t//console.log('CONTAINERFACTORY.get(' + className + ',' + id + ');');\r\n\t\tlet span = new SPAN(node, new MODEL());\r\n\t\tlet index = node.children.push(span); // Reserve the slot in the array        \r\n\t\treturn $.getJSON('/' + className + '/Get/' + id, (result) => {\r\n\t\t\tlet obj = null;\r\n\t\t\tswitch (className) {\r\n\t\t\t\tcase 'ARTICLE':\r\n\t\t\t\t\tobj = new ARTICLE(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'BANNER':\r\n\t\t\t\t\tobj = new BANNER(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'CALLOUT':\r\n\t\t\t\t\tobj = new CALLOUT(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'CHAT':\r\n\t\t\t\t\tobj = new CHAT(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'CLASSVIEWER':\r\n\t\t\t\t\tobj = new CLASSVIEWER(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'DICTIONARY':\r\n\t\t\t\t\tobj = new DICTIONARY(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'FORM':\r\n\t\t\t\t\tobj = new FORM(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'FIELDSET':\r\n\t\t\t\t\tobj = new FIELDSET(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'FORMELEMENTGROUP':\r\n\t\t\t\t\tobj = new FORMELEMENTGROUP(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t//case 'FORMPOSTINPUT':\r\n\t\t\t\t\t//\tobj = new FORMPOSTINPUT(span, result.model);\r\n\t\t\t\t\t//\tbreak;\r\n\t\t\t\tcase 'FORMINPUT':\r\n\t\t\t\t\tobj = new FORMINPUT(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'FORMSELECT':\r\n\t\t\t\t\tobj = new FORMSELECT(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'FORMTEXTAREA':\r\n\t\t\t\t\tobj = new FORMTEXTAREA(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'IFRAME':\r\n\t\t\t\t\tobj = new IFRAME(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'IMAGEGALLERY':\r\n\t\t\t\t\tobj = new IMAGEGALLERY(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'INDEX':\r\n\t\t\t\t\tobj = new INDEX(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'INDEXMAIN':\r\n\t\t\t\t\tobj = new INDEXMAIN(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'INDEXTHUMBNAIL':\r\n\t\t\t\t\tobj = new INDEXTHUMBNAIL(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'JUMBOTRON':\r\n\t\t\t\t\tobj = new JUMBOTRON(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'LI':\r\n\t\t\t\t\tobj = new LI(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'LIST':\r\n\t\t\t\t\tobj = new LIST(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'LISTITEM':\r\n\t\t\t\t\tobj = new LISTITEM(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'MENULIST':\r\n\t\t\t\t\tobj = new MENULIST(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'MENU':\r\n\t\t\t\t\tobj = new MENU(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'NAVITEM':\r\n\t\t\t\t\tobj = new NAVITEM(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'NAVSEPARATOR':\r\n\t\t\t\t\tobj = new NAVSEPARATOR(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'OPTION':\r\n\t\t\t\t\tobj = new OPTION(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'PARAGRAPH':\r\n\t\t\t\t\tobj = new PARAGRAPH(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'SECTION':\r\n\t\t\t\t\tobj = new SECTION(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'TEXTBLOCK':\r\n\t\t\t\t\tobj = new TEXTBLOCK(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'THUMBNAIL':\r\n\t\t\t\t\tobj = new THUMBNAIL(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'UL':\r\n\t\t\t\t\tobj = new UL(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'WORD':\r\n\t\t\t\t\tobj = new WORD(span, result.model);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tobj = new EL(span, result.model);\r\n\t\t\t}\r\n\t\t\tnode.children[index] = obj;\r\n\t\t\ttry {\r\n\t\t\t\t// Inject CRUD actions and dependencies\r\n                //obj.factory = this;\r\n\t\t\t\tobj.save = this.save;\r\n\t\t\t\t//obj.quickSaveFormPost = this.quickSaveFormPost;\r\n\t\t\t\t// Overwrite span with \r\n\t\t\t\tspan.el.parentNode.replaceChild(obj.el, span.el);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tspan.destroy();\r\n\t\t\t\tnode.children.splice(index, 1);\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t\treturn node.children[index];\r\n\t\t});\r\n\t}\r\n\t/* eslint-enable max-lines-per-function, complexity\r\n\t/**\r\n\t    Restore Container View to defaults and refresh parent Container\r\n\t    @param {CONTAINER} container The container to restore\r\n\t    @returns {void}\r\n\t */\r\n\trefreshParentContainer(container) {\r\n\t\ttry {\r\n\t\t\tcontainer.getMainContainer().focusBody();\r\n\t\t\tcontainer.getMainContainer().loader.hide();\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tcontainer.getContainer().refresh();\r\n\t\t} catch (e) {\r\n\t\t\t//console.log('Unable to reload Container);\r\n\t\t\t//location.reload(true);\r\n\t\t\tcontainer.getMainContainer().refresh();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t    Saves the state of the given Container\r\n        @description Generates an empty form, populates with current state and posts to appropriate setter\r\n\t    @param {EL} node The parent container to hold the save menu\r\n        @param {CONTAINER} container The Container to save\r\n        @todo Rearrange signature to (container, node) and consider defaulting to a hidden? modal\r\n\t    @returns {void}\r\n\t*/\r\n\tsave(node, container) {\r\n\t\t//let subsections = container.getSubSections(); // Populate subsections with elements in this body\r\n\t\tlet form = FORM.createEmptyForm(node, false).addClass('saveContainer').setPostUrl(container.className + '/Set');\r\n\t\tform.fieldset.formElementGroup.addInputElements(this.createContainerInputs(form, container));\r\n\t\tform.afterSuccessfulPost = () => {\r\n\t\t\tcontainer.setLabel(form.el.elements.label.value);\r\n\t\t\tthis.refreshParentContainer(container);\r\n\t\t};\r\n\t\t$(node.el).collapse('show');\r\n\t\t//return form;\r\n\t}\r\n\t/**\r\n\t    If dataId or attributesId exists, extract the appropriate values\r\n\t    @param {number} modelId The object's unique identifier\r\n\t    @param {object} data The object to be saved\r\n\t    @returns {void}\r\n\t*/\r\n\tquickSaveFormPost(modelId, data) { //console.log('QuickSaveFormPost:' + modelId, data);\r\n\t\tif (modelId > 0) {\r\n\t\t\t//console.log(50, 'Saving FormPost: ' + modelId);\r\n\t\t\tlet form = FORM.createEmptyForm(this, true);\r\n\t\t\tlet inputs = [];\r\n\t\t\t//console.log('Adding data attributes');\r\n\t\t\tfor (let key in data) {\r\n\t\t\t\tif (Reflect.call(data, key)) { // if (Object.prototype.hasOwnProperty.call(data, key)) {\r\n\t\t\t\t\t//console.log('Key', key);\r\n\t\t\t\t\t//console.log('Value', this.htmlEncode(data[key]));\r\n\t\t\t\t\tinputs.push(this.createInputModel('INPUT', key, key, this.htmlEncode(data[key])));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tform.fieldset.formElementGroup.addInputElements(inputs);\r\n\t\t\tform.setPostUrl('FormPost/Set');\r\n\t\t\tform.post();\r\n\t\t\tform.afterSuccessfulPost = () => {\r\n\t\t\t\tform.destroy();\r\n\t\t\t\t//console.log('FormPost: ' + modelId + ' has been quicksaved');\r\n\t\t\t};\r\n\t\t}\r\n\t\t/*else {\r\n\t\t\tconsole.log('No modelId provided');\r\n\t\t}*/\r\n\t}\r\n\t/**\r\n\t    Displays a prompt that performs a save of the container, it's \r\n\t    attributes and any data objects associated with it.\r\n        @param {CONTAINER} container The Container to save\r\n\t    @param {BOOLEAN} noPrompt If false (default), no prompt is displayed\r\n\t    @returns {BOOLEAN} True if successful\r\n\t */\r\n    quickSave(container, noPrompt = false) {\r\n        /* eslint-disable-next-line no-alert */\r\n\t\tif (noPrompt || confirm('Quick Save ' + this.className + '(' + container.id + ') : ' + container.label + ' ?')) {\r\n\t\t\t//console.log(this.className + '.save()', this);\r\n\t\t\t// Populate subsections with elements in this body\r\n\t\t\t//let subsections = container.getSubSections();\r\n\t\t\tlet form = FORM.createEmptyForm(container, true);\r\n\t\t\tform.fieldset.formElementGroup.addInputElements(this.createContainerInputs(form, container));\r\n\t\t\tform.setPostUrl(container.className + '/Set');\r\n\t\t\tform.post();\r\n\t\t\tform.afterSuccessfulPost = () => {\r\n\t\t\t\tcontainer.setLabel(form.el.elements.label.value);\r\n\t\t\t\tform.destroy();\r\n\t\t\t\tcontainer.quickSaveFormPost(container.dataId, container.data);\r\n\t\t\t\tcontainer.quickSaveFormPost(container.attributesId, container.attributes);\r\n\t\t\t};\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t    Creates the default Container Inputs for CRUD Actions\r\n\t    @param {FORM} form A crud form\r\n\t    @param {CONTAINER} container The specified container for crud actions\r\n\t    @returns {Array<MODEL>} An array of input models\r\n\t*/\r\n\tcreateContainerInputs(form, container) {\r\n\t\tlet subsections = container.getSubSections();\r\n\t\treturn [\r\n\t\t\tform.createInputModel('INPUT', 'element', 'element', container.get('element')),\r\n\t\t\tform.createInputModel('INPUT', 'id', 'ID', container.get('id').toString()).set({ 'id': 0 }),\r\n\t\t\tform.createInputModel('INPUT', 'label', 'Label', typeof container.get('label') === 'object' ? container.get('label').el.innerHTML.toString() : container.get('label').toString()),\r\n\t\t\tform.createInputModel('INPUT', 'subsections', 'SubSections', subsections.length > 0 ? subsections.toString() : '0'),\r\n\t\t\tform.createInputModel('INPUT', 'status', 'Status', container.get('status').toString(), 'NUMBER'),\r\n\t\t\tform.createInputModel('BUTTON', 'dataId', 'dataId', container.get('dataId').toString(), 'FORMPOSTINPUT'),\r\n\t\t\tform.createInputModel('BUTTON', 'attributesId', 'attributesId', container.get('attributesId').toString(), 'FORMPOSTINPUT'),\r\n\t\t\tform.createInputModel('BUTTON', 'descriptionId', 'descriptionId', container.get('descriptionId').toString(), 'FORMPOSTINPUT'),\r\n\t\t\tform.createInputModel('BUTTON', 'shared', 'shared', container.get('shared').toString(), 'NUMBER')\r\n\t\t];\r\n\t}\r\n}\r\nexport { ATTRIBUTES, EL, MODEL };\r\n/* eslint-enable */"]}